

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Sep 11 13:56:24 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0000                     	;# 
   173     0001                     	;# 
   174     0002                     	;# 
   175     0003                     	;# 
   176     0004                     	;# 
   177     0005                     	;# 
   178     0006                     	;# 
   179     0007                     	;# 
   180     0008                     	;# 
   181     0009                     	;# 
   182     000A                     	;# 
   183     000B                     	;# 
   184     000C                     	;# 
   185     000D                     	;# 
   186     000E                     	;# 
   187     000E                     	;# 
   188     000F                     	;# 
   189     0010                     	;# 
   190     0011                     	;# 
   191     0012                     	;# 
   192     0013                     	;# 
   193     0014                     	;# 
   194     0015                     	;# 
   195     0015                     	;# 
   196     0016                     	;# 
   197     0017                     	;# 
   198     0018                     	;# 
   199     0019                     	;# 
   200     001A                     	;# 
   201     001B                     	;# 
   202     001B                     	;# 
   203     001C                     	;# 
   204     001D                     	;# 
   205     001E                     	;# 
   206     001F                     	;# 
   207     0081                     	;# 
   208     0085                     	;# 
   209     0086                     	;# 
   210     0087                     	;# 
   211     0088                     	;# 
   212     0089                     	;# 
   213     008C                     	;# 
   214     008D                     	;# 
   215     008E                     	;# 
   216     0091                     	;# 
   217     0092                     	;# 
   218     0093                     	;# 
   219     0094                     	;# 
   220     0098                     	;# 
   221     0099                     	;# 
   222     009C                     	;# 
   223     009D                     	;# 
   224     009E                     	;# 
   225     009F                     	;# 
   226     010C                     	;# 
   227     010D                     	;# 
   228     010E                     	;# 
   229     010F                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232                           
   233                           	psect	idataBANK0
   234     0680                     __pidataBANK0:
   235                           
   236                           ;initializer for main@F856
   237     0680  343F               	retlw	63
   238     0681  3406               	retlw	6
   239     0682  345B               	retlw	91
   240     0683  344F               	retlw	79
   241     0684  3466               	retlw	102
   242     0685  346D               	retlw	109
   243     0686  347D               	retlw	125
   244     0687  3407               	retlw	7
   245     0688  347F               	retlw	127
   246     0689  346F               	retlw	111
   247     068A  3400               	retlw	0
   248     068B  3400               	retlw	0
   249     0008                     _PORTD	set	8
   250     0005                     _PORTA	set	5
   251     0085                     _TRISA	set	133
   252     0088                     _TRISD	set	136
   253                           
   254                           	psect	cinit
   255     07EE                     start_initialization:	
   256                           ; #config settings
   257                           
   258     07EE                     __initialization:
   259                           
   260                           ; Initialize objects allocated to BANK0
   261     07EE  1383               	bcf	3,7	;select IRP bank0
   262     07EF  303E               	movlw	low (__pdataBANK0+12)
   263     07F0  00FD               	movwf	btemp+-1
   264     07F1  3006               	movlw	high __pidataBANK0
   265     07F2  00FE               	movwf	btemp
   266     07F3  3080               	movlw	low __pidataBANK0
   267     07F4  00FF               	movwf	btemp+1
   268     07F5  3032               	movlw	low __pdataBANK0
   269     07F6  0084               	movwf	4
   270     07F7  120A  118A  2690  120A  118A  	fcall	init_ram0
   271     07FC                     end_of_initialization:	
   272                           ;End of C runtime variable initialization code
   273                           
   274     07FC                     __end_of__initialization:
   275     07FC  0183               	clrf	3
   276     07FD  120A  118A  2F4E   	ljmp	_main	;jump to C main() function
   277                           
   278                           	psect	dataBANK0
   279     0032                     __pdataBANK0:
   280     0032                     main@F856:
   281     0032                     	ds	12
   282                           
   283                           	psect	inittext
   284     068C                     init_fetch0:	
   285                           ;	Called with low address in FSR and high address in W
   286                           
   287     068C  087E               	movf	btemp,w
   288     068D  008A               	movwf	10
   289     068E  087F               	movf	btemp+1,w
   290     068F  0082               	movwf	2
   291     0690                     init_ram0:	
   292                           ;Called with:
   293                           ;	high address of idata address in btemp 
   294                           ;	low address of idata address in btemp+1 
   295                           ;	low address of data in FSR
   296                           ;	high address + 1 of data in btemp-1
   297                           
   298     0690  120A  118A  268C  120A  118A  	fcall	init_fetch0
   299     0695  0080               	movwf	0
   300     0696  0A84               	incf	4,f
   301     0697  0804               	movf	4,w
   302     0698  067D               	xorwf	btemp+-1,w
   303     0699  1903               	btfsc	3,2
   304     069A  3400               	retlw	0
   305     069B  0AFF               	incf	btemp+1,f
   306     069C  1903               	btfsc	3,2
   307     069D  0AFE               	incf	btemp,f
   308     069E  2E90               	goto	init_ram0
   309                           
   310                           	psect	cstackCOMMON
   311     0070                     __pcstackCOMMON:
   312     0070                     ?_init_ssd:
   313     0070                     ??_init_ssd:	
   314                           ; 1 bytes @ 0x0
   315                           
   316     0070                     ?_display:	
   317                           ; 1 bytes @ 0x0
   318                           
   319     0070                     ??_display:	
   320                           ; 1 bytes @ 0x0
   321                           
   322     0070                     ?_init_config:	
   323                           ; 1 bytes @ 0x0
   324                           
   325     0070                     ??_init_config:	
   326                           ; 1 bytes @ 0x0
   327                           
   328     0070                     ?_main:	
   329                           ; 1 bytes @ 0x0
   330                           
   331     0070                     ?___awmod:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0070                     ___awmod@divisor:	
   335                           ; 2 bytes @ 0x0
   336                           
   337                           
   338                           ; 2 bytes @ 0x0
   339     0070                     	ds	2
   340     0072                     ___awmod@dividend:
   341                           
   342                           ; 2 bytes @ 0x2
   343     0072                     	ds	2
   344     0074                     ??___awmod:
   345     0074                     display@wait:	
   346                           ; 1 bytes @ 0x4
   347                           
   348                           
   349                           ; 4 bytes @ 0x4
   350     0074                     	ds	1
   351     0075                     ___awmod@counter:
   352                           
   353                           ; 1 bytes @ 0x5
   354     0075                     	ds	1
   355     0076                     ___awmod@sign:
   356                           
   357                           ; 1 bytes @ 0x6
   358     0076                     	ds	2
   359     0078                     display@data:
   360                           
   361                           ; 1 bytes @ 0x8
   362     0078                     	ds	1
   363     0079                     display@digit:
   364                           
   365                           ; 1 bytes @ 0x9
   366     0079                     	ds	1
   367     007A                     ??_main:
   368                           
   369                           ; 1 bytes @ 0xA
   370     007A                     	ds	4
   371                           
   372                           	psect	cstackBANK0
   373     0020                     __pcstackBANK0:
   374     0020                     main@digit:
   375                           
   376                           ; 12 bytes @ 0x0
   377     0020                     	ds	12
   378     002C                     main@ssd:
   379                           
   380                           ; 4 bytes @ 0xC
   381     002C                     	ds	4
   382     0030                     main@wait:
   383                           
   384                           ; 1 bytes @ 0x10
   385     0030                     	ds	1
   386     0031                     main@i:
   387                           
   388                           ; 1 bytes @ 0x11
   389     0031                     	ds	1
   390                           
   391                           	psect	maintext
   392     074E                     __pmaintext:	
   393 ;;
   394 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   395 ;;
   396 ;; *************** function _main *****************
   397 ;; Defined at:
   398 ;;		line 25 in file "main.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;  digit          12    0[BANK0 ] unsigned char [12]
   403 ;;  ssd             4   12[BANK0 ] unsigned char [4]
   404 ;;  i               1   17[BANK0 ] unsigned char 
   405 ;;  wait            1   16[BANK0 ] unsigned char 
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : B00/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   415 ;;      Params:         0       0       0       0       0
   416 ;;      Locals:         0      18       0       0       0
   417 ;;      Temps:          4       0       0       0       0
   418 ;;      Totals:         4      18       0       0       0
   419 ;;Total ram usage:       22 bytes
   420 ;; Hardware stack levels required when called: 2
   421 ;; This function calls:
   422 ;;		___awmod
   423 ;;		_display
   424 ;;		_init_config
   425 ;; This function is called by:
   426 ;;		Startup code after reset
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430     074E                     _main:	
   431                           ;psect for function _main
   432                           
   433     074E                     l784:	
   434                           ;incstack = 0
   435                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   436                           
   437                           
   438                           ;main.c: 28:             };main.c: 29:         }
   439     074E  3020               	movlw	main@digit& (0+255)
   440     074F  0084               	movwf	4
   441     0750  3032               	movlw	low main@F856
   442     0751  00FA               	movwf	??_main
   443     0752  0804               	movf	4,w
   444     0753  00FB               	movwf	??_main+1
   445     0754  300C               	movlw	12
   446     0755  00FC               	movwf	??_main+2
   447     0756                     u300:
   448     0756  087A               	movf	??_main,w
   449     0757  0084               	movwf	4
   450     0758  1383               	bcf	3,7	;select IRP bank0
   451     0759  0800               	movf	0,w
   452     075A  00FD               	movwf	??_main+3
   453     075B  0AFA               	incf	??_main,f
   454     075C  087B               	movf	??_main+1,w
   455     075D  0084               	movwf	4
   456     075E  087D               	movf	??_main+3,w
   457     075F  0080               	movwf	0
   458     0760  0AFB               	incf	??_main+1,f
   459     0761  0BFC               	decfsz	??_main+2,f
   460     0762  2F56               	goto	u300
   461     0763                     l786:
   462                           
   463                           ;main.c: 31: 
   464     0763  1283               	bcf	3,5	;RP0=0, select bank0
   465     0764  1303               	bcf	3,6	;RP1=0, select bank0
   466     0765  01B1               	clrf	main@i
   467     0766                     l788:
   468                           
   469                           ;main.c: 32:         ssd[0] = digit[i % 12];
   470     0766  01B0               	clrf	main@wait
   471     0767                     l790:
   472                           
   473                           ;main.c: 34:         ssd[2] = digit[(i + 2) % 12];
   474     0767  120A  118A  266E  120A  118A  	fcall	_init_config
   475     076C                     l792:
   476                           
   477                           ;main.c: 37:         display(ssd);;main.c: 38:     }
   478     076C  3001               	movlw	1
   479     076D  00FA               	movwf	??_main
   480     076E  087A               	movf	??_main,w
   481     076F  1283               	bcf	3,5	;RP0=0, select bank0
   482     0770  1303               	bcf	3,6	;RP1=0, select bank0
   483     0771  07B0               	addwf	main@wait,f
   484     0772  3051               	movlw	81
   485     0773  0630               	xorwf	main@wait,w
   486     0774  1D03               	btfss	3,2
   487     0775  2F77               	goto	u311
   488     0776  2F78               	goto	u310
   489     0777                     u311:
   490     0777  2F84               	goto	l800
   491     0778                     u310:
   492     0778                     l794:
   493                           
   494                           ;main.c: 39: ;main.c: 40:     return;
   495     0778  01B0               	clrf	main@wait
   496     0779                     l796:
   497                           
   498                           ;main.c: 41: }
   499     0779  3001               	movlw	1
   500     077A  00FA               	movwf	??_main
   501     077B  087A               	movf	??_main,w
   502     077C  07B1               	addwf	main@i,f
   503     077D  300E               	movlw	14
   504     077E  0631               	xorwf	main@i,w
   505     077F  1D03               	btfss	3,2
   506     0780  2F82               	goto	u321
   507     0781  2F83               	goto	u320
   508     0782                     u321:
   509     0782  2F84               	goto	l800
   510     0783                     u320:
   511     0783                     l798:
   512     0783  01B1               	clrf	main@i
   513     0784                     l800:
   514     0784  300C               	movlw	12
   515     0785  00F0               	movwf	___awmod@divisor
   516     0786  3000               	movlw	0
   517     0787  00F1               	movwf	___awmod@divisor+1
   518     0788  0831               	movf	main@i,w
   519     0789  00FA               	movwf	??_main
   520     078A  01FB               	clrf	??_main+1
   521     078B  087A               	movf	??_main,w
   522     078C  00F2               	movwf	___awmod@dividend
   523     078D  087B               	movf	??_main+1,w
   524     078E  00F3               	movwf	___awmod@dividend+1
   525     078F  120A  118A  26F5  120A  118A  	fcall	___awmod
   526     0794  0870               	movf	?___awmod,w
   527     0795  3E20               	addlw	(low (main@digit| 0))& (0+255)
   528     0796  0084               	movwf	4
   529     0797  1383               	bcf	3,7	;select IRP bank0
   530     0798  0800               	movf	0,w
   531     0799  1283               	bcf	3,5	;RP0=0, select bank0
   532     079A  1303               	bcf	3,6	;RP1=0, select bank0
   533     079B  00AC               	movwf	main@ssd
   534     079C                     l802:
   535     079C  300C               	movlw	12
   536     079D  00F0               	movwf	___awmod@divisor
   537     079E  3000               	movlw	0
   538     079F  00F1               	movwf	___awmod@divisor+1
   539     07A0  0831               	movf	main@i,w
   540     07A1  3E01               	addlw	1
   541     07A2  00F2               	movwf	___awmod@dividend
   542     07A3  3000               	movlw	0
   543     07A4  1803               	skipnc
   544     07A5  3001               	movlw	1
   545     07A6  00F3               	movwf	___awmod@dividend+1
   546     07A7  120A  118A  26F5  120A  118A  	fcall	___awmod
   547     07AC  0870               	movf	?___awmod,w
   548     07AD  3E20               	addlw	(low (main@digit| 0))& (0+255)
   549     07AE  0084               	movwf	4
   550     07AF  1383               	bcf	3,7	;select IRP bank0
   551     07B0  0800               	movf	0,w
   552     07B1  1283               	bcf	3,5	;RP0=0, select bank0
   553     07B2  1303               	bcf	3,6	;RP1=0, select bank0
   554     07B3  00AD               	movwf	main@ssd+1
   555     07B4                     l804:
   556     07B4  300C               	movlw	12
   557     07B5  00F0               	movwf	___awmod@divisor
   558     07B6  3000               	movlw	0
   559     07B7  00F1               	movwf	___awmod@divisor+1
   560     07B8  0831               	movf	main@i,w
   561     07B9  3E02               	addlw	2
   562     07BA  00F2               	movwf	___awmod@dividend
   563     07BB  3000               	movlw	0
   564     07BC  1803               	skipnc
   565     07BD  3001               	movlw	1
   566     07BE  00F3               	movwf	___awmod@dividend+1
   567     07BF  120A  118A  26F5  120A  118A  	fcall	___awmod
   568     07C4  0870               	movf	?___awmod,w
   569     07C5  3E20               	addlw	(low (main@digit| 0))& (0+255)
   570     07C6  0084               	movwf	4
   571     07C7  1383               	bcf	3,7	;select IRP bank0
   572     07C8  0800               	movf	0,w
   573     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   574     07CA  1303               	bcf	3,6	;RP1=0, select bank0
   575     07CB  00AE               	movwf	main@ssd+2
   576     07CC                     l806:
   577     07CC  300C               	movlw	12
   578     07CD  00F0               	movwf	___awmod@divisor
   579     07CE  3000               	movlw	0
   580     07CF  00F1               	movwf	___awmod@divisor+1
   581     07D0  0831               	movf	main@i,w
   582     07D1  3E03               	addlw	3
   583     07D2  00F2               	movwf	___awmod@dividend
   584     07D3  3000               	movlw	0
   585     07D4  1803               	skipnc
   586     07D5  3001               	movlw	1
   587     07D6  00F3               	movwf	___awmod@dividend+1
   588     07D7  120A  118A  26F5  120A  118A  	fcall	___awmod
   589     07DC  0870               	movf	?___awmod,w
   590     07DD  3E20               	addlw	(low (main@digit| 0))& (0+255)
   591     07DE  0084               	movwf	4
   592     07DF  1383               	bcf	3,7	;select IRP bank0
   593     07E0  0800               	movf	0,w
   594     07E1  1283               	bcf	3,5	;RP0=0, select bank0
   595     07E2  1303               	bcf	3,6	;RP1=0, select bank0
   596     07E3  00AF               	movwf	main@ssd+3
   597     07E4                     l808:
   598     07E4  302C               	movlw	(low (main@ssd| 0))& (0+255)
   599     07E5  120A  118A  269F  120A  118A  	fcall	_display
   600     07EA  2F6C               	goto	l792
   601     07EB  120A  118A  2800   	ljmp	start
   602     07EE                     __end_of_main:
   603                           
   604                           	psect	text1
   605     066E                     __ptext1:	
   606 ;; *************** function _init_config *****************
   607 ;; Defined at:
   608 ;;		line 20 in file "main.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0, pclath, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0
   625 ;;      Totals:         0       0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; Hardware stack levels required when called: 1
   629 ;; This function calls:
   630 ;;		_init_ssd
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636     066E                     _init_config:	
   637                           ;psect for function _init_config
   638                           
   639     066E                     l744:	
   640                           ;incstack = 0
   641                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   642                           
   643                           
   644                           ;main.c: 22:         if (wait++ == 80)
   645     066E  120A  118A  2674  120A  118A  	fcall	_init_ssd
   646     0673                     l26:
   647     0673  0008               	return
   648     0674                     __end_of_init_config:
   649                           
   650                           	psect	text2
   651     0674                     __ptext2:	
   652 ;; *************** function _init_ssd *****************
   653 ;; Defined at:
   654 ;;		line 4 in file "ssd.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, status,2
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   668 ;;      Params:         0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0
   671 ;;      Totals:         0       0       0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		_init_config
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681     0674                     _init_ssd:	
   682                           ;psect for function _init_ssd
   683                           
   684     0674                     l720:	
   685                           ;incstack = 0
   686                           ; Regs used in _init_ssd: [wreg+status,2]
   687                           
   688                           
   689                           ;ssd.c: 7:     TRISD = 0x00;
   690     0674  1683               	bsf	3,5	;RP0=1, select bank1
   691     0675  1303               	bcf	3,6	;RP1=0, select bank1
   692     0676  0188               	clrf	8	;volatile
   693     0677                     l722:
   694                           
   695                           ;ssd.c: 10:     TRISA = TRISA & 0x03;
   696     0677  0805               	movf	5,w	;volatile
   697     0678  3903               	andlw	3
   698     0679  0085               	movwf	5	;volatile
   699     067A                     l724:
   700                           
   701                           ;ssd.c: 12:     PORTA = PORTA & 0x03;
   702     067A  1283               	bcf	3,5	;RP0=0, select bank0
   703     067B  1303               	bcf	3,6	;RP1=0, select bank0
   704     067C  0805               	movf	5,w	;volatile
   705     067D  3903               	andlw	3
   706     067E  0085               	movwf	5	;volatile
   707     067F                     l11:
   708     067F  0008               	return
   709     0680                     __end_of_init_ssd:
   710                           
   711                           	psect	text3
   712     069F                     __ptext3:	
   713 ;; *************** function _display *****************
   714 ;; Defined at:
   715 ;;		line 15 in file "ssd.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  data            1    wreg     PTR unsigned char 
   718 ;;		 -> main@ssd(4), 
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  data            1    8[COMMON] PTR unsigned char 
   721 ;;		 -> main@ssd(4), 
   722 ;;  wait            4    4[COMMON] unsigned long 
   723 ;;  digit           1    9[COMMON] unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       0       0       0       0
   734 ;;      Locals:         6       0       0       0       0
   735 ;;      Temps:          4       0       0       0       0
   736 ;;      Totals:        10       0       0       0       0
   737 ;;Total ram usage:       10 bytes
   738 ;; Hardware stack levels used: 1
   739 ;; This function calls:
   740 ;;		Nothing
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746     069F                     _display:	
   747                           ;psect for function _display
   748                           
   749                           
   750                           ;incstack = 0
   751                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
   752                           ;display@data stored from wreg
   753     069F  00F8               	movwf	display@data
   754     06A0                     l726:
   755                           
   756                           ;ssd.c: 15: void display(unsigned char data[]);ssd.c: 16: {;ssd.c: 17:     unsigned char
      +                           digit;;ssd.c: 19:     for (digit = 0; digit < 4; digit++)
   757     06A0  01F9               	clrf	display@digit
   758     06A1                     l732:
   759                           
   760                           ;ssd.c: 20:     {;ssd.c: 21:         PORTD = data[digit];
   761     06A1  0879               	movf	display@digit,w
   762     06A2  0778               	addwf	display@data,w
   763     06A3  00F0               	movwf	??_display
   764     06A4  0870               	movf	??_display,w
   765     06A5  0084               	movwf	4
   766     06A6  1383               	bcf	3,7	;select IRP bank0
   767     06A7  0800               	movf	0,w
   768     06A8  1283               	bcf	3,5	;RP0=0, select bank0
   769     06A9  1303               	bcf	3,6	;RP1=0, select bank0
   770     06AA  0088               	movwf	8	;volatile
   771     06AB                     l734:
   772                           
   773                           ;ssd.c: 22:         PORTA = (unsigned char) ((PORTA & 0x03) | (0x04 << digit));
   774     06AB  3004               	movlw	4
   775     06AC  00F0               	movwf	??_display
   776     06AD  0A79               	incf	display@digit,w
   777     06AE  2EB1               	goto	u174
   778     06AF                     u175:
   779     06AF  1003               	clrc
   780     06B0  0DF0               	rlf	??_display,f
   781     06B1                     u174:
   782     06B1  3EFF               	addlw	-1
   783     06B2  1D03               	skipz
   784     06B3  2EAF               	goto	u175
   785     06B4  0805               	movf	5,w	;volatile
   786     06B5  3903               	andlw	3
   787     06B6  0470               	iorwf	??_display,w
   788     06B7  0085               	movwf	5	;volatile
   789     06B8                     l736:
   790                           
   791                           ;ssd.c: 24:         for (unsigned long int wait = 400; wait--;);
   792     06B8  3000               	movlw	0
   793     06B9  00F7               	movwf	display@wait+3
   794     06BA  3000               	movlw	0
   795     06BB  00F6               	movwf	display@wait+2
   796     06BC  3001               	movlw	1
   797     06BD  00F5               	movwf	display@wait+1
   798     06BE  3090               	movlw	144
   799     06BF  00F4               	movwf	display@wait
   800     06C0                     l738:
   801     06C0  3001               	movlw	1
   802     06C1  00F0               	movwf	??_display
   803     06C2  3000               	movlw	0
   804     06C3  00F1               	movwf	??_display+1
   805     06C4  3000               	movlw	0
   806     06C5  00F2               	movwf	??_display+2
   807     06C6  3000               	movlw	0
   808     06C7  00F3               	movwf	??_display+3
   809     06C8  0870               	movf	??_display,w
   810     06C9  02F4               	subwf	display@wait,f
   811     06CA  0871               	movf	??_display+1,w
   812     06CB  1C03               	skipc
   813     06CC  0F71               	incfsz	??_display+1,w
   814     06CD  2ECF               	goto	u185
   815     06CE  2ED0               	goto	u186
   816     06CF                     u185:
   817     06CF  02F5               	subwf	display@wait+1,f
   818     06D0                     u186:
   819     06D0  0872               	movf	??_display+2,w
   820     06D1  1C03               	skipc
   821     06D2  0F72               	incfsz	??_display+2,w
   822     06D3  2ED5               	goto	u187
   823     06D4  2ED6               	goto	u188
   824     06D5                     u187:
   825     06D5  02F6               	subwf	display@wait+2,f
   826     06D6                     u188:
   827     06D6  0873               	movf	??_display+3,w
   828     06D7  1C03               	skipc
   829     06D8  0F73               	incfsz	??_display+3,w
   830     06D9  2EDB               	goto	u189
   831     06DA  2EDC               	goto	u180
   832     06DB                     u189:
   833     06DB  02F7               	subwf	display@wait+3,f
   834     06DC                     u180:
   835     06DC  0A74               	incf	display@wait,w
   836     06DD  1D03               	skipz
   837     06DE  2EE9               	goto	u191
   838     06DF  0A75               	incf	display@wait+1,w
   839     06E0  1D03               	skipz
   840     06E1  2EE9               	goto	u191
   841     06E2  0A76               	incf	display@wait+2,w
   842     06E3  1D03               	skipz
   843     06E4  2EE9               	goto	u191
   844     06E5  0A77               	incf	display@wait+3,w
   845     06E6  1D03               	btfss	3,2
   846     06E7  2EE9               	goto	u191
   847     06E8  2EEA               	goto	u190
   848     06E9                     u191:
   849     06E9  2EC0               	goto	l738
   850     06EA                     u190:
   851     06EA                     l740:
   852                           
   853                           ;ssd.c: 25:     }
   854     06EA  3001               	movlw	1
   855     06EB  00F0               	movwf	??_display
   856     06EC  0870               	movf	??_display,w
   857     06ED  07F9               	addwf	display@digit,f
   858     06EE                     l742:
   859     06EE  3004               	movlw	4
   860     06EF  0279               	subwf	display@digit,w
   861     06F0  1C03               	skipc
   862     06F1  2EF3               	goto	u201
   863     06F2  2EF4               	goto	u200
   864     06F3                     u201:
   865     06F3  2EA1               	goto	l732
   866     06F4                     u200:
   867     06F4                     l19:
   868     06F4  0008               	return
   869     06F5                     __end_of_display:
   870                           
   871                           	psect	text4
   872     06F5                     __ptext4:	
   873 ;; *************** function ___awmod *****************
   874 ;; Defined at:
   875 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  divisor         2    0[COMMON] int 
   878 ;;  dividend        2    2[COMMON] int 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  sign            1    6[COMMON] unsigned char 
   881 ;;  counter         1    5[COMMON] unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;                  2    0[COMMON] int 
   884 ;; Registers used:
   885 ;;		wreg, status,2, status,0
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   891 ;;      Params:         4       0       0       0       0
   892 ;;      Locals:         2       0       0       0       0
   893 ;;      Temps:          1       0       0       0       0
   894 ;;      Totals:         7       0       0       0       0
   895 ;;Total ram usage:        7 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; This function calls:
   898 ;;		Nothing
   899 ;; This function is called by:
   900 ;;		_main
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904     06F5                     ___awmod:	
   905                           ;psect for function ___awmod
   906                           
   907     06F5                     l746:	
   908                           ;incstack = 0
   909                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   910                           
   911     06F5  01F6               	clrf	___awmod@sign
   912     06F6                     l748:
   913     06F6  1FF3               	btfss	___awmod@dividend+1,7
   914     06F7  2EF9               	goto	u211
   915     06F8  2EFA               	goto	u210
   916     06F9                     u211:
   917     06F9  2F01               	goto	l754
   918     06FA                     u210:
   919     06FA                     l750:
   920     06FA  09F2               	comf	___awmod@dividend,f
   921     06FB  09F3               	comf	___awmod@dividend+1,f
   922     06FC  0AF2               	incf	___awmod@dividend,f
   923     06FD  1903               	skipnz
   924     06FE  0AF3               	incf	___awmod@dividend+1,f
   925     06FF                     l752:
   926     06FF  01F6               	clrf	___awmod@sign
   927     0700  0AF6               	incf	___awmod@sign,f
   928     0701                     l754:
   929     0701  1FF1               	btfss	___awmod@divisor+1,7
   930     0702  2F04               	goto	u221
   931     0703  2F05               	goto	u220
   932     0704                     u221:
   933     0704  2F0A               	goto	l758
   934     0705                     u220:
   935     0705                     l756:
   936     0705  09F0               	comf	___awmod@divisor,f
   937     0706  09F1               	comf	___awmod@divisor+1,f
   938     0707  0AF0               	incf	___awmod@divisor,f
   939     0708  1903               	skipnz
   940     0709  0AF1               	incf	___awmod@divisor+1,f
   941     070A                     l758:
   942     070A  0870               	movf	___awmod@divisor,w
   943     070B  0471               	iorwf	___awmod@divisor+1,w
   944     070C  1903               	btfsc	3,2
   945     070D  2F0F               	goto	u231
   946     070E  2F10               	goto	u230
   947     070F                     u231:
   948     070F  2F3F               	goto	l776
   949     0710                     u230:
   950     0710                     l760:
   951     0710  01F5               	clrf	___awmod@counter
   952     0711  0AF5               	incf	___awmod@counter,f
   953     0712  2F1E               	goto	l766
   954     0713                     l762:
   955     0713  3001               	movlw	1
   956     0714                     u245:
   957     0714  1003               	clrc
   958     0715  0DF0               	rlf	___awmod@divisor,f
   959     0716  0DF1               	rlf	___awmod@divisor+1,f
   960     0717  3EFF               	addlw	-1
   961     0718  1D03               	skipz
   962     0719  2F14               	goto	u245
   963     071A                     l764:
   964     071A  3001               	movlw	1
   965     071B  00F4               	movwf	??___awmod
   966     071C  0874               	movf	??___awmod,w
   967     071D  07F5               	addwf	___awmod@counter,f
   968     071E                     l766:
   969     071E  1FF1               	btfss	___awmod@divisor+1,7
   970     071F  2F21               	goto	u251
   971     0720  2F22               	goto	u250
   972     0721                     u251:
   973     0721  2F13               	goto	l762
   974     0722                     u250:
   975     0722                     l768:
   976     0722  0871               	movf	___awmod@divisor+1,w
   977     0723  0273               	subwf	___awmod@dividend+1,w
   978     0724  1D03               	skipz
   979     0725  2F28               	goto	u265
   980     0726  0870               	movf	___awmod@divisor,w
   981     0727  0272               	subwf	___awmod@dividend,w
   982     0728                     u265:
   983     0728  1C03               	skipc
   984     0729  2F2B               	goto	u261
   985     072A  2F2C               	goto	u260
   986     072B                     u261:
   987     072B  2F32               	goto	l772
   988     072C                     u260:
   989     072C                     l770:
   990     072C  0870               	movf	___awmod@divisor,w
   991     072D  02F2               	subwf	___awmod@dividend,f
   992     072E  0871               	movf	___awmod@divisor+1,w
   993     072F  1C03               	skipc
   994     0730  03F3               	decf	___awmod@dividend+1,f
   995     0731  02F3               	subwf	___awmod@dividend+1,f
   996     0732                     l772:
   997     0732  3001               	movlw	1
   998     0733                     u275:
   999     0733  1003               	clrc
  1000     0734  0CF1               	rrf	___awmod@divisor+1,f
  1001     0735  0CF0               	rrf	___awmod@divisor,f
  1002     0736  3EFF               	addlw	-1
  1003     0737  1D03               	skipz
  1004     0738  2F33               	goto	u275
  1005     0739                     l774:
  1006     0739  3001               	movlw	1
  1007     073A  02F5               	subwf	___awmod@counter,f
  1008     073B  1D03               	btfss	3,2
  1009     073C  2F3E               	goto	u281
  1010     073D  2F3F               	goto	u280
  1011     073E                     u281:
  1012     073E  2F22               	goto	l768
  1013     073F                     u280:
  1014     073F                     l776:
  1015     073F  0876               	movf	___awmod@sign,w
  1016     0740  1903               	btfsc	3,2
  1017     0741  2F43               	goto	u291
  1018     0742  2F44               	goto	u290
  1019     0743                     u291:
  1020     0743  2F49               	goto	l780
  1021     0744                     u290:
  1022     0744                     l778:
  1023     0744  09F2               	comf	___awmod@dividend,f
  1024     0745  09F3               	comf	___awmod@dividend+1,f
  1025     0746  0AF2               	incf	___awmod@dividend,f
  1026     0747  1903               	skipnz
  1027     0748  0AF3               	incf	___awmod@dividend+1,f
  1028     0749                     l780:
  1029     0749  0873               	movf	___awmod@dividend+1,w
  1030     074A  00F1               	movwf	?___awmod+1
  1031     074B  0872               	movf	___awmod@dividend,w
  1032     074C  00F0               	movwf	?___awmod
  1033     074D                     l290:
  1034     074D  0008               	return
  1035     074E                     __end_of___awmod:
  1036     007E                     btemp	set	126	;btemp
  1037     007E                     wtemp0	set	126
  1038                           
  1039                           	psect	config
  1040                           
  1041                           ;Config register CONFIG @ 0x2007
  1042                           ;	Oscillator Selection bits
  1043                           ;	FOSC = 0x3, unprogrammed default
  1044                           ;	Watchdog Timer Enable bit
  1045                           ;	WDTE = OFF, WDT disabled
  1046                           ;	Power-up Timer Enable bit
  1047                           ;	PWRTE = 0x1, unprogrammed default
  1048                           ;	Brown-out Reset Enable bit
  1049                           ;	BOREN = 0x1, unprogrammed default
  1050                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1051                           ;	LVP = 0x1, unprogrammed default
  1052                           ;	Data EEPROM Memory Code Protection bit
  1053                           ;	CPD = 0x1, unprogrammed default
  1054                           ;	Flash Program Memory Write Enable bits
  1055                           ;	WRT = 0x3, unprogrammed default
  1056                           ;	In-Circuit Debugger Mode bit
  1057                           ;	DEBUG = 0x1, unprogrammed default
  1058                           ;	Flash Program Memory Code Protection bit
  1059                           ;	CP = 0x1, unprogrammed default
  1060     2007                     	org	8199
  1061     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(1) Largest target is 4
		 -> main@ssd(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    1397
                                             10 COMMON     4     4      0
                                              0 BANK0     18    18      0
                            ___awmod
                            _display
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                           _init_ssd
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                             10    10      0     168
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     904
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
   _display
   _init_config
     _init_ssd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2C      12        0.0%
ABS                  0      0      2C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Sep 11 13:56:24 2022

                      pc 0002                       l11 067F                       l26 0673  
                     l19 06F4                       fsr 0004                      l290 074D  
                    l720 0674                      l800 0784                      l722 0677  
                    l802 079C                      l740 06EA                      l732 06A1  
                    l724 067A                      l804 07B4                      l750 06FA  
                    l742 06EE                      l734 06AB                      l726 06A0  
                    l806 07CC                      l760 0710                      l752 06FF  
                    l736 06B8                      l744 066E                      l808 07E4  
                    l770 072C                      l762 0713                      l754 0701  
                    l746 06F5                      l738 06C0                      l780 0749  
                    l772 0732                      l764 071A                      l756 0705  
                    l748 06F6                      l774 0739                      l766 071E  
                    l758 070A                      l790 0767                      l768 0722  
                    l776 073F                      l792 076C                      l784 074E  
                    l778 0744                      l794 0778                      l786 0763  
                    l796 0779                      l788 0766                      l798 0783  
                    u200 06F4                      u201 06F3                      u210 06FA  
                    u211 06F9                      u220 0705                      u300 0756  
                    u221 0704                      u230 0710                      u310 0778  
                    u231 070F                      u311 0777                      u320 0783  
                    u321 0782                      u250 0722                      u251 0721  
                    u260 072C                      u180 06DC                      u261 072B  
                    u245 0714                      u190 06EA                      u174 06B1  
                    u191 06E9                      u175 06AF                      u280 073F  
                    u281 073E                      u265 0728                      u185 06CF  
                    u290 0744                      u186 06D0                      u291 0743  
                    u275 0733                      u187 06D5                      u188 06D6  
                    u189 06DB                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076              display@data 0078              display@wait 0074  
                   _main 074E                     btemp 007E                     start 0000  
                  ?_main 0070          __end_of___awmod 074E             ?_init_config 0070  
                  _PORTA 0005                    _PORTD 0008                    _TRISA 0085  
                  _TRISD 0088             display@digit 0079          __end_of_display 06F5  
                  main@i 0031                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 007A                ??___awmod 0074         __end_of_init_ssd 0680  
        ___awmod@divisor 0070          ___awmod@counter 0075                ??_display 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0680  
             __pmaintext 074E                ?_init_ssd 0070                  ___awmod 06F5  
                __ptext1 066E                  __ptext2 0674                  __ptext3 069F  
                __ptext4 06F5                  _display 069F         ___awmod@dividend 0072  
                main@ssd 002C     end_of_initialization 07FC               ??_init_ssd 0070  
    start_initialization 07EE               init_fetch0 068C              __pdataBANK0 0032  
          ??_init_config 0070                ___latbits 0002            __pcstackBANK0 0020  
               ?___awmod 0070                 ?_display 0070      __end_of_init_config 0674  
              main@digit 0020              _init_config 066E                 _init_ssd 0674  
               main@F856 0032                 main@wait 0030                 init_ram0 0690  
