

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Sep 11 14:02:06 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     009F                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     018C                     	;# 
   117     018D                     	;# 
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     001D                     	;# 
   151     001E                     	;# 
   152     001F                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     0086                     	;# 
   156     0087                     	;# 
   157     0088                     	;# 
   158     0089                     	;# 
   159     008C                     	;# 
   160     008D                     	;# 
   161     008E                     	;# 
   162     0091                     	;# 
   163     0092                     	;# 
   164     0093                     	;# 
   165     0094                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     018C                     	;# 
   177     018D                     	;# 
   178     0000                     	;# 
   179     0001                     	;# 
   180     0002                     	;# 
   181     0003                     	;# 
   182     0004                     	;# 
   183     0005                     	;# 
   184     0006                     	;# 
   185     0007                     	;# 
   186     0008                     	;# 
   187     0009                     	;# 
   188     000A                     	;# 
   189     000B                     	;# 
   190     000C                     	;# 
   191     000D                     	;# 
   192     000E                     	;# 
   193     000E                     	;# 
   194     000F                     	;# 
   195     0010                     	;# 
   196     0011                     	;# 
   197     0012                     	;# 
   198     0013                     	;# 
   199     0014                     	;# 
   200     0015                     	;# 
   201     0015                     	;# 
   202     0016                     	;# 
   203     0017                     	;# 
   204     0018                     	;# 
   205     0019                     	;# 
   206     001A                     	;# 
   207     001B                     	;# 
   208     001B                     	;# 
   209     001C                     	;# 
   210     001D                     	;# 
   211     001E                     	;# 
   212     001F                     	;# 
   213     0081                     	;# 
   214     0085                     	;# 
   215     0086                     	;# 
   216     0087                     	;# 
   217     0088                     	;# 
   218     0089                     	;# 
   219     008C                     	;# 
   220     008D                     	;# 
   221     008E                     	;# 
   222     0091                     	;# 
   223     0092                     	;# 
   224     0093                     	;# 
   225     0094                     	;# 
   226     0098                     	;# 
   227     0099                     	;# 
   228     009C                     	;# 
   229     009D                     	;# 
   230     009E                     	;# 
   231     009F                     	;# 
   232     010C                     	;# 
   233     010D                     	;# 
   234     010E                     	;# 
   235     010F                     	;# 
   236     018C                     	;# 
   237     018D                     	;# 
   238     0000                     	;# 
   239     0001                     	;# 
   240     0002                     	;# 
   241     0003                     	;# 
   242     0004                     	;# 
   243     0005                     	;# 
   244     0006                     	;# 
   245     0007                     	;# 
   246     0008                     	;# 
   247     0009                     	;# 
   248     000A                     	;# 
   249     000B                     	;# 
   250     000C                     	;# 
   251     000D                     	;# 
   252     000E                     	;# 
   253     000E                     	;# 
   254     000F                     	;# 
   255     0010                     	;# 
   256     0011                     	;# 
   257     0012                     	;# 
   258     0013                     	;# 
   259     0014                     	;# 
   260     0015                     	;# 
   261     0015                     	;# 
   262     0016                     	;# 
   263     0017                     	;# 
   264     0018                     	;# 
   265     0019                     	;# 
   266     001A                     	;# 
   267     001B                     	;# 
   268     001B                     	;# 
   269     001C                     	;# 
   270     001D                     	;# 
   271     001E                     	;# 
   272     001F                     	;# 
   273     0081                     	;# 
   274     0085                     	;# 
   275     0086                     	;# 
   276     0087                     	;# 
   277     0088                     	;# 
   278     0089                     	;# 
   279     008C                     	;# 
   280     008D                     	;# 
   281     008E                     	;# 
   282     0091                     	;# 
   283     0092                     	;# 
   284     0093                     	;# 
   285     0094                     	;# 
   286     0098                     	;# 
   287     0099                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     009F                     	;# 
   292     010C                     	;# 
   293     010D                     	;# 
   294     010E                     	;# 
   295     010F                     	;# 
   296     018C                     	;# 
   297     018D                     	;# 
   298     0000                     	;# 
   299     0001                     	;# 
   300     0002                     	;# 
   301     0003                     	;# 
   302     0004                     	;# 
   303     0005                     	;# 
   304     0006                     	;# 
   305     0007                     	;# 
   306     0008                     	;# 
   307     0009                     	;# 
   308     000A                     	;# 
   309     000B                     	;# 
   310     000C                     	;# 
   311     000D                     	;# 
   312     000E                     	;# 
   313     000E                     	;# 
   314     000F                     	;# 
   315     0010                     	;# 
   316     0011                     	;# 
   317     0012                     	;# 
   318     0013                     	;# 
   319     0014                     	;# 
   320     0015                     	;# 
   321     0015                     	;# 
   322     0016                     	;# 
   323     0017                     	;# 
   324     0018                     	;# 
   325     0019                     	;# 
   326     001A                     	;# 
   327     001B                     	;# 
   328     001B                     	;# 
   329     001C                     	;# 
   330     001D                     	;# 
   331     001E                     	;# 
   332     001F                     	;# 
   333     0081                     	;# 
   334     0085                     	;# 
   335     0086                     	;# 
   336     0087                     	;# 
   337     0088                     	;# 
   338     0089                     	;# 
   339     008C                     	;# 
   340     008D                     	;# 
   341     008E                     	;# 
   342     0091                     	;# 
   343     0092                     	;# 
   344     0093                     	;# 
   345     0094                     	;# 
   346     0098                     	;# 
   347     0099                     	;# 
   348     009C                     	;# 
   349     009D                     	;# 
   350     009E                     	;# 
   351     009F                     	;# 
   352     010C                     	;# 
   353     010D                     	;# 
   354     010E                     	;# 
   355     010F                     	;# 
   356     018C                     	;# 
   357     018D                     	;# 
   358                           
   359                           	psect	idataBANK0
   360     0276                     __pidataBANK0:
   361                           
   362                           ;initializer for main@F861
   363     0276  343F               	retlw	63
   364     0277  3406               	retlw	6
   365     0278  345B               	retlw	91
   366     0279  344F               	retlw	79
   367     027A  3466               	retlw	102
   368     027B  346D               	retlw	109
   369     027C  347D               	retlw	125
   370     027D  3407               	retlw	7
   371     027E  347F               	retlw	127
   372     027F  346F               	retlw	111
   373     0001                     _TMR0	set	1
   374     0008                     _PORTD	set	8
   375     0005                     _PORTA	set	5
   376     005A                     _TMR0IF	set	90
   377     005D                     _TMR0IE	set	93
   378     005F                     _GIE	set	95
   379     0085                     _TRISA	set	133
   380     0088                     _TRISD	set	136
   381     040B                     _PSA	set	1035
   382     040D                     _T0CS	set	1037
   383                           
   384                           	psect	cinit
   385     000F                     start_initialization:	
   386                           ; #config settings
   387                           
   388     000F                     __initialization:
   389                           
   390                           ; Initialize objects allocated to BANK0
   391     000F  1383               	bcf	3,7	;select IRP bank0
   392     0010  3044               	movlw	low (__pdataBANK0+10)
   393     0011  00FD               	movwf	btemp+-1
   394     0012  3002               	movlw	high __pidataBANK0
   395     0013  00FE               	movwf	btemp
   396     0014  3076               	movlw	low __pidataBANK0
   397     0015  00FF               	movwf	btemp+1
   398     0016  303A               	movlw	low __pdataBANK0
   399     0017  0084               	movwf	4
   400     0018  120A  118A  224F  120A  118A  	fcall	init_ram0
   401                           
   402                           ; Clear objects allocated to BANK0
   403     001D  01C4               	clrf	__pbssBANK0& (0+127)
   404     001E  01C5               	clrf	(__pbssBANK0+1)& (0+127)
   405                           
   406                           ; Clear objects allocated to COMMON
   407     001F  01F7               	clrf	__pbssCOMMON& (0+127)
   408     0020  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   409     0021  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   410     0022  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   411     0023                     end_of_initialization:	
   412                           ;End of C runtime variable initialization code
   413                           
   414     0023                     __end_of__initialization:
   415     0023  0183               	clrf	3
   416     0024  120A  118A  2827   	ljmp	_main	;jump to C main() function
   417                           
   418                           	psect	bssCOMMON
   419     0077                     __pbssCOMMON:
   420     0077                     _count_dp:
   421     0077                     	ds	2
   422     0079                     _count:
   423     0079                     	ds	2
   424                           
   425                           	psect	bssBANK0
   426     0044                     __pbssBANK0:
   427     0044                     _sec_flag:
   428     0044                     	ds	1
   429     0045                     _sec:
   430     0045                     	ds	1
   431                           
   432                           	psect	dataBANK0
   433     003A                     __pdataBANK0:
   434     003A                     main@F861:
   435     003A                     	ds	10
   436                           
   437                           	psect	inittext
   438     024B                     init_fetch0:	
   439                           ;	Called with low address in FSR and high address in W
   440                           
   441     024B  087E               	movf	btemp,w
   442     024C  008A               	movwf	10
   443     024D  087F               	movf	btemp+1,w
   444     024E  0082               	movwf	2
   445     024F                     init_ram0:	
   446                           ;Called with:
   447                           ;	high address of idata address in btemp 
   448                           ;	low address of idata address in btemp+1 
   449                           ;	low address of data in FSR
   450                           ;	high address + 1 of data in btemp-1
   451                           
   452     024F  120A  118A  224B  120A  118A  	fcall	init_fetch0
   453     0254  0080               	movwf	0
   454     0255  0A84               	incf	4,f
   455     0256  0804               	movf	4,w
   456     0257  067D               	xorwf	btemp+-1,w
   457     0258  1903               	btfsc	3,2
   458     0259  3400               	retlw	0
   459     025A  0AFF               	incf	btemp+1,f
   460     025B  1903               	btfsc	3,2
   461     025C  0AFE               	incf	btemp,f
   462     025D  2A4F               	goto	init_ram0
   463                           
   464                           	psect	cstackCOMMON
   465     0070                     __pcstackCOMMON:
   466     0070                     ?_init_ssd:
   467     0070                     ?_init_timer0:	
   468                           ; 1 bytes @ 0x0
   469                           
   470     0070                     ?_display:	
   471                           ; 1 bytes @ 0x0
   472                           
   473     0070                     ?_init_config:	
   474                           ; 1 bytes @ 0x0
   475                           
   476     0070                     ?_main:	
   477                           ; 1 bytes @ 0x0
   478                           
   479     0070                     ?_isr:	
   480                           ; 1 bytes @ 0x0
   481                           
   482     0070                     ??_isr:	
   483                           ; 1 bytes @ 0x0
   484                           
   485                           
   486                           ; 1 bytes @ 0x0
   487     0070                     	ds	3
   488     0073                     ??_init_ssd:
   489     0073                     ??_init_timer0:	
   490                           ; 1 bytes @ 0x3
   491                           
   492     0073                     ??_display:	
   493                           ; 1 bytes @ 0x3
   494                           
   495     0073                     ??_init_config:	
   496                           ; 1 bytes @ 0x3
   497                           
   498     0073                     ?___awdiv:	
   499                           ; 1 bytes @ 0x3
   500                           
   501     0073                     ?___awmod:	
   502                           ; 2 bytes @ 0x3
   503                           
   504     0073                     ___awdiv@divisor:	
   505                           ; 2 bytes @ 0x3
   506                           
   507     0073                     ___awmod@divisor:	
   508                           ; 2 bytes @ 0x3
   509                           
   510                           
   511                           ; 2 bytes @ 0x3
   512     0073                     	ds	2
   513     0075                     ___awdiv@dividend:
   514     0075                     ___awmod@dividend:	
   515                           ; 2 bytes @ 0x5
   516                           
   517                           
   518                           ; 2 bytes @ 0x5
   519     0075                     	ds	2
   520                           
   521                           	psect	cstackBANK0
   522     0020                     __pcstackBANK0:
   523     0020                     ??___awdiv:
   524     0020                     ??___awmod:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0020                     display@wait:	
   528                           ; 1 bytes @ 0x0
   529                           
   530                           
   531                           ; 4 bytes @ 0x0
   532     0020                     	ds	1
   533     0021                     ___awdiv@counter:
   534     0021                     ___awmod@counter:	
   535                           ; 1 bytes @ 0x1
   536                           
   537                           
   538                           ; 1 bytes @ 0x1
   539     0021                     	ds	1
   540     0022                     ___awdiv@sign:
   541     0022                     ___awmod@sign:	
   542                           ; 1 bytes @ 0x2
   543                           
   544                           
   545                           ; 1 bytes @ 0x2
   546     0022                     	ds	1
   547     0023                     ___awdiv@quotient:
   548                           
   549                           ; 2 bytes @ 0x3
   550     0023                     	ds	1
   551     0024                     display@data:
   552                           
   553                           ; 1 bytes @ 0x4
   554     0024                     	ds	1
   555     0025                     display@digit:
   556                           
   557                           ; 1 bytes @ 0x5
   558     0025                     	ds	1
   559     0026                     ??_main:
   560                           
   561                           ; 1 bytes @ 0x6
   562     0026                     	ds	4
   563     002A                     main@digit:
   564                           
   565                           ; 10 bytes @ 0xA
   566     002A                     	ds	10
   567     0034                     main@ssd:
   568                           
   569                           ; 4 bytes @ 0x14
   570     0034                     	ds	4
   571     0038                     main@min:
   572                           
   573                           ; 1 bytes @ 0x18
   574     0038                     	ds	1
   575     0039                     main@hour:
   576                           
   577                           ; 1 bytes @ 0x19
   578     0039                     	ds	1
   579                           
   580                           	psect	maintext
   581     0027                     __pmaintext:	
   582 ;;
   583 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   584 ;;
   585 ;; *************** function _main *****************
   586 ;; Defined at:
   587 ;;		line 34 in file "main.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  digit          10   10[BANK0 ] unsigned char [10]
   592 ;;  ssd             4   20[BANK0 ] unsigned char [4]
   593 ;;  hour            1   25[BANK0 ] unsigned char 
   594 ;;  min             1   24[BANK0 ] unsigned char 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : B00/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0
   605 ;;      Locals:         0      16       0       0       0
   606 ;;      Temps:          0       4       0       0       0
   607 ;;      Totals:         0      20       0       0       0
   608 ;;Total ram usage:       20 bytes
   609 ;; Hardware stack levels required when called: 3
   610 ;; This function calls:
   611 ;;		___awdiv
   612 ;;		___awmod
   613 ;;		_display
   614 ;;		_init_config
   615 ;; This function is called by:
   616 ;;		Startup code after reset
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620     0027                     _main:	
   621                           ;psect for function _main
   622                           
   623     0027                     l1086:	
   624                           ;incstack = 0
   625                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   626                           
   627                           
   628                           ;main.c: 37:         if (min == 60);main.c: 38:         {
   629     0027  302A               	movlw	main@digit& (0+255)
   630     0028  0084               	movwf	4
   631     0029  303A               	movlw	low main@F861
   632     002A  1283               	bcf	3,5	;RP0=0, select bank0
   633     002B  1303               	bcf	3,6	;RP1=0, select bank0
   634     002C  00A6               	movwf	??_main
   635     002D  0804               	movf	4,w
   636     002E  00A7               	movwf	??_main+1
   637     002F  300A               	movlw	10
   638     0030  00A8               	movwf	??_main+2
   639     0031                     u860:
   640     0031  0826               	movf	??_main,w
   641     0032  0084               	movwf	4
   642     0033  1383               	bcf	3,7	;select IRP bank0
   643     0034  0800               	movf	0,w
   644     0035  00A9               	movwf	??_main+3
   645     0036  0AA6               	incf	??_main,f
   646     0037  0827               	movf	??_main+1,w
   647     0038  0084               	movwf	4
   648     0039  0829               	movf	??_main+3,w
   649     003A  0080               	movwf	0
   650     003B  0AA7               	incf	??_main+1,f
   651     003C  0BA8               	decfsz	??_main+2,f
   652     003D  2831               	goto	u860
   653     003E                     l1088:
   654                           
   655                           ;main.c: 40:             min = 0;
   656     003E  300C               	movlw	12
   657     003F  00B9               	movwf	main@hour
   658     0040                     l1090:
   659                           
   660                           ;main.c: 41:         }
   661     0040  01B8               	clrf	main@min
   662     0041                     l1092:
   663                           
   664                           ;main.c: 43:         if (hour == 24)
   665     0041  120A  118A  225E  120A  118A  	fcall	_init_config
   666     0046                     l1094:
   667                           
   668                           ;main.c: 46:         };main.c: 48: 
   669     0046  303C               	movlw	60
   670     0047  1283               	bcf	3,5	;RP0=0, select bank0
   671     0048  1303               	bcf	3,6	;RP1=0, select bank0
   672     0049  0645               	xorwf	_sec,w
   673     004A  1D03               	btfss	3,2
   674     004B  284D               	goto	u871
   675     004C  284E               	goto	u870
   676     004D                     u871:
   677     004D  2853               	goto	l1100
   678     004E                     u870:
   679     004E                     l1096:
   680                           
   681                           ;main.c: 49:         ssd[0] = digit[hour / 10];;main.c: 50: 
   682     004E  3001               	movlw	1
   683     004F  00A6               	movwf	??_main
   684     0050  0826               	movf	??_main,w
   685     0051  07B8               	addwf	main@min,f
   686     0052                     l1098:
   687                           
   688                           ;main.c: 51:         if (sec_flag == 1)
   689     0052  01C5               	clrf	_sec
   690     0053                     l1100:
   691                           
   692                           ;main.c: 54:         }
   693     0053  303C               	movlw	60
   694     0054  0638               	xorwf	main@min,w
   695     0055  1D03               	btfss	3,2
   696     0056  2858               	goto	u881
   697     0057  2859               	goto	u880
   698     0058                     u881:
   699     0058  285E               	goto	l1106
   700     0059                     u880:
   701     0059                     l1102:
   702                           
   703                           ;main.c: 55:         else;main.c: 56:         {
   704     0059  3001               	movlw	1
   705     005A  00A6               	movwf	??_main
   706     005B  0826               	movf	??_main,w
   707     005C  07B9               	addwf	main@hour,f
   708     005D                     l1104:
   709                           
   710                           ;main.c: 57:             ssd[1] = digit[hour % 10];
   711     005D  01B8               	clrf	main@min
   712     005E                     l1106:
   713                           
   714                           ;main.c: 60:         ssd[2] = digit[min / 10];
   715     005E  3018               	movlw	24
   716     005F  0639               	xorwf	main@hour,w
   717     0060  1D03               	btfss	3,2
   718     0061  2863               	goto	u891
   719     0062  2864               	goto	u890
   720     0063                     u891:
   721     0063  2865               	goto	l1110
   722     0064                     u890:
   723     0064                     l1108:
   724                           
   725                           ;main.c: 61:         ssd[3] = digit[min % 10];;main.c: 62: 
   726     0064  01B9               	clrf	main@hour
   727     0065                     l1110:
   728                           
   729                           ;main.c: 66:     return;
   730     0065  300A               	movlw	10
   731     0066  00F3               	movwf	___awdiv@divisor
   732     0067  3000               	movlw	0
   733     0068  00F4               	movwf	___awdiv@divisor+1
   734     0069  0839               	movf	main@hour,w
   735     006A  00A6               	movwf	??_main
   736     006B  01A7               	clrf	??_main+1
   737     006C  0826               	movf	??_main,w
   738     006D  00F5               	movwf	___awdiv@dividend
   739     006E  0827               	movf	??_main+1,w
   740     006F  00F6               	movwf	___awdiv@dividend+1
   741     0070  120A  118A  20EE  120A  118A  	fcall	___awdiv
   742     0075  0873               	movf	?___awdiv,w
   743     0076  3E2A               	addlw	(low (main@digit| 0))& (0+255)
   744     0077  0084               	movwf	4
   745     0078  1383               	bcf	3,7	;select IRP bank0
   746     0079  0800               	movf	0,w
   747     007A  1283               	bcf	3,5	;RP0=0, select bank0
   748     007B  1303               	bcf	3,6	;RP1=0, select bank0
   749     007C  00B4               	movwf	main@ssd
   750     007D                     l1112:
   751     007D  0344               	decf	_sec_flag,w
   752     007E  1D03               	btfss	3,2
   753     007F  2881               	goto	u901
   754     0080  2882               	goto	u900
   755     0081                     u901:
   756     0081  289C               	goto	l1116
   757     0082                     u900:
   758     0082                     l1114:
   759     0082  300A               	movlw	10
   760     0083  00F3               	movwf	___awmod@divisor
   761     0084  3000               	movlw	0
   762     0085  00F4               	movwf	___awmod@divisor+1
   763     0086  0839               	movf	main@hour,w
   764     0087  00A6               	movwf	??_main
   765     0088  01A7               	clrf	??_main+1
   766     0089  0826               	movf	??_main,w
   767     008A  00F5               	movwf	___awmod@dividend
   768     008B  0827               	movf	??_main+1,w
   769     008C  00F6               	movwf	___awmod@dividend+1
   770     008D  120A  118A  2157  120A  118A  	fcall	___awmod
   771     0092  0873               	movf	?___awmod,w
   772     0093  3E2A               	addlw	(low (main@digit| 0))& (0+255)
   773     0094  0084               	movwf	4
   774     0095  1383               	bcf	3,7	;select IRP bank0
   775     0096  0800               	movf	0,w
   776     0097  3880               	iorlw	128
   777     0098  1283               	bcf	3,5	;RP0=0, select bank0
   778     0099  1303               	bcf	3,6	;RP1=0, select bank0
   779     009A  00B5               	movwf	main@ssd+1
   780     009B  28B4               	goto	l31
   781     009C                     l1116:
   782     009C  300A               	movlw	10
   783     009D  00F3               	movwf	___awmod@divisor
   784     009E  3000               	movlw	0
   785     009F  00F4               	movwf	___awmod@divisor+1
   786     00A0  0839               	movf	main@hour,w
   787     00A1  00A6               	movwf	??_main
   788     00A2  01A7               	clrf	??_main+1
   789     00A3  0826               	movf	??_main,w
   790     00A4  00F5               	movwf	___awmod@dividend
   791     00A5  0827               	movf	??_main+1,w
   792     00A6  00F6               	movwf	___awmod@dividend+1
   793     00A7  120A  118A  2157  120A  118A  	fcall	___awmod
   794     00AC  0873               	movf	?___awmod,w
   795     00AD  3E2A               	addlw	(low (main@digit| 0))& (0+255)
   796     00AE  0084               	movwf	4
   797     00AF  1383               	bcf	3,7	;select IRP bank0
   798     00B0  0800               	movf	0,w
   799     00B1  1283               	bcf	3,5	;RP0=0, select bank0
   800     00B2  1303               	bcf	3,6	;RP1=0, select bank0
   801     00B3  00B5               	movwf	main@ssd+1
   802     00B4                     l31:
   803     00B4  300A               	movlw	10
   804     00B5  00F3               	movwf	___awdiv@divisor
   805     00B6  3000               	movlw	0
   806     00B7  00F4               	movwf	___awdiv@divisor+1
   807     00B8  0838               	movf	main@min,w
   808     00B9  00A6               	movwf	??_main
   809     00BA  01A7               	clrf	??_main+1
   810     00BB  0826               	movf	??_main,w
   811     00BC  00F5               	movwf	___awdiv@dividend
   812     00BD  0827               	movf	??_main+1,w
   813     00BE  00F6               	movwf	___awdiv@dividend+1
   814     00BF  120A  118A  20EE  120A  118A  	fcall	___awdiv
   815     00C4  0873               	movf	?___awdiv,w
   816     00C5  3E2A               	addlw	(low (main@digit| 0))& (0+255)
   817     00C6  0084               	movwf	4
   818     00C7  1383               	bcf	3,7	;select IRP bank0
   819     00C8  0800               	movf	0,w
   820     00C9  1283               	bcf	3,5	;RP0=0, select bank0
   821     00CA  1303               	bcf	3,6	;RP1=0, select bank0
   822     00CB  00B6               	movwf	main@ssd+2
   823     00CC  300A               	movlw	10
   824     00CD  00F3               	movwf	___awmod@divisor
   825     00CE  3000               	movlw	0
   826     00CF  00F4               	movwf	___awmod@divisor+1
   827     00D0  0838               	movf	main@min,w
   828     00D1  00A6               	movwf	??_main
   829     00D2  01A7               	clrf	??_main+1
   830     00D3  0826               	movf	??_main,w
   831     00D4  00F5               	movwf	___awmod@dividend
   832     00D5  0827               	movf	??_main+1,w
   833     00D6  00F6               	movwf	___awmod@dividend+1
   834     00D7  120A  118A  2157  120A  118A  	fcall	___awmod
   835     00DC  0873               	movf	?___awmod,w
   836     00DD  3E2A               	addlw	(low (main@digit| 0))& (0+255)
   837     00DE  0084               	movwf	4
   838     00DF  1383               	bcf	3,7	;select IRP bank0
   839     00E0  0800               	movf	0,w
   840     00E1  1283               	bcf	3,5	;RP0=0, select bank0
   841     00E2  1303               	bcf	3,6	;RP1=0, select bank0
   842     00E3  00B7               	movwf	main@ssd+3
   843     00E4  3034               	movlw	(low (main@ssd| 0))& (0+255)
   844     00E5  120A  118A  21B2  120A  118A  	fcall	_display
   845     00EA  2846               	goto	l1094
   846     00EB  120A  118A  280C   	ljmp	start
   847     00EE                     __end_of_main:
   848                           
   849                           	psect	text1
   850     025E                     __ptext1:	
   851 ;; *************** function _init_config *****************
   852 ;; Defined at:
   853 ;;		line 26 in file "main.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, status,2, status,0, pclath, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   867 ;;      Params:         0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used: 1
   873 ;; Hardware stack levels required when called: 2
   874 ;; This function calls:
   875 ;;		_init_ssd
   876 ;;		_init_timer0
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882     025E                     _init_config:	
   883                           ;psect for function _init_config
   884                           
   885     025E                     l852:	
   886                           ;incstack = 0
   887                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   888                           
   889                           
   890                           ;main.c: 28:     while (1)
   891     025E  120A  118A  226A  120A  118A  	fcall	_init_ssd
   892                           
   893                           ;main.c: 29:     {
   894     0263  120A  118A  2280  120A  118A  	fcall	_init_timer0
   895     0268                     l854:
   896                           
   897                           ;main.c: 31:         if (sec == 60)
   898     0268  178B               	bsf	11,7	;volatile
   899     0269                     l19:
   900     0269  0008               	return
   901     026A                     __end_of_init_config:
   902                           
   903                           	psect	text2
   904     0280                     __ptext2:	
   905 ;; *************** function _init_timer0 *****************
   906 ;; Defined at:
   907 ;;		line 3 in file "timers.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;		None
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   921 ;;      Params:         0       0       0       0       0
   922 ;;      Locals:         0       0       0       0       0
   923 ;;      Temps:          0       0       0       0       0
   924 ;;      Totals:         0       0       0       0       0
   925 ;;Total ram usage:        0 bytes
   926 ;; Hardware stack levels used: 1
   927 ;; Hardware stack levels required when called: 1
   928 ;; This function calls:
   929 ;;		Nothing
   930 ;; This function is called by:
   931 ;;		_init_config
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935     0280                     _init_timer0:	
   936                           ;psect for function _init_timer0
   937                           
   938     0280                     l846:	
   939                           ;incstack = 0
   940                           ; Regs used in _init_timer0: [wreg]
   941                           
   942                           
   943                           ;timers.c: 5:     T0CS = 0;
   944     0280  1683               	bsf	3,5	;RP0=1, select bank1
   945     0281  1303               	bcf	3,6	;RP1=0, select bank1
   946     0282  1281               	bcf	1,5	;volatile
   947                           
   948                           ;timers.c: 7:     PSA = 1;
   949     0283  1581               	bsf	1,3	;volatile
   950     0284                     l848:
   951                           
   952                           ;timers.c: 9:     TMR0 = 6;
   953     0284  3006               	movlw	6
   954     0285  1283               	bcf	3,5	;RP0=0, select bank0
   955     0286  1303               	bcf	3,6	;RP1=0, select bank0
   956     0287  0081               	movwf	1	;volatile
   957     0288                     l850:
   958                           
   959                           ;timers.c: 11:     TMR0IE = 1;
   960     0288  168B               	bsf	11,5	;volatile
   961     0289                     l64:
   962     0289  0008               	return
   963     028A                     __end_of_init_timer0:
   964                           
   965                           	psect	text3
   966     026A                     __ptext3:	
   967 ;; *************** function _init_ssd *****************
   968 ;; Defined at:
   969 ;;		line 4 in file "ssd.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, status,2
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used: 1
   989 ;; Hardware stack levels required when called: 1
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_init_config
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997     026A                     _init_ssd:	
   998                           ;psect for function _init_ssd
   999                           
  1000     026A                     l840:	
  1001                           ;incstack = 0
  1002                           ; Regs used in _init_ssd: [wreg+status,2]
  1003                           
  1004                           
  1005                           ;ssd.c: 7:     TRISD = 0x00;
  1006     026A  1683               	bsf	3,5	;RP0=1, select bank1
  1007     026B  1303               	bcf	3,6	;RP1=0, select bank1
  1008     026C  0188               	clrf	8	;volatile
  1009     026D                     l842:
  1010                           
  1011                           ;ssd.c: 10:     TRISA = TRISA & 0x03;
  1012     026D  0805               	movf	5,w	;volatile
  1013     026E  3903               	andlw	3
  1014     026F  0085               	movwf	5	;volatile
  1015     0270                     l844:
  1016                           
  1017                           ;ssd.c: 12:     PORTA = PORTA & 0x03;
  1018     0270  1283               	bcf	3,5	;RP0=0, select bank0
  1019     0271  1303               	bcf	3,6	;RP1=0, select bank0
  1020     0272  0805               	movf	5,w	;volatile
  1021     0273  3903               	andlw	3
  1022     0274  0085               	movwf	5	;volatile
  1023     0275                     l45:
  1024     0275  0008               	return
  1025     0276                     __end_of_init_ssd:
  1026                           
  1027                           	psect	text4
  1028     01B2                     __ptext4:	
  1029 ;; *************** function _display *****************
  1030 ;; Defined at:
  1031 ;;		line 15 in file "ssd.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  data            1    wreg     PTR unsigned char 
  1034 ;;		 -> main@ssd(4), 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  data            1    4[BANK0 ] PTR unsigned char 
  1037 ;;		 -> main@ssd(4), 
  1038 ;;  wait            4    0[BANK0 ] unsigned long 
  1039 ;;  digit           1    5[BANK0 ] unsigned char 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       0       0       0       0
  1050 ;;      Locals:         0       6       0       0       0
  1051 ;;      Temps:          4       0       0       0       0
  1052 ;;      Totals:         4       6       0       0       0
  1053 ;;Total ram usage:       10 bytes
  1054 ;; Hardware stack levels used: 1
  1055 ;; Hardware stack levels required when called: 1
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_main
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063     01B2                     _display:	
  1064                           ;psect for function _display
  1065                           
  1066                           
  1067                           ;incstack = 0
  1068                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
  1069                           ;display@data stored from wreg
  1070     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1071     01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1072     01B4  00A4               	movwf	display@data
  1073     01B5                     l856:
  1074                           
  1075                           ;ssd.c: 15: void display(unsigned char data[]);ssd.c: 16: {;ssd.c: 17:     unsigned char
      +                           digit;;ssd.c: 19:     for (digit = 0; digit < 4; digit++)
  1076     01B5  01A5               	clrf	display@digit
  1077     01B6                     l862:
  1078                           
  1079                           ;ssd.c: 20:     {;ssd.c: 21:         PORTD = data[digit];
  1080     01B6  0825               	movf	display@digit,w
  1081     01B7  0724               	addwf	display@data,w
  1082     01B8  00F3               	movwf	??_display
  1083     01B9  0873               	movf	??_display,w
  1084     01BA  0084               	movwf	4
  1085     01BB  1383               	bcf	3,7	;select IRP bank0
  1086     01BC  0800               	movf	0,w
  1087     01BD  0088               	movwf	8	;volatile
  1088     01BE                     l864:
  1089                           
  1090                           ;ssd.c: 22:         PORTA = (unsigned char) ((PORTA & 0x03) | (0x04 << digit));
  1091     01BE  3004               	movlw	4
  1092     01BF  00F3               	movwf	??_display
  1093     01C0  0A25               	incf	display@digit,w
  1094     01C1  29C4               	goto	u344
  1095     01C2                     u345:
  1096     01C2  1003               	clrc
  1097     01C3  0DF3               	rlf	??_display,f
  1098     01C4                     u344:
  1099     01C4  3EFF               	addlw	-1
  1100     01C5  1D03               	skipz
  1101     01C6  29C2               	goto	u345
  1102     01C7  0805               	movf	5,w	;volatile
  1103     01C8  3903               	andlw	3
  1104     01C9  0473               	iorwf	??_display,w
  1105     01CA  0085               	movwf	5	;volatile
  1106     01CB                     l866:
  1107                           
  1108                           ;ssd.c: 24:         for (unsigned long int wait = 400; wait--;);
  1109     01CB  3000               	movlw	0
  1110     01CC  00A3               	movwf	display@wait+3
  1111     01CD  3000               	movlw	0
  1112     01CE  00A2               	movwf	display@wait+2
  1113     01CF  3001               	movlw	1
  1114     01D0  00A1               	movwf	display@wait+1
  1115     01D1  3090               	movlw	144
  1116     01D2  00A0               	movwf	display@wait
  1117     01D3                     l868:
  1118     01D3  3001               	movlw	1
  1119     01D4  00F3               	movwf	??_display
  1120     01D5  3000               	movlw	0
  1121     01D6  00F4               	movwf	??_display+1
  1122     01D7  3000               	movlw	0
  1123     01D8  00F5               	movwf	??_display+2
  1124     01D9  3000               	movlw	0
  1125     01DA  00F6               	movwf	??_display+3
  1126     01DB  0873               	movf	??_display,w
  1127     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1128     01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1129     01DE  02A0               	subwf	display@wait,f
  1130     01DF  0874               	movf	??_display+1,w
  1131     01E0  1C03               	skipc
  1132     01E1  0F74               	incfsz	??_display+1,w
  1133     01E2  29E4               	goto	u355
  1134     01E3  29E5               	goto	u356
  1135     01E4                     u355:
  1136     01E4  02A1               	subwf	display@wait+1,f
  1137     01E5                     u356:
  1138     01E5  0875               	movf	??_display+2,w
  1139     01E6  1C03               	skipc
  1140     01E7  0F75               	incfsz	??_display+2,w
  1141     01E8  29EA               	goto	u357
  1142     01E9  29EB               	goto	u358
  1143     01EA                     u357:
  1144     01EA  02A2               	subwf	display@wait+2,f
  1145     01EB                     u358:
  1146     01EB  0876               	movf	??_display+3,w
  1147     01EC  1C03               	skipc
  1148     01ED  0F76               	incfsz	??_display+3,w
  1149     01EE  29F0               	goto	u359
  1150     01EF  29F1               	goto	u350
  1151     01F0                     u359:
  1152     01F0  02A3               	subwf	display@wait+3,f
  1153     01F1                     u350:
  1154     01F1  0A20               	incf	display@wait,w
  1155     01F2  1D03               	skipz
  1156     01F3  29FE               	goto	u361
  1157     01F4  0A21               	incf	display@wait+1,w
  1158     01F5  1D03               	skipz
  1159     01F6  29FE               	goto	u361
  1160     01F7  0A22               	incf	display@wait+2,w
  1161     01F8  1D03               	skipz
  1162     01F9  29FE               	goto	u361
  1163     01FA  0A23               	incf	display@wait+3,w
  1164     01FB  1D03               	btfss	3,2
  1165     01FC  29FE               	goto	u361
  1166     01FD  29FF               	goto	u360
  1167     01FE                     u361:
  1168     01FE  29D3               	goto	l868
  1169     01FF                     u360:
  1170     01FF                     l870:
  1171                           
  1172                           ;ssd.c: 25:     }
  1173     01FF  3001               	movlw	1
  1174     0200  00F3               	movwf	??_display
  1175     0201  0873               	movf	??_display,w
  1176     0202  1283               	bcf	3,5	;RP0=0, select bank0
  1177     0203  1303               	bcf	3,6	;RP1=0, select bank0
  1178     0204  07A5               	addwf	display@digit,f
  1179     0205                     l872:
  1180     0205  3004               	movlw	4
  1181     0206  0225               	subwf	display@digit,w
  1182     0207  1C03               	skipc
  1183     0208  2A0A               	goto	u371
  1184     0209  2A0B               	goto	u370
  1185     020A                     u371:
  1186     020A  29B6               	goto	l862
  1187     020B                     u370:
  1188     020B                     l53:
  1189     020B  0008               	return
  1190     020C                     __end_of_display:
  1191                           
  1192                           	psect	text5
  1193     0157                     __ptext5:	
  1194 ;; *************** function ___awmod *****************
  1195 ;; Defined at:
  1196 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  divisor         2    3[COMMON] int 
  1199 ;;  dividend        2    5[COMMON] int 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  sign            1    2[BANK0 ] unsigned char 
  1202 ;;  counter         1    1[BANK0 ] unsigned char 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  2    3[COMMON] int 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         4       0       0       0       0
  1213 ;;      Locals:         0       2       0       0       0
  1214 ;;      Temps:          0       1       0       0       0
  1215 ;;      Totals:         4       3       0       0       0
  1216 ;;Total ram usage:        7 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; Hardware stack levels required when called: 1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226     0157                     ___awmod:	
  1227                           ;psect for function ___awmod
  1228                           
  1229     0157                     l1048:	
  1230                           ;incstack = 0
  1231                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1232                           
  1233     0157  1283               	bcf	3,5	;RP0=0, select bank0
  1234     0158  1303               	bcf	3,6	;RP1=0, select bank0
  1235     0159  01A2               	clrf	___awmod@sign
  1236     015A                     l1050:
  1237     015A  1FF6               	btfss	___awmod@dividend+1,7
  1238     015B  295D               	goto	u771
  1239     015C  295E               	goto	u770
  1240     015D                     u771:
  1241     015D  2965               	goto	l1056
  1242     015E                     u770:
  1243     015E                     l1052:
  1244     015E  09F5               	comf	___awmod@dividend,f
  1245     015F  09F6               	comf	___awmod@dividend+1,f
  1246     0160  0AF5               	incf	___awmod@dividend,f
  1247     0161  1903               	skipnz
  1248     0162  0AF6               	incf	___awmod@dividend+1,f
  1249     0163                     l1054:
  1250     0163  01A2               	clrf	___awmod@sign
  1251     0164  0AA2               	incf	___awmod@sign,f
  1252     0165                     l1056:
  1253     0165  1FF4               	btfss	___awmod@divisor+1,7
  1254     0166  2968               	goto	u781
  1255     0167  2969               	goto	u780
  1256     0168                     u781:
  1257     0168  296E               	goto	l1060
  1258     0169                     u780:
  1259     0169                     l1058:
  1260     0169  09F3               	comf	___awmod@divisor,f
  1261     016A  09F4               	comf	___awmod@divisor+1,f
  1262     016B  0AF3               	incf	___awmod@divisor,f
  1263     016C  1903               	skipnz
  1264     016D  0AF4               	incf	___awmod@divisor+1,f
  1265     016E                     l1060:
  1266     016E  0873               	movf	___awmod@divisor,w
  1267     016F  0474               	iorwf	___awmod@divisor+1,w
  1268     0170  1903               	btfsc	3,2
  1269     0171  2973               	goto	u791
  1270     0172  2974               	goto	u790
  1271     0173                     u791:
  1272     0173  29A3               	goto	l1078
  1273     0174                     u790:
  1274     0174                     l1062:
  1275     0174  01A1               	clrf	___awmod@counter
  1276     0175  0AA1               	incf	___awmod@counter,f
  1277     0176  2982               	goto	l1068
  1278     0177                     l1064:
  1279     0177  3001               	movlw	1
  1280     0178                     u805:
  1281     0178  1003               	clrc
  1282     0179  0DF3               	rlf	___awmod@divisor,f
  1283     017A  0DF4               	rlf	___awmod@divisor+1,f
  1284     017B  3EFF               	addlw	-1
  1285     017C  1D03               	skipz
  1286     017D  2978               	goto	u805
  1287     017E                     l1066:
  1288     017E  3001               	movlw	1
  1289     017F  00A0               	movwf	??___awmod
  1290     0180  0820               	movf	??___awmod,w
  1291     0181  07A1               	addwf	___awmod@counter,f
  1292     0182                     l1068:
  1293     0182  1FF4               	btfss	___awmod@divisor+1,7
  1294     0183  2985               	goto	u811
  1295     0184  2986               	goto	u810
  1296     0185                     u811:
  1297     0185  2977               	goto	l1064
  1298     0186                     u810:
  1299     0186                     l1070:
  1300     0186  0874               	movf	___awmod@divisor+1,w
  1301     0187  0276               	subwf	___awmod@dividend+1,w
  1302     0188  1D03               	skipz
  1303     0189  298C               	goto	u825
  1304     018A  0873               	movf	___awmod@divisor,w
  1305     018B  0275               	subwf	___awmod@dividend,w
  1306     018C                     u825:
  1307     018C  1C03               	skipc
  1308     018D  298F               	goto	u821
  1309     018E  2990               	goto	u820
  1310     018F                     u821:
  1311     018F  2996               	goto	l1074
  1312     0190                     u820:
  1313     0190                     l1072:
  1314     0190  0873               	movf	___awmod@divisor,w
  1315     0191  02F5               	subwf	___awmod@dividend,f
  1316     0192  0874               	movf	___awmod@divisor+1,w
  1317     0193  1C03               	skipc
  1318     0194  03F6               	decf	___awmod@dividend+1,f
  1319     0195  02F6               	subwf	___awmod@dividend+1,f
  1320     0196                     l1074:
  1321     0196  3001               	movlw	1
  1322     0197                     u835:
  1323     0197  1003               	clrc
  1324     0198  0CF4               	rrf	___awmod@divisor+1,f
  1325     0199  0CF3               	rrf	___awmod@divisor,f
  1326     019A  3EFF               	addlw	-1
  1327     019B  1D03               	skipz
  1328     019C  2997               	goto	u835
  1329     019D                     l1076:
  1330     019D  3001               	movlw	1
  1331     019E  02A1               	subwf	___awmod@counter,f
  1332     019F  1D03               	btfss	3,2
  1333     01A0  29A2               	goto	u841
  1334     01A1  29A3               	goto	u840
  1335     01A2                     u841:
  1336     01A2  2986               	goto	l1070
  1337     01A3                     u840:
  1338     01A3                     l1078:
  1339     01A3  0822               	movf	___awmod@sign,w
  1340     01A4  1903               	btfsc	3,2
  1341     01A5  29A7               	goto	u851
  1342     01A6  29A8               	goto	u850
  1343     01A7                     u851:
  1344     01A7  29AD               	goto	l1082
  1345     01A8                     u850:
  1346     01A8                     l1080:
  1347     01A8  09F5               	comf	___awmod@dividend,f
  1348     01A9  09F6               	comf	___awmod@dividend+1,f
  1349     01AA  0AF5               	incf	___awmod@dividend,f
  1350     01AB  1903               	skipnz
  1351     01AC  0AF6               	incf	___awmod@dividend+1,f
  1352     01AD                     l1082:
  1353     01AD  0876               	movf	___awmod@dividend+1,w
  1354     01AE  00F4               	movwf	?___awmod+1
  1355     01AF  0875               	movf	___awmod@dividend,w
  1356     01B0  00F3               	movwf	?___awmod
  1357     01B1                     l336:
  1358     01B1  0008               	return
  1359     01B2                     __end_of___awmod:
  1360                           
  1361                           	psect	text6
  1362     00EE                     __ptext6:	
  1363 ;; *************** function ___awdiv *****************
  1364 ;; Defined at:
  1365 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  divisor         2    3[COMMON] int 
  1368 ;;  dividend        2    5[COMMON] int 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  quotient        2    3[BANK0 ] int 
  1371 ;;  sign            1    2[BANK0 ] unsigned char 
  1372 ;;  counter         1    1[BANK0 ] unsigned char 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  2    3[COMMON] int 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1382 ;;      Params:         4       0       0       0       0
  1383 ;;      Locals:         0       4       0       0       0
  1384 ;;      Temps:          0       1       0       0       0
  1385 ;;      Totals:         4       5       0       0       0
  1386 ;;Total ram usage:        9 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; Hardware stack levels required when called: 1
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396     00EE                     ___awdiv:	
  1397                           ;psect for function ___awdiv
  1398                           
  1399     00EE                     l1004:	
  1400                           ;incstack = 0
  1401                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1402                           
  1403     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1404     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1405     00F0  01A2               	clrf	___awdiv@sign
  1406     00F1                     l1006:
  1407     00F1  1FF4               	btfss	___awdiv@divisor+1,7
  1408     00F2  28F4               	goto	u671
  1409     00F3  28F5               	goto	u670
  1410     00F4                     u671:
  1411     00F4  28FC               	goto	l1012
  1412     00F5                     u670:
  1413     00F5                     l1008:
  1414     00F5  09F3               	comf	___awdiv@divisor,f
  1415     00F6  09F4               	comf	___awdiv@divisor+1,f
  1416     00F7  0AF3               	incf	___awdiv@divisor,f
  1417     00F8  1903               	skipnz
  1418     00F9  0AF4               	incf	___awdiv@divisor+1,f
  1419     00FA                     l1010:
  1420     00FA  01A2               	clrf	___awdiv@sign
  1421     00FB  0AA2               	incf	___awdiv@sign,f
  1422     00FC                     l1012:
  1423     00FC  1FF6               	btfss	___awdiv@dividend+1,7
  1424     00FD  28FF               	goto	u681
  1425     00FE  2900               	goto	u680
  1426     00FF                     u681:
  1427     00FF  2909               	goto	l1018
  1428     0100                     u680:
  1429     0100                     l1014:
  1430     0100  09F5               	comf	___awdiv@dividend,f
  1431     0101  09F6               	comf	___awdiv@dividend+1,f
  1432     0102  0AF5               	incf	___awdiv@dividend,f
  1433     0103  1903               	skipnz
  1434     0104  0AF6               	incf	___awdiv@dividend+1,f
  1435     0105                     l1016:
  1436     0105  3001               	movlw	1
  1437     0106  00A0               	movwf	??___awdiv
  1438     0107  0820               	movf	??___awdiv,w
  1439     0108  06A2               	xorwf	___awdiv@sign,f
  1440     0109                     l1018:
  1441     0109  01A3               	clrf	___awdiv@quotient
  1442     010A  01A4               	clrf	___awdiv@quotient+1
  1443     010B                     l1020:
  1444     010B  0873               	movf	___awdiv@divisor,w
  1445     010C  0474               	iorwf	___awdiv@divisor+1,w
  1446     010D  1903               	btfsc	3,2
  1447     010E  2910               	goto	u691
  1448     010F  2911               	goto	u690
  1449     0110                     u691:
  1450     0110  2948               	goto	l1040
  1451     0111                     u690:
  1452     0111                     l1022:
  1453     0111  01A1               	clrf	___awdiv@counter
  1454     0112  0AA1               	incf	___awdiv@counter,f
  1455     0113  291F               	goto	l1028
  1456     0114                     l1024:
  1457     0114  3001               	movlw	1
  1458     0115                     u705:
  1459     0115  1003               	clrc
  1460     0116  0DF3               	rlf	___awdiv@divisor,f
  1461     0117  0DF4               	rlf	___awdiv@divisor+1,f
  1462     0118  3EFF               	addlw	-1
  1463     0119  1D03               	skipz
  1464     011A  2915               	goto	u705
  1465     011B                     l1026:
  1466     011B  3001               	movlw	1
  1467     011C  00A0               	movwf	??___awdiv
  1468     011D  0820               	movf	??___awdiv,w
  1469     011E  07A1               	addwf	___awdiv@counter,f
  1470     011F                     l1028:
  1471     011F  1FF4               	btfss	___awdiv@divisor+1,7
  1472     0120  2922               	goto	u711
  1473     0121  2923               	goto	u710
  1474     0122                     u711:
  1475     0122  2914               	goto	l1024
  1476     0123                     u710:
  1477     0123                     l1030:
  1478     0123  3001               	movlw	1
  1479     0124                     u725:
  1480     0124  1003               	clrc
  1481     0125  0DA3               	rlf	___awdiv@quotient,f
  1482     0126  0DA4               	rlf	___awdiv@quotient+1,f
  1483     0127  3EFF               	addlw	-1
  1484     0128  1D03               	skipz
  1485     0129  2924               	goto	u725
  1486     012A  0874               	movf	___awdiv@divisor+1,w
  1487     012B  0276               	subwf	___awdiv@dividend+1,w
  1488     012C  1D03               	skipz
  1489     012D  2930               	goto	u735
  1490     012E  0873               	movf	___awdiv@divisor,w
  1491     012F  0275               	subwf	___awdiv@dividend,w
  1492     0130                     u735:
  1493     0130  1C03               	skipc
  1494     0131  2933               	goto	u731
  1495     0132  2934               	goto	u730
  1496     0133                     u731:
  1497     0133  293B               	goto	l1036
  1498     0134                     u730:
  1499     0134                     l1032:
  1500     0134  0873               	movf	___awdiv@divisor,w
  1501     0135  02F5               	subwf	___awdiv@dividend,f
  1502     0136  0874               	movf	___awdiv@divisor+1,w
  1503     0137  1C03               	skipc
  1504     0138  03F6               	decf	___awdiv@dividend+1,f
  1505     0139  02F6               	subwf	___awdiv@dividend+1,f
  1506     013A                     l1034:
  1507     013A  1423               	bsf	___awdiv@quotient,0
  1508     013B                     l1036:
  1509     013B  3001               	movlw	1
  1510     013C                     u745:
  1511     013C  1003               	clrc
  1512     013D  0CF4               	rrf	___awdiv@divisor+1,f
  1513     013E  0CF3               	rrf	___awdiv@divisor,f
  1514     013F  3EFF               	addlw	-1
  1515     0140  1D03               	skipz
  1516     0141  293C               	goto	u745
  1517     0142                     l1038:
  1518     0142  3001               	movlw	1
  1519     0143  02A1               	subwf	___awdiv@counter,f
  1520     0144  1D03               	btfss	3,2
  1521     0145  2947               	goto	u751
  1522     0146  2948               	goto	u750
  1523     0147                     u751:
  1524     0147  2923               	goto	l1030
  1525     0148                     u750:
  1526     0148                     l1040:
  1527     0148  0822               	movf	___awdiv@sign,w
  1528     0149  1903               	btfsc	3,2
  1529     014A  294C               	goto	u761
  1530     014B  294D               	goto	u760
  1531     014C                     u761:
  1532     014C  2952               	goto	l1044
  1533     014D                     u760:
  1534     014D                     l1042:
  1535     014D  09A3               	comf	___awdiv@quotient,f
  1536     014E  09A4               	comf	___awdiv@quotient+1,f
  1537     014F  0AA3               	incf	___awdiv@quotient,f
  1538     0150  1903               	skipnz
  1539     0151  0AA4               	incf	___awdiv@quotient+1,f
  1540     0152                     l1044:
  1541     0152  0824               	movf	___awdiv@quotient+1,w
  1542     0153  00F4               	movwf	?___awdiv+1
  1543     0154  0823               	movf	___awdiv@quotient,w
  1544     0155  00F3               	movwf	?___awdiv
  1545     0156                     l323:
  1546     0156  0008               	return
  1547     0157                     __end_of___awdiv:
  1548                           
  1549                           	psect	text7
  1550     020C                     __ptext7:	
  1551 ;; *************** function _isr *****************
  1552 ;; Defined at:
  1553 ;;		line 3 in file "isr.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;		None
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, status,2, status,0
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1567 ;;      Params:         0       0       0       0       0
  1568 ;;      Locals:         0       0       0       0       0
  1569 ;;      Temps:          3       0       0       0       0
  1570 ;;      Totals:         3       0       0       0       0
  1571 ;;Total ram usage:        3 bytes
  1572 ;; Hardware stack levels used: 1
  1573 ;; This function calls:
  1574 ;;		Nothing
  1575 ;; This function is called by:
  1576 ;;		Interrupt level 1
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580     020C                     _isr:	
  1581                           ;psect for function _isr
  1582                           
  1583     020C                     i1l988:
  1584                           
  1585                           ;isr.c: 12:     if (TMR0IF == 1)
  1586     020C  1D0B               	btfss	11,2	;volatile
  1587     020D  2A0F               	goto	u62_21
  1588     020E  2A10               	goto	u62_20
  1589     020F                     u62_21:
  1590     020F  2A44               	goto	i1l84
  1591     0210                     u62_20:
  1592     0210                     i1l990:
  1593                           
  1594                           ;isr.c: 13:     {;isr.c: 14:         TMR0 = TMR0 + 8;
  1595     0210  1283               	bcf	3,5	;RP0=0, select bank0
  1596     0211  1303               	bcf	3,6	;RP1=0, select bank0
  1597     0212  0801               	movf	1,w	;volatile
  1598     0213  3E08               	addlw	8
  1599     0214  0081               	movwf	1	;volatile
  1600                           
  1601                           ;isr.c: 16:         if (count++ == 20000)
  1602     0215  3001               	movlw	1
  1603     0216  07F9               	addwf	_count,f
  1604     0217  1803               	skipnc
  1605     0218  0AFA               	incf	_count+1,f
  1606     0219  3000               	movlw	0
  1607     021A  07FA               	addwf	_count+1,f
  1608     021B  3021               	movlw	33
  1609     021C  0679               	xorwf	_count,w
  1610     021D  304E               	movlw	78
  1611     021E  1903               	skipnz
  1612     021F  067A               	xorwf	_count+1,w
  1613     0220  1D03               	btfss	3,2
  1614     0221  2A23               	goto	u63_21
  1615     0222  2A24               	goto	u63_20
  1616     0223                     u63_21:
  1617     0223  2A2A               	goto	i1l996
  1618     0224                     u63_20:
  1619     0224                     i1l992:
  1620                           
  1621                           ;isr.c: 17:         {;isr.c: 18:             sec++;
  1622     0224  3001               	movlw	1
  1623     0225  00F0               	movwf	??_isr
  1624     0226  0870               	movf	??_isr,w
  1625     0227  07C5               	addwf	_sec,f
  1626     0228                     i1l994:
  1627                           
  1628                           ;isr.c: 19:             count = 0;
  1629     0228  01F9               	clrf	_count
  1630     0229  01FA               	clrf	_count+1
  1631     022A                     i1l996:
  1632                           
  1633                           ;isr.c: 22:         if (count_dp++ == 10000)
  1634     022A  3001               	movlw	1
  1635     022B  07F7               	addwf	_count_dp,f
  1636     022C  1803               	skipnc
  1637     022D  0AF8               	incf	_count_dp+1,f
  1638     022E  3000               	movlw	0
  1639     022F  07F8               	addwf	_count_dp+1,f
  1640     0230  3011               	movlw	17
  1641     0231  0677               	xorwf	_count_dp,w
  1642     0232  3027               	movlw	39
  1643     0233  1903               	skipnz
  1644     0234  0678               	xorwf	_count_dp+1,w
  1645     0235  1D03               	btfss	3,2
  1646     0236  2A38               	goto	u64_21
  1647     0237  2A39               	goto	u64_20
  1648     0238                     u64_21:
  1649     0238  2A43               	goto	i1l1002
  1650     0239                     u64_20:
  1651     0239                     i1l998:
  1652                           
  1653                           ;isr.c: 23:         {;isr.c: 24:             sec_flag = !sec_flag;
  1654     0239  0844               	movf	_sec_flag,w
  1655     023A  1903               	btfsc	3,2
  1656     023B  2A3D               	goto	u65_21
  1657     023C  2A3F               	goto	u65_20
  1658     023D                     u65_21:
  1659     023D  3001               	movlw	1
  1660     023E  2A40               	goto	u66_20
  1661     023F                     u65_20:
  1662     023F  3000               	movlw	0
  1663     0240                     u66_20:
  1664     0240  00C4               	movwf	_sec_flag
  1665     0241                     i1l1000:
  1666                           
  1667                           ;isr.c: 25:             count_dp = 0;
  1668     0241  01F7               	clrf	_count_dp
  1669     0242  01F8               	clrf	_count_dp+1
  1670     0243                     i1l1002:
  1671                           
  1672                           ;isr.c: 28:         TMR0IF = 0;
  1673     0243  110B               	bcf	11,2	;volatile
  1674     0244                     i1l84:
  1675     0244  0872               	movf	??_isr+2,w
  1676     0245  008A               	movwf	10
  1677     0246  0E71               	swapf	??_isr+1,w
  1678     0247  0083               	movwf	3
  1679     0248  0EFE               	swapf	btemp,f
  1680     0249  0E7E               	swapf	btemp,w
  1681     024A  0009               	retfie
  1682     024B                     __end_of_isr:
  1683     007E                     btemp	set	126	;btemp
  1684     007E                     wtemp0	set	126
  1685                           
  1686                           	psect	intentry
  1687     0004                     __pintentry:	
  1688                           ;incstack = 0
  1689                           ; Regs used in _isr: [wreg+status,2+status,0]
  1690                           
  1691     0004                     interrupt_function:
  1692     007E                     saved_w	set	btemp
  1693     0004  00FE               	movwf	btemp
  1694     0005  0E03               	swapf	3,w
  1695     0006  00F1               	movwf	??_isr+1
  1696     0007  080A               	movf	10,w
  1697     0008  00F2               	movwf	??_isr+2
  1698     0009  120A  118A  2A0C   	ljmp	_isr
  1699                           
  1700                           	psect	config
  1701                           
  1702                           ;Config register CONFIG @ 0x2007
  1703                           ;	Oscillator Selection bits
  1704                           ;	FOSC = 0x3, unprogrammed default
  1705                           ;	Watchdog Timer Enable bit
  1706                           ;	WDTE = OFF, WDT disabled
  1707                           ;	Power-up Timer Enable bit
  1708                           ;	PWRTE = 0x1, unprogrammed default
  1709                           ;	Brown-out Reset Enable bit
  1710                           ;	BOREN = 0x1, unprogrammed default
  1711                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1712                           ;	LVP = 0x1, unprogrammed default
  1713                           ;	Data EEPROM Memory Code Protection bit
  1714                           ;	CPD = 0x1, unprogrammed default
  1715                           ;	Flash Program Memory Write Enable bits
  1716                           ;	WRT = 0x3, unprogrammed default
  1717                           ;	In-Circuit Debugger Mode bit
  1718                           ;	DEBUG = 0x1, unprogrammed default
  1719                           ;	Flash Program Memory Code Protection bit
  1720                           ;	CP = 0x1, unprogrammed default
  1721     2007                     	org	8199
  1722     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80     26      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(1) Largest target is 4
		 -> main@ssd(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _main->___awmod
    _main->_display

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_display

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0    2539
                                              6 BANK0     20    20      0
                            ___awdiv
                            ___awmod
                            _display
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                           _init_ssd
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                             10    10      0     168
                                              3 COMMON     4     4      0
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     973
                                              3 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     805
                                              3 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _display
   _init_config
     _init_ssd
     _init_timer0

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      26       5       47.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      31      12        0.0%
ABS                  0      0      31       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Sep 11 14:02:06 2022

                      pc 0002                       l31 00B4                       l19 0269  
                     l53 020B                       l45 0275                       l64 0289  
           ___awdiv@sign 0022                       fsr 0004                      l323 0156  
                    l336 01B1                      l840 026A                      l842 026D  
                    l850 0288                      l844 0270                      l852 025E  
                    l870 01FF                      l862 01B6                      l846 0280  
                    l854 0268                      l872 0205                      l864 01BE  
                    l856 01B5                      l848 0284                      l866 01CB  
                    l868 01D3                      _GIE 005F                      u350 01F1  
                    u360 01FF                      u344 01C4                      u361 01FE  
                    u345 01C2                      u370 020B                      u371 020A  
                    u355 01E4                      u356 01E5                      u357 01EA  
                    u710 0123                      u358 01EB                      u711 0122  
                    u359 01F0                      u705 0115                      u730 0134  
                    u810 0186                      u731 0133                      u811 0185  
                    u820 0190                      u900 0082                      u725 0124  
                    u821 018F                      u805 0178                      u901 0081  
                    u750 0148                      u670 00F5                      u751 0147  
                    u735 0130                      u671 00F4                      _PSA 040B  
                    u760 014D                      u680 0100                      u840 01A3  
                    u761 014C                      u745 013C                      u681 00FF  
                    u841 01A2                      u825 018C                      u690 0111  
                    u850 01A8                      u770 015E                      u691 0110  
                    u851 01A7                      u835 0197                      u771 015D  
                    u780 0169                      u860 0031                      u781 0168  
                    u790 0174                      u870 004E                      u791 0173  
                    u871 004D                      u880 0059                      u881 0058  
                    u890 0064                      u891 0063                      _sec 0045  
                    _isr 020C                      fsr0 0004                      indf 0000  
           ___awmod@sign 0022                     l1010 00FA                     l1020 010B  
                   l1012 00FC                     l1004 00EE                     l1100 0053  
                   l1030 0123                     l1022 0111                     l1014 0100  
                   l1006 00F1                     l1110 0065                     l1102 0059  
                   l1032 0134                     l1024 0114                     l1040 0148  
                   l1016 0105                     l1008 00F5                     l1112 007D  
                   l1104 005D                     l1042 014D                     l1034 013A  
                   l1026 011B                     l1018 0109                     l1050 015A  
                   l1114 0082                     l1106 005E                     l1044 0152  
                   l1036 013B                     l1028 011F                     l1060 016E  
                   l1052 015E                     l1116 009C                     l1108 0064  
                   l1038 0142                     l1070 0186                     l1062 0174  
                   l1054 0163                     l1080 01A8                     l1072 0190  
                   l1064 0177                     l1056 0165                     l1048 0157  
                   l1082 01AD                     l1074 0196                     l1066 017E  
                   l1058 0169                     l1090 0040                     l1076 019D  
                   l1068 0182                     l1092 0041                     l1078 01A3  
                   l1094 0046                     l1086 0027                     l1096 004E  
                   l1088 003E                     l1098 0052                     ?_isr 0070  
                   _T0CS 040D                     i1l84 0244                     _TMR0 0001  
            display@data 0024              display@wait 0020                     _main 0027  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 0157          __end_of___awmod 01B2  
        ___awdiv@divisor 0073             ?_init_config 0070                    i1l990 0210  
                  i1l992 0224                    i1l994 0228                    i1l996 022A  
                  i1l988 020C                    i1l998 0239          ___awdiv@counter 0021  
                  _PORTA 0005                    _PORTD 0008                    u62_20 0210  
                  u62_21 020F                    u63_20 0224                    u63_21 0223  
                  u64_20 0239                    u64_21 0238                    u65_20 023F  
                  u65_21 023D                    _TRISA 0085                    _TRISD 0088  
                  u66_20 0240             ?_init_timer0 0070             display@digit 0025  
        __end_of_display 020C                    _count 0079                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00EE                   ??_main 0026         ___awdiv@dividend 0075  
                 i1l1000 0241                   i1l1002 0243                   _TMR0IE 005D  
                 _TMR0IF 005A                ??___awdiv 0020                ??___awmod 0020  
       __end_of_init_ssd 0276         ___awdiv@quotient 0023          ___awmod@divisor 0073  
        ___awmod@counter 0021                ??_display 0073                   saved_w 007E  
__end_of__initialization 0023           __pcstackCOMMON 0070             __pidataBANK0 0276  
             __pbssBANK0 0044               __pmaintext 0027               __pintentry 0004  
              ?_init_ssd 0070                  ___awdiv 00EE                  ___awmod 0157  
                __ptext1 025E                  __ptext2 0280                  __ptext3 026A  
                __ptext4 01B2                  __ptext5 0157                  __ptext6 00EE  
                __ptext7 020C                  _display 01B2         ___awmod@dividend 0075  
                main@min 0038                  main@ssd 0034     end_of_initialization 0023  
             ??_init_ssd 0073      start_initialization 000F              __end_of_isr 024B  
             init_fetch0 024B              __pdataBANK0 003A            ??_init_config 0073  
          ??_init_timer0 0073              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0073                 ?___awmod 0073  
               ?_display 0070      __end_of_init_config 026A      __end_of_init_timer0 028A  
      interrupt_function 0004                main@digit 002A              _init_config 025E  
            _init_timer0 0280                 _count_dp 0077                 _init_ssd 026A  
               _sec_flag 0044                 main@F861 003A                 main@hour 0039  
               init_ram0 024F                 intlevel1 0000  
