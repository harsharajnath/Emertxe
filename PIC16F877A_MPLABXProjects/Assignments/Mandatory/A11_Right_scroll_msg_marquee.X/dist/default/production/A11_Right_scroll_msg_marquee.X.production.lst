

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Sep 22 13:19:20 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0000                     	;# 
   175     0001                     	;# 
   176     0002                     	;# 
   177     0003                     	;# 
   178     0004                     	;# 
   179     0005                     	;# 
   180     0006                     	;# 
   181     0007                     	;# 
   182     0008                     	;# 
   183     0009                     	;# 
   184     000A                     	;# 
   185     000B                     	;# 
   186     000C                     	;# 
   187     000D                     	;# 
   188     000E                     	;# 
   189     000E                     	;# 
   190     000F                     	;# 
   191     0010                     	;# 
   192     0011                     	;# 
   193     0012                     	;# 
   194     0013                     	;# 
   195     0014                     	;# 
   196     0015                     	;# 
   197     0015                     	;# 
   198     0016                     	;# 
   199     0017                     	;# 
   200     0018                     	;# 
   201     0019                     	;# 
   202     001A                     	;# 
   203     001B                     	;# 
   204     001B                     	;# 
   205     001C                     	;# 
   206     001D                     	;# 
   207     001E                     	;# 
   208     001F                     	;# 
   209     0081                     	;# 
   210     0085                     	;# 
   211     0086                     	;# 
   212     0087                     	;# 
   213     0088                     	;# 
   214     0089                     	;# 
   215     008C                     	;# 
   216     008D                     	;# 
   217     008E                     	;# 
   218     0091                     	;# 
   219     0092                     	;# 
   220     0093                     	;# 
   221     0094                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009C                     	;# 
   225     009D                     	;# 
   226     009E                     	;# 
   227     009F                     	;# 
   228     010C                     	;# 
   229     010D                     	;# 
   230     010E                     	;# 
   231     010F                     	;# 
   232     018C                     	;# 
   233     018D                     	;# 
   234                           
   235                           	psect	idataBANK0
   236     06BA                     __pidataBANK0:
   237                           
   238                           ;initializer for main@F860
   239     06BA  3453               	retlw	83
   240     06BB  3463               	retlw	99
   241     06BC  3472               	retlw	114
   242     06BD  346F               	retlw	111
   243     06BE  346C               	retlw	108
   244     06BF  346C               	retlw	108
   245     06C0  3469               	retlw	105
   246     06C1  346E               	retlw	110
   247     06C2  3467               	retlw	103
   248     06C3  3420               	retlw	32
   249     06C4  3444               	retlw	68
   250     06C5  3465               	retlw	101
   251     06C6  346D               	retlw	109
   252     06C7  346F               	retlw	111
   253     06C8  3420               	retlw	32
   254     06C9  3420               	retlw	32
   255     06CA  3400               	retlw	0
   256     0008                     _PORTD	set	8
   257     0049                     _RE1	set	73
   258     004A                     _RE2	set	74
   259     0088                     _TRISD	set	136
   260     0449                     _TRISE1	set	1097
   261     044A                     _TRISE2	set	1098
   262                           
   263                           	psect	strings
   264     0003                     __pstrings:
   265     0003                     stringtab:
   266     0003                     __stringtab:
   267                           
   268                           ;	String table - string pointers are 1 byte each
   269     0003  1BFF               	btfsc	btemp+1,7
   270     0004  280D               	ljmp	stringcode
   271     0005  1383               	bcf	3,7
   272     0006  187F               	btfsc	btemp+1,0
   273     0007  1783               	bsf	3,7
   274     0008  0800               	movf	0,w
   275     0009  0A84               	incf	4,f
   276     000A  1903               	skipnz
   277     000B  0AFF               	incf	btemp+1,f
   278     000C  0008               	return
   279     000D                     stringcode:
   280     000D                     stringdir:
   281     000D  3000               	movlw	high stringdir
   282     000E  008A               	movwf	10
   283     000F  0804               	movf	4,w
   284     0010  0A84               	incf	4,f
   285     0011  0782               	addwf	2,f
   286     0012                     __stringbase:
   287     0012  3400               	retlw	0
   288     0013                     __end_of__stringtab:
   289     0013                     STR_1:
   290     0013  3420               	retlw	32	;' '
   291     0014  3452               	retlw	82	;'R'
   292     0015  3449               	retlw	73	;'I'
   293     0016  3447               	retlw	71	;'G'
   294     0017  3448               	retlw	72	;'H'
   295     0018  3454               	retlw	84	;'T'
   296     0019  3420               	retlw	32	;' '
   297     001A  344D               	retlw	77	;'M'
   298     001B  3441               	retlw	65	;'A'
   299     001C  3452               	retlw	82	;'R'
   300     001D  3451               	retlw	81	;'Q'
   301     001E  3455               	retlw	85	;'U'
   302     001F  3445               	retlw	69	;'E'
   303     0020  3445               	retlw	69	;'E'
   304     0021  3420               	retlw	32	;' '
   305     0022  3400               	retlw	0
   306                           
   307                           	psect	cinit
   308     07EE                     start_initialization:	
   309                           ; #config settings
   310                           
   311     07EE                     __initialization:
   312                           
   313                           ; Initialize objects allocated to BANK0
   314     07EE  1383               	bcf	3,7	;select IRP bank0
   315     07EF  3047               	movlw	low (__pdataBANK0+17)
   316     07F0  00FD               	movwf	btemp+-1
   317     07F1  3006               	movlw	high __pidataBANK0
   318     07F2  00FE               	movwf	btemp
   319     07F3  30BA               	movlw	low __pidataBANK0
   320     07F4  00FF               	movwf	btemp+1
   321     07F5  3036               	movlw	low __pdataBANK0
   322     07F6  0084               	movwf	4
   323     07F7  120A  118A  26CF  120A  118A  	fcall	init_ram0
   324     07FC                     end_of_initialization:	
   325                           ;End of C runtime variable initialization code
   326                           
   327     07FC                     __end_of__initialization:
   328     07FC  0183               	clrf	3
   329     07FD  120A  118A  2F84   	ljmp	_main	;jump to C main() function
   330                           
   331                           	psect	dataBANK0
   332     0036                     __pdataBANK0:
   333     0036                     main@F860:
   334     0036                     	ds	17
   335                           
   336                           	psect	inittext
   337     06CB                     init_fetch0:	
   338                           ;	Called with low address in FSR and high address in W
   339                           
   340     06CB  087E               	movf	btemp,w
   341     06CC  008A               	movwf	10
   342     06CD  087F               	movf	btemp+1,w
   343     06CE  0082               	movwf	2
   344     06CF                     init_ram0:	
   345                           ;Called with:
   346                           ;	high address of idata address in btemp 
   347                           ;	low address of idata address in btemp+1 
   348                           ;	low address of data in FSR
   349                           ;	high address + 1 of data in btemp-1
   350                           
   351     06CF  120A  118A  26CB  120A  118A  	fcall	init_fetch0
   352     06D4  0080               	movwf	0
   353     06D5  0A84               	incf	4,f
   354     06D6  0804               	movf	4,w
   355     06D7  067D               	xorwf	btemp+-1,w
   356     06D8  1903               	btfsc	3,2
   357     06D9  3400               	retlw	0
   358     06DA  0AFF               	incf	btemp+1,f
   359     06DB  1903               	btfsc	3,2
   360     06DC  0AFE               	incf	btemp,f
   361     06DD  2ECF               	goto	init_ram0
   362                           
   363                           	psect	cstackCOMMON
   364     0070                     __pcstackCOMMON:
   365     0070                     ?_init_clcd:
   366     0070                     ?_init_config:	
   367                           ; 1 bytes @ 0x0
   368                           
   369     0070                     ?_main:	
   370                           ; 1 bytes @ 0x0
   371                           
   372     0070                     ?_clcd_write:	
   373                           ; 1 bytes @ 0x0
   374                           
   375     0070                     ?_init_display_controller:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0070                     clcd_write@mode:	
   379                           ; 1 bytes @ 0x0
   380                           
   381                           
   382                           ; 1 bytes @ 0x0
   383     0070                     	ds	1
   384     0071                     ??_clcd_write:
   385                           
   386                           ; 1 bytes @ 0x1
   387     0071                     	ds	2
   388     0073                     clcd_write@byte:
   389                           
   390                           ; 1 bytes @ 0x3
   391     0073                     	ds	1
   392     0074                     ?_clcd_print:
   393     0074                     ??_init_display_controller:	
   394                           ; 1 bytes @ 0x4
   395                           
   396     0074                     clcd_print@str:	
   397                           ; 1 bytes @ 0x4
   398                           
   399                           
   400                           ; 2 bytes @ 0x4
   401     0074                     	ds	2
   402     0076                     ??_init_clcd:
   403     0076                     ??_init_config:	
   404                           ; 1 bytes @ 0x6
   405                           
   406     0076                     clcd_print@addr:	
   407                           ; 1 bytes @ 0x6
   408                           
   409                           
   410                           ; 1 bytes @ 0x6
   411     0076                     	ds	1
   412     0077                     ??_clcd_print:
   413     0077                     ??_main:	
   414                           ; 1 bytes @ 0x7
   415                           
   416                           
   417                           ; 1 bytes @ 0x7
   418     0077                     	ds	4
   419                           
   420                           	psect	cstackBANK0
   421     0020                     __pcstackBANK0:
   422     0020                     main@msg:
   423                           
   424                           ; 17 bytes @ 0x0
   425     0020                     	ds	17
   426     0031                     main@j:
   427                           
   428                           ; 2 bytes @ 0x11
   429     0031                     	ds	2
   430     0033                     main@temp:
   431                           
   432                           ; 1 bytes @ 0x13
   433     0033                     	ds	1
   434     0034                     main@i:
   435                           
   436                           ; 2 bytes @ 0x14
   437     0034                     	ds	2
   438                           
   439                           	psect	maintext
   440     0784                     __pmaintext:	
   441 ;;
   442 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   443 ;;
   444 ;; *************** function _main *****************
   445 ;; Defined at:
   446 ;;		line 25 in file "main.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;  j               2   17[BANK0 ] unsigned int 
   451 ;;  i               2   20[BANK0 ] unsigned int 
   452 ;;  msg            17    0[BANK0 ] unsigned char [17]
   453 ;;  temp            1   19[BANK0 ] unsigned char 
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   458 ;; Tracked objects:
   459 ;;		On entry : B00/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   463 ;;      Params:         0       0       0       0       0
   464 ;;      Locals:         0      22       0       0       0
   465 ;;      Temps:          4       0       0       0       0
   466 ;;      Totals:         4      22       0       0       0
   467 ;;Total ram usage:       26 bytes
   468 ;; Hardware stack levels required when called: 4
   469 ;; This function calls:
   470 ;;		_clcd_print
   471 ;;		_init_config
   472 ;; This function is called by:
   473 ;;		Startup code after reset
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477     0784                     _main:	
   478                           ;psect for function _main
   479                           
   480     0784                     l768:	
   481                           ;incstack = 0
   482                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   483                           
   484                           
   485                           ;main.c: 27:             msg[i] = msg[i - 1];;main.c: 29: 
   486     0784  3020               	movlw	main@msg& (0+255)
   487     0785  0084               	movwf	4
   488     0786  3036               	movlw	low main@F860
   489     0787  00F7               	movwf	??_main
   490     0788  0804               	movf	4,w
   491     0789  00F8               	movwf	??_main+1
   492     078A  3011               	movlw	17
   493     078B  00F9               	movwf	??_main+2
   494     078C                     u100:
   495     078C  0877               	movf	??_main,w
   496     078D  0084               	movwf	4
   497     078E  1383               	bcf	3,7	;select IRP bank0
   498     078F  0800               	movf	0,w
   499     0790  00FA               	movwf	??_main+3
   500     0791  0AF7               	incf	??_main,f
   501     0792  0878               	movf	??_main+1,w
   502     0793  0084               	movwf	4
   503     0794  087A               	movf	??_main+3,w
   504     0795  0080               	movwf	0
   505     0796  0AF8               	incf	??_main+1,f
   506     0797  0BF9               	decfsz	??_main+2,f
   507     0798  2F8C               	goto	u100
   508     0799                     l770:
   509                           
   510                           ;main.c: 31: 
   511     0799  120A  118A  26A9  120A  118A  	fcall	_init_config
   512     079E                     l772:
   513                           
   514                           ;main.c: 34:         for (unsigned int j = 50000; j--;);;main.c: 35:     }
   515     079E  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   516     079F  00F4               	movwf	clcd_print@str
   517     07A0  3080               	movlw	128
   518     07A1  00F5               	movwf	clcd_print@str+1
   519     07A2  3080               	movlw	128
   520     07A3  00F6               	movwf	clcd_print@addr
   521     07A4  120A  118A  26FE  120A  118A  	fcall	_clcd_print
   522     07A9                     l774:
   523     07A9  1283               	bcf	3,5	;RP0=0, select bank0
   524     07AA  1303               	bcf	3,6	;RP1=0, select bank0
   525     07AB  082F               	movf	main@msg+15,w
   526     07AC  00B3               	movwf	main@temp
   527     07AD                     l776:
   528     07AD  300F               	movlw	15
   529     07AE  00B4               	movwf	main@i
   530     07AF  3000               	movlw	0
   531     07B0  00B5               	movwf	main@i+1
   532     07B1                     l782:
   533     07B1  0834               	movf	main@i,w
   534     07B2  3EFF               	addlw	255
   535     07B3  3E20               	addlw	(low (main@msg| 0))& (0+255)
   536     07B4  0084               	movwf	4
   537     07B5  1383               	bcf	3,7	;select IRP bank0
   538     07B6  0800               	movf	0,w
   539     07B7  00F7               	movwf	??_main
   540     07B8  0834               	movf	main@i,w
   541     07B9  3E20               	addlw	(low (main@msg| 0))& (0+255)
   542     07BA  0084               	movwf	4
   543     07BB  0877               	movf	??_main,w
   544     07BC  0080               	movwf	0
   545     07BD                     l784:
   546     07BD  3001               	movlw	1
   547     07BE  02B4               	subwf	main@i,f
   548     07BF  3000               	movlw	0
   549     07C0  1C03               	skipc
   550     07C1  03B5               	decf	main@i+1,f
   551     07C2  02B5               	subwf	main@i+1,f
   552     07C3                     l786:
   553     07C3  0834               	movf	main@i,w
   554     07C4  0435               	iorwf	main@i+1,w
   555     07C5  1D03               	btfss	3,2
   556     07C6  2FC8               	goto	u111
   557     07C7  2FC9               	goto	u110
   558     07C8                     u111:
   559     07C8  2FB1               	goto	l782
   560     07C9                     u110:
   561     07C9                     l788:
   562     07C9  0833               	movf	main@temp,w
   563     07CA  00A0               	movwf	main@msg
   564     07CB                     l790:
   565     07CB  3020               	movlw	(low (main@msg| 0))& (0+255)
   566     07CC  00F4               	movwf	clcd_print@str
   567     07CD  3000               	movlw	0
   568     07CE  00F5               	movwf	clcd_print@str+1
   569     07CF  30C0               	movlw	192
   570     07D0  00F6               	movwf	clcd_print@addr
   571     07D1  120A  118A  26FE  120A  118A  	fcall	_clcd_print
   572     07D6                     l792:
   573     07D6  3050               	movlw	80
   574     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   575     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   576     07D9  00B1               	movwf	main@j
   577     07DA  30C3               	movlw	195
   578     07DB  00B2               	movwf	main@j+1
   579     07DC                     l794:
   580     07DC  3001               	movlw	1
   581     07DD  02B1               	subwf	main@j,f
   582     07DE  3000               	movlw	0
   583     07DF  1C03               	skipc
   584     07E0  03B2               	decf	main@j+1,f
   585     07E1  02B2               	subwf	main@j+1,f
   586     07E2  0A31               	incf	main@j,w
   587     07E3  1D03               	skipz
   588     07E4  2FE9               	goto	u121
   589     07E5  0A32               	incf	main@j+1,w
   590     07E6  1D03               	btfss	3,2
   591     07E7  2FE9               	goto	u121
   592     07E8  2FEA               	goto	u120
   593     07E9                     u121:
   594     07E9  2FDC               	goto	l794
   595     07EA                     u120:
   596     07EA  2F9E               	goto	l772
   597     07EB  120A  118A  2800   	ljmp	start
   598     07EE                     __end_of_main:
   599                           
   600                           	psect	text1
   601     06A9                     __ptext1:	
   602 ;; *************** function _init_config *****************
   603 ;; Defined at:
   604 ;;		line 20 in file "main.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0, pclath, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   618 ;;      Params:         0       0       0       0       0
   619 ;;      Locals:         0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0
   621 ;;      Totals:         0       0       0       0       0
   622 ;;Total ram usage:        0 bytes
   623 ;; Hardware stack levels used: 1
   624 ;; Hardware stack levels required when called: 3
   625 ;; This function calls:
   626 ;;		_init_clcd
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632     06A9                     _init_config:	
   633                           ;psect for function _init_config
   634                           
   635     06A9                     l758:	
   636                           ;incstack = 0
   637                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   638                           
   639                           
   640                           ;main.c: 22: 
   641     06A9  120A  118A  26AF  120A  118A  	fcall	_init_clcd
   642     06AE                     l7:
   643     06AE  0008               	return
   644     06AF                     __end_of_init_config:
   645                           
   646                           	psect	text2
   647     06AF                     __ptext2:	
   648 ;; *************** function _init_clcd *****************
   649 ;; Defined at:
   650 ;;		line 37 in file "clcd.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, status,2, status,0, pclath, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   664 ;;      Params:         0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0
   666 ;;      Temps:          0       0       0       0       0
   667 ;;      Totals:         0       0       0       0       0
   668 ;;Total ram usage:        0 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; Hardware stack levels required when called: 2
   671 ;; This function calls:
   672 ;;		_init_display_controller
   673 ;; This function is called by:
   674 ;;		_init_config
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678     06AF                     _init_clcd:	
   679                           ;psect for function _init_clcd
   680                           
   681     06AF                     l750:	
   682                           ;incstack = 0
   683                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
   684                           
   685                           
   686                           ;clcd.c: 40:     TRISD = 0x00;
   687     06AF  1683               	bsf	3,5	;RP0=1, select bank1
   688     06B0  1303               	bcf	3,6	;RP1=0, select bank1
   689     06B1  0188               	clrf	8	;volatile
   690     06B2                     l752:
   691                           
   692                           ;clcd.c: 43:     TRISE2 = 0;
   693     06B2  1109               	bcf	9,2	;volatile
   694     06B3                     l754:
   695                           
   696                           ;clcd.c: 44:     TRISE1 = 0;
   697     06B3  1089               	bcf	9,1	;volatile
   698     06B4                     l756:
   699                           
   700                           ;clcd.c: 46:     init_display_controller();
   701     06B4  120A  118A  272D  120A  118A  	fcall	_init_display_controller
   702     06B9                     l45:
   703     06B9  0008               	return
   704     06BA                     __end_of_init_clcd:
   705                           
   706                           	psect	text3
   707     072D                     __ptext3:	
   708 ;; *************** function _init_display_controller *****************
   709 ;; Defined at:
   710 ;;		line 16 in file "clcd.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, status,2, status,0, pclath, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   724 ;;      Params:         0       0       0       0       0
   725 ;;      Locals:         0       0       0       0       0
   726 ;;      Temps:          2       0       0       0       0
   727 ;;      Totals:         2       0       0       0       0
   728 ;;Total ram usage:        2 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; Hardware stack levels required when called: 1
   731 ;; This function calls:
   732 ;;		_clcd_write
   733 ;; This function is called by:
   734 ;;		_init_clcd
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738     072D                     _init_display_controller:	
   739                           ;psect for function _init_display_controller
   740                           
   741     072D                     l730:	
   742                           ;incstack = 0
   743                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
   744                           
   745                           
   746                           ;clcd.c: 19:     _delay((unsigned long)((30)*(20000000/4000.0)));
   747     072D  30C3               	movlw	195
   748     072E  00F5               	movwf	??_init_display_controller+1
   749     072F  30CD               	movlw	205
   750     0730  00F4               	movwf	??_init_display_controller
   751     0731                     u137:
   752     0731  0BF4               	decfsz	??_init_display_controller,f
   753     0732  2F31               	goto	u137
   754     0733  0BF5               	decfsz	??_init_display_controller+1,f
   755     0734  2F31               	goto	u137
   756     0735                     l732:
   757                           
   758                           ;clcd.c: 22:     clcd_write(0x33, 0);
   759     0735  01F0               	clrf	clcd_write@mode
   760     0736  3033               	movlw	51
   761     0737  120A  118A  26DE  120A  118A  	fcall	_clcd_write
   762     073C                     l734:
   763                           
   764                           ;clcd.c: 23:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   765     073C  301B               	movlw	27
   766     073D  00F5               	movwf	??_init_display_controller+1
   767     073E  309E               	movlw	158
   768     073F  00F4               	movwf	??_init_display_controller
   769     0740                     u147:
   770     0740  0BF4               	decfsz	??_init_display_controller,f
   771     0741  2F40               	goto	u147
   772     0742  0BF5               	decfsz	??_init_display_controller+1,f
   773     0743  2F40               	goto	u147
   774     0744  0000               	nop
   775                           
   776                           ;clcd.c: 24:     clcd_write(0x33, 0);
   777     0745  01F0               	clrf	clcd_write@mode
   778     0746  3033               	movlw	51
   779     0747  120A  118A  26DE  120A  118A  	fcall	_clcd_write
   780     074C                     l736:
   781                           
   782                           ;clcd.c: 25:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   783     074C  30A6               	movlw	166
   784     074D  00F4               	movwf	??_init_display_controller
   785     074E                     u157:
   786     074E  0BF4               	decfsz	??_init_display_controller,f
   787     074F  2F4E               	goto	u157
   788     0750  0000               	nop
   789     0751                     l738:
   790                           
   791                           ;clcd.c: 26:     clcd_write(0x33, 0);
   792     0751  01F0               	clrf	clcd_write@mode
   793     0752  3033               	movlw	51
   794     0753  120A  118A  26DE  120A  118A  	fcall	_clcd_write
   795     0758                     l740:
   796                           
   797                           ;clcd.c: 27:     _delay((unsigned long)((1)*(20000000/4000000.0)));
   798     0758  2F59               	nop2	;2 cycle nop
   799     0759  2F5A               	nop2	;2 cycle nop
   800     075A  0000               	nop
   801     075B                     l742:
   802                           
   803                           ;clcd.c: 29:     clcd_write(0x38, 0);
   804     075B  01F0               	clrf	clcd_write@mode
   805     075C  3038               	movlw	56
   806     075D  120A  118A  26DE  120A  118A  	fcall	_clcd_write
   807     0762                     l744:
   808                           
   809                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   810     0762  30A6               	movlw	166
   811     0763  00F4               	movwf	??_init_display_controller
   812     0764                     u167:
   813     0764  0BF4               	decfsz	??_init_display_controller,f
   814     0765  2F64               	goto	u167
   815     0766  0000               	nop
   816                           
   817                           ;clcd.c: 31:     clcd_write(0x01, 0);
   818     0767  01F0               	clrf	clcd_write@mode
   819     0768  3001               	movlw	1
   820     0769  120A  118A  26DE  120A  118A  	fcall	_clcd_write
   821     076E                     l746:
   822                           
   823                           ;clcd.c: 32:     _delay((unsigned long)((500)*(20000000/4000000.0)));
   824     076E  3004               	movlw	4
   825     076F  00F5               	movwf	??_init_display_controller+1
   826     0770  303D               	movlw	61
   827     0771  00F4               	movwf	??_init_display_controller
   828     0772                     u177:
   829     0772  0BF4               	decfsz	??_init_display_controller,f
   830     0773  2F72               	goto	u177
   831     0774  0BF5               	decfsz	??_init_display_controller+1,f
   832     0775  2F72               	goto	u177
   833     0776  2F77               	nop2
   834     0777                     l748:
   835                           
   836                           ;clcd.c: 33:     clcd_write(0x0C, 0);
   837     0777  01F0               	clrf	clcd_write@mode
   838     0778  300C               	movlw	12
   839     0779  120A  118A  26DE  120A  118A  	fcall	_clcd_write
   840                           
   841                           ;clcd.c: 34:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   842     077E  30A6               	movlw	166
   843     077F  00F4               	movwf	??_init_display_controller
   844     0780                     u187:
   845     0780  0BF4               	decfsz	??_init_display_controller,f
   846     0781  2F80               	goto	u187
   847     0782  0000               	nop
   848     0783                     l42:
   849     0783  0008               	return
   850     0784                     __end_of_init_display_controller:
   851                           
   852                           	psect	text4
   853     06FE                     __ptext4:	
   854 ;; *************** function _clcd_print *****************
   855 ;; Defined at:
   856 ;;		line 55 in file "clcd.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;  str             2    4[COMMON] PTR const unsigned char 
   859 ;;		 -> STR_1(16), main@msg(17), 
   860 ;;  addr            1    6[COMMON] unsigned char 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   872 ;;      Params:         3       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0
   874 ;;      Temps:          0       0       0       0       0
   875 ;;      Totals:         3       0       0       0       0
   876 ;;Total ram usage:        3 bytes
   877 ;; Hardware stack levels used: 1
   878 ;; Hardware stack levels required when called: 1
   879 ;; This function calls:
   880 ;;		_clcd_write
   881 ;; This function is called by:
   882 ;;		_main
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886     06FE                     _clcd_print:	
   887                           ;psect for function _clcd_print
   888                           
   889     06FE                     l760:	
   890                           ;incstack = 0
   891                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   892                           
   893                           
   894                           ;clcd.c: 55: void clcd_print(const char *str, unsigned char addr);clcd.c: 56: {;clcd.c: 
      +                          57:     clcd_write(addr, 0);
   895     06FE  01F0               	clrf	clcd_write@mode
   896     06FF  0876               	movf	clcd_print@addr,w
   897     0700  120A  118A  26DE  120A  118A  	fcall	_clcd_write
   898                           
   899                           ;clcd.c: 59:     while (*str != '\0')
   900     0705  2F1C               	goto	l766
   901     0706                     l762:
   902                           
   903                           ;clcd.c: 60:     {;clcd.c: 61:         clcd_write(*str, 1);
   904     0706  01F0               	clrf	clcd_write@mode
   905     0707  0AF0               	incf	clcd_write@mode,f
   906     0708  0875               	movf	clcd_print@str+1,w
   907     0709  00FF               	movwf	btemp+1
   908     070A  0874               	movf	clcd_print@str,w
   909     070B  0084               	movwf	4
   910     070C  120A  118A  2003  120A  118A  	fcall	stringtab
   911     0711  120A  118A  26DE  120A  118A  	fcall	_clcd_write
   912     0716                     l764:
   913                           
   914                           ;clcd.c: 62:         str++;
   915     0716  3001               	movlw	1
   916     0717  07F4               	addwf	clcd_print@str,f
   917     0718  1803               	skipnc
   918     0719  0AF5               	incf	clcd_print@str+1,f
   919     071A  3000               	movlw	0
   920     071B  07F5               	addwf	clcd_print@str+1,f
   921     071C                     l766:
   922                           
   923                           ;clcd.c: 59:     while (*str != '\0')
   924     071C  0875               	movf	clcd_print@str+1,w
   925     071D  1283               	bcf	3,5	;RP0=0, select bank0
   926     071E  1303               	bcf	3,6	;RP1=0, select bank0
   927     071F  00FF               	movwf	btemp+1
   928     0720  0874               	movf	clcd_print@str,w
   929     0721  0084               	movwf	4
   930     0722  120A  118A  2003  120A  118A  	fcall	stringtab
   931     0727  3A00               	xorlw	0
   932     0728  1D03               	skipz
   933     0729  2F2B               	goto	u91
   934     072A  2F2C               	goto	u90
   935     072B                     u91:
   936     072B  2F06               	goto	l762
   937     072C                     u90:
   938     072C                     l54:
   939     072C  0008               	return
   940     072D                     __end_of_clcd_print:
   941                           
   942                           	psect	text5
   943     06DE                     __ptext5:	
   944 ;; *************** function _clcd_write *****************
   945 ;; Defined at:
   946 ;;		line 4 in file "clcd.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  byte            1    wreg     unsigned char 
   949 ;;  mode            1    0[COMMON] unsigned char 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  byte            1    3[COMMON] unsigned char 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         1       0       0       0       0
   962 ;;      Locals:         1       0       0       0       0
   963 ;;      Temps:          2       0       0       0       0
   964 ;;      Totals:         4       0       0       0       0
   965 ;;Total ram usage:        4 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_init_display_controller
   971 ;;		_clcd_print
   972 ;;		_clcd_putch
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976     06DE                     _clcd_write:	
   977                           ;psect for function _clcd_write
   978                           
   979                           
   980                           ;incstack = 0
   981                           ; Regs used in _clcd_write: [wreg]
   982                           ;clcd_write@byte stored from wreg
   983     06DE  00F3               	movwf	clcd_write@byte
   984     06DF                     l722:
   985                           
   986                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = mode;
   987     06DF  1870               	btfsc	clcd_write@mode,0
   988     06E0  2EE2               	goto	u71
   989     06E1  2EE6               	goto	u70
   990     06E2                     u71:
   991     06E2  1283               	bcf	3,5	;RP0=0, select bank0
   992     06E3  1303               	bcf	3,6	;RP1=0, select bank0
   993     06E4  1509               	bsf	9,2	;volatile
   994     06E5  2EE9               	goto	u84
   995     06E6                     u70:
   996     06E6  1283               	bcf	3,5	;RP0=0, select bank0
   997     06E7  1303               	bcf	3,6	;RP1=0, select bank0
   998     06E8  1109               	bcf	9,2	;volatile
   999     06E9                     u84:
  1000     06E9                     l724:
  1001                           
  1002                           ;clcd.c: 7:     PORTD = byte;
  1003     06E9  0873               	movf	clcd_write@byte,w
  1004     06EA  0088               	movwf	8	;volatile
  1005     06EB                     l726:
  1006                           
  1007                           ;clcd.c: 9:     RE1 = 1;
  1008     06EB  1489               	bsf	9,1	;volatile
  1009                           
  1010                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1011     06EC  30A6               	movlw	166
  1012     06ED  00F1               	movwf	??_clcd_write
  1013     06EE                     u197:
  1014     06EE  0BF1               	decfsz	??_clcd_write,f
  1015     06EF  2EEE               	goto	u197
  1016     06F0  0000               	nop
  1017     06F1                     l728:
  1018                           
  1019                           ;clcd.c: 11:     RE1 = 0;
  1020     06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1021     06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1022     06F3  1089               	bcf	9,1	;volatile
  1023                           
  1024                           ;clcd.c: 13:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1025     06F4  301B               	movlw	27
  1026     06F5  00F2               	movwf	??_clcd_write+1
  1027     06F6  309E               	movlw	158
  1028     06F7  00F1               	movwf	??_clcd_write
  1029     06F8                     u207:
  1030     06F8  0BF1               	decfsz	??_clcd_write,f
  1031     06F9  2EF8               	goto	u207
  1032     06FA  0BF2               	decfsz	??_clcd_write+1,f
  1033     06FB  2EF8               	goto	u207
  1034     06FC  0000               	nop
  1035     06FD                     l39:
  1036     06FD  0008               	return
  1037     06FE                     __end_of_clcd_write:
  1038     007E                     btemp	set	126	;btemp
  1039     007E                     wtemp0	set	126
  1040                           
  1041                           	psect	config
  1042                           
  1043                           ;Config register CONFIG @ 0x2007
  1044                           ;	Oscillator Selection bits
  1045                           ;	FOSC = 0x3, unprogrammed default
  1046                           ;	Watchdog Timer Enable bit
  1047                           ;	WDTE = OFF, WDT disabled
  1048                           ;	Power-up Timer Enable bit
  1049                           ;	PWRTE = 0x1, unprogrammed default
  1050                           ;	Brown-out Reset Enable bit
  1051                           ;	BOREN = 0x1, unprogrammed default
  1052                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1053                           ;	LVP = 0x1, unprogrammed default
  1054                           ;	Data EEPROM Memory Code Protection bit
  1055                           ;	CPD = 0x1, unprogrammed default
  1056                           ;	Flash Program Memory Write Enable bits
  1057                           ;	WRT = 0x3, unprogrammed default
  1058                           ;	In-Circuit Debugger Mode bit
  1059                           ;	DEBUG = 0x1, unprogrammed default
  1060                           ;	Flash Program Memory Code Protection bit
  1061                           ;	CP = 0x1, unprogrammed default
  1062     2007                     	org	8199
  1063     2007  3FFB               	dw	16379

Data Sizes:
    Strings     16
    Constant    0
    Data        17
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     22      39
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[16]), main@msg(BANK0[17]), 


Critical Paths under _main in COMMON

    _main->_clcd_print
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0    2211
                                              7 COMMON     4     4      0
                                              0 BANK0     22    22      0
                         _clcd_print
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     804
                          _init_clcd
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     804
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     804
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     0      3    1175
                                              4 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     804
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      27       5       48.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      32      12        0.0%
ABS                  0      0      32       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Sep 22 13:19:20 2022

                              l7 06AE                                pc 0002                   clcd_print@addr 0076  
                             l42 0783                               l45 06B9                               l54 072C  
                             l39 06FD                               u70 06E6                               u71 06E2  
                             u90 072C                               u91 072B                               u84 06E9  
                             fsr 0004                              l722 06DF                              l730 072D  
                            l724 06E9                              l740 0758                              l732 0735  
                            l726 06EB                              l742 075B                              l734 073C  
                            l750 06AF                              l728 06F1                              l760 06FE  
                            l744 0762                              l736 074C                              l752 06B2  
                            l762 0706                              l746 076E                              l738 0751  
                            l754 06B3                              l770 0799                              l764 0716  
                            l748 0777                              l756 06B4                              l772 079E  
                            l766 071C                              l758 06A9                              l790 07CB  
                            l782 07B1                              l774 07A9                              l792 07D6  
                            l784 07BD                              l776 07AD                              l768 0784  
                            l794 07DC                              l786 07C3                              l788 07C9  
                            _RE1 0049                              u100 078C                              _RE2 004A  
                            u110 07C9                              u111 07C8                              u120 07EA  
                            u121 07E9                              u207 06F8                              u137 0731  
                            u147 0740                              u157 074E                              u167 0764  
                            u177 0772                              u187 0780                              u197 06EE  
                            fsr0 0004                              indf 0000                             STR_1 0013  
                           _main 0784                             btemp 007E                             start 0000  
                 clcd_write@byte 0073                   clcd_write@mode 0070                            ?_main 0070  
                   ?_init_config 0070                            _PORTD 0008                            _TRISD 0088  
                          main@i 0034                            main@j 0031                            pclath 000A  
                          status 0003                            wtemp0 007E                  __initialization 07EE  
                   __end_of_main 07EE                           ??_main 0077                           _TRISE1 0449  
                         _TRISE2 044A          _init_display_controller 072D          __end_of__initialization 07FC  
                 __pcstackCOMMON 0070                     __pidataBANK0 06BA        ??_init_display_controller 0074  
                     _clcd_print 06FE                       _clcd_write 06DE                       __pmaintext 0784  
                     __stringtab 0003                          __ptext1 06A9                          __ptext2 06AF  
                        __ptext3 072D                          __ptext4 06FE                          __ptext5 06DE  
__end_of_init_display_controller 0784                __end_of_init_clcd 06BA                          main@msg 0020  
           end_of_initialization 07FC                      ?_clcd_print 0074                      ?_clcd_write 0070  
                  clcd_print@str 0074              start_initialization 07EE                       init_fetch0 06CB  
                    __pdataBANK0 0036                    ??_init_config 0076                        ___latbits 0002  
                  __pcstackBANK0 0020                        __pstrings 0003                        _init_clcd 06AF  
            __end_of_init_config 06AF         ?_init_display_controller 0070                     ??_clcd_print 0077  
                   ??_clcd_write 0071                      __stringbase 0012               __end_of_clcd_print 072D  
             __end_of_clcd_write 06FE                       ?_init_clcd 0070               __end_of__stringtab 0013  
                    _init_config 06A9                         main@F860 0036                         main@temp 0033  
                       init_ram0 06CF                      ??_init_clcd 0076                        stringcode 000D  
                       stringdir 000D                         stringtab 0003  
