

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Sep 30 21:26:29 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0000                     	;# 
   175     0001                     	;# 
   176     0002                     	;# 
   177     0003                     	;# 
   178     0004                     	;# 
   179     0005                     	;# 
   180     0006                     	;# 
   181     0007                     	;# 
   182     0008                     	;# 
   183     0009                     	;# 
   184     000A                     	;# 
   185     000B                     	;# 
   186     000C                     	;# 
   187     000D                     	;# 
   188     000E                     	;# 
   189     000E                     	;# 
   190     000F                     	;# 
   191     0010                     	;# 
   192     0011                     	;# 
   193     0012                     	;# 
   194     0013                     	;# 
   195     0014                     	;# 
   196     0015                     	;# 
   197     0015                     	;# 
   198     0016                     	;# 
   199     0017                     	;# 
   200     0018                     	;# 
   201     0019                     	;# 
   202     001A                     	;# 
   203     001B                     	;# 
   204     001B                     	;# 
   205     001C                     	;# 
   206     001D                     	;# 
   207     001E                     	;# 
   208     001F                     	;# 
   209     0081                     	;# 
   210     0085                     	;# 
   211     0086                     	;# 
   212     0087                     	;# 
   213     0088                     	;# 
   214     0089                     	;# 
   215     008C                     	;# 
   216     008D                     	;# 
   217     008E                     	;# 
   218     0091                     	;# 
   219     0092                     	;# 
   220     0093                     	;# 
   221     0094                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009C                     	;# 
   225     009D                     	;# 
   226     009E                     	;# 
   227     009F                     	;# 
   228     010C                     	;# 
   229     010D                     	;# 
   230     010E                     	;# 
   231     010F                     	;# 
   232     018C                     	;# 
   233     018D                     	;# 
   234     0000                     	;# 
   235     0001                     	;# 
   236     0002                     	;# 
   237     0003                     	;# 
   238     0004                     	;# 
   239     0005                     	;# 
   240     0006                     	;# 
   241     0007                     	;# 
   242     0008                     	;# 
   243     0009                     	;# 
   244     000A                     	;# 
   245     000B                     	;# 
   246     000C                     	;# 
   247     000D                     	;# 
   248     000E                     	;# 
   249     000E                     	;# 
   250     000F                     	;# 
   251     0010                     	;# 
   252     0011                     	;# 
   253     0012                     	;# 
   254     0013                     	;# 
   255     0014                     	;# 
   256     0015                     	;# 
   257     0015                     	;# 
   258     0016                     	;# 
   259     0017                     	;# 
   260     0018                     	;# 
   261     0019                     	;# 
   262     001A                     	;# 
   263     001B                     	;# 
   264     001B                     	;# 
   265     001C                     	;# 
   266     001D                     	;# 
   267     001E                     	;# 
   268     001F                     	;# 
   269     0081                     	;# 
   270     0085                     	;# 
   271     0086                     	;# 
   272     0087                     	;# 
   273     0088                     	;# 
   274     0089                     	;# 
   275     008C                     	;# 
   276     008D                     	;# 
   277     008E                     	;# 
   278     0091                     	;# 
   279     0092                     	;# 
   280     0093                     	;# 
   281     0094                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     010C                     	;# 
   289     010D                     	;# 
   290     010E                     	;# 
   291     010F                     	;# 
   292     018C                     	;# 
   293     018D                     	;# 
   294     0019                     _TXREG	set	25
   295     001A                     _RCREG	set	26
   296     0008                     _PORTD	set	8
   297     0064                     _TXIF	set	100
   298     0065                     _RCIF	set	101
   299     00C4                     _CREN	set	196
   300     00C7                     _SPEN	set	199
   301     0049                     _RE1	set	73
   302     004A                     _RE2	set	74
   303     0099                     _SPBRG	set	153
   304     0088                     _TRISD	set	136
   305     0449                     _TRISE1	set	1097
   306     044A                     _TRISE2	set	1098
   307                           
   308                           	psect	strings
   309     0003                     __pstrings:
   310     0003                     stringtab:
   311     0003                     __stringtab:
   312                           
   313                           ;	String table - string pointers are 1 byte each
   314     0003  1BFF               	btfsc	btemp+1,7
   315     0004  280D               	ljmp	stringcode
   316     0005  1383               	bcf	3,7
   317     0006  187F               	btfsc	btemp+1,0
   318     0007  1783               	bsf	3,7
   319     0008  0800               	movf	0,w
   320     0009  0A84               	incf	4,f
   321     000A  1903               	skipnz
   322     000B  0AFF               	incf	btemp+1,f
   323     000C  0008               	return
   324     000D                     stringcode:
   325     000D                     stringdir:
   326     000D  3000               	movlw	high stringdir
   327     000E  008A               	movwf	10
   328     000F  0804               	movf	4,w
   329     0010  0A84               	incf	4,f
   330     0011  0782               	addwf	2,f
   331     0012                     __stringbase:
   332     0012  3400               	retlw	0
   333     0013                     __end_of__stringtab:
   334     0013                     STR_1:
   335     0013  3420               	retlw	32	;' '
   336     0014  3420               	retlw	32	;' '
   337     0015  3420               	retlw	32	;' '
   338     0016  3420               	retlw	32	;' '
   339     0017  3420               	retlw	32	;' '
   340     0018  3420               	retlw	32	;' '
   341     0019  3420               	retlw	32	;' '
   342     001A  3420               	retlw	32	;' '
   343     001B  3420               	retlw	32	;' '
   344     001C  3420               	retlw	32	;' '
   345     001D  3420               	retlw	32	;' '
   346     001E  3420               	retlw	32	;' '
   347     001F  3420               	retlw	32	;' '
   348     0020  3420               	retlw	32	;' '
   349     0021  3420               	retlw	32	;' '
   350     0022  3420               	retlw	32	;' '
   351     0023  3400               	retlw	0
   352     0013                     
   353                           	psect	cinit
   354     07FC                     start_initialization:	
   355                           ; #config settings
   356                           
   357     07FC                     __initialization:
   358     07FC                     end_of_initialization:	
   359                           ;End of C runtime variable initialization code
   360                           
   361     07FC                     __end_of__initialization:
   362     07FC  0183               	clrf	3
   363     07FD  120A  118A  2EF0   	ljmp	_main	;jump to C main() function
   364                           
   365                           	psect	cstackCOMMON
   366     0070                     __pcstackCOMMON:
   367     0070                     ?_getchar:
   368     0070                     ??_getchar:	
   369                           ; 1 bytes @ 0x0
   370                           
   371     0070                     ?_clcd_write:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0070                     ?_init_display_controller:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0070                     ?_init_clcd:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0070                     ?_init_config:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0070                     ?_main:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0070                     ?___lldiv:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0070                     clcd_write@mode:	
   390                           ; 4 bytes @ 0x0
   391                           
   392     0070                     ___lldiv@divisor:	
   393                           ; 1 bytes @ 0x0
   394                           
   395                           
   396                           ; 4 bytes @ 0x0
   397     0070                     	ds	1
   398     0071                     ??_clcd_write:
   399                           
   400                           ; 1 bytes @ 0x1
   401     0071                     	ds	2
   402     0073                     clcd_write@byte:
   403                           
   404                           ; 1 bytes @ 0x3
   405     0073                     	ds	1
   406     0074                     ??_init_display_controller:
   407     0074                     ?_clcd_print:	
   408                           ; 1 bytes @ 0x4
   409                           
   410     0074                     clcd_print@str:	
   411                           ; 1 bytes @ 0x4
   412                           
   413     0074                     ___lldiv@dividend:	
   414                           ; 2 bytes @ 0x4
   415                           
   416                           
   417                           ; 4 bytes @ 0x4
   418     0074                     	ds	2
   419     0076                     ??_init_clcd:
   420     0076                     clcd_print@addr:	
   421                           ; 1 bytes @ 0x6
   422                           
   423                           
   424                           ; 1 bytes @ 0x6
   425     0076                     	ds	1
   426     0077                     ??_clcd_print:
   427                           
   428                           ; 1 bytes @ 0x7
   429     0077                     	ds	1
   430     0078                     ??___lldiv:
   431                           
   432                           ; 1 bytes @ 0x8
   433     0078                     	ds	1
   434     0079                     ___lldiv@quotient:
   435                           
   436                           ; 4 bytes @ 0x9
   437     0079                     	ds	4
   438     007D                     ___lldiv@counter:
   439                           
   440                           ; 1 bytes @ 0xD
   441     007D                     	ds	1
   442     007E                     ??_init_config:
   443                           
   444                           	psect	cstackBANK0
   445     0020                     __pcstackBANK0:	
   446                           ; 1 bytes @ 0xE
   447                           
   448     0020                     ?_init_uart:
   449     0020                     init_uart@baud:	
   450                           ; 1 bytes @ 0x0
   451                           
   452                           
   453                           ; 4 bytes @ 0x0
   454     0020                     	ds	4
   455     0024                     ??_init_uart:
   456                           
   457                           ; 1 bytes @ 0x4
   458     0024                     	ds	4
   459     0028                     ??_main:
   460                           
   461                           ; 1 bytes @ 0x8
   462     0028                     	ds	1
   463     0029                     main@line1_buffer:
   464                           
   465                           ; 17 bytes @ 0x9
   466     0029                     	ds	17
   467     003A                     main@line2_buffer:
   468                           
   469                           ; 17 bytes @ 0x1A
   470     003A                     	ds	17
   471     004B                     main@i:
   472                           
   473                           ; 2 bytes @ 0x2B
   474     004B                     	ds	2
   475     004D                     main@i_71:
   476                           
   477                           ; 2 bytes @ 0x2D
   478     004D                     	ds	2
   479     004F                     main@ch:
   480                           
   481                           ; 1 bytes @ 0x2F
   482     004F                     	ds	1
   483     0050                     main@count:
   484                           
   485                           ; 2 bytes @ 0x30
   486     0050                     	ds	2
   487                           
   488                           	psect	maintext
   489     06F0                     __pmaintext:	
   490 ;;
   491 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   492 ;;
   493 ;; *************** function _main *****************
   494 ;; Defined at:
   495 ;;		line 27 in file "main.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;  i               2   45[BANK0 ] int 
   500 ;;  i               2   43[BANK0 ] int 
   501 ;;  line2_buffer   17   26[BANK0 ] unsigned char [17]
   502 ;;  line1_buffer   17    9[BANK0 ] unsigned char [17]
   503 ;;  count           2   48[BANK0 ] unsigned int 
   504 ;;  ch              1   47[BANK0 ] unsigned char 
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   509 ;; Tracked objects:
   510 ;;		On entry : B00/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         0       0       0       0       0
   515 ;;      Locals:         0      41       0       0       0
   516 ;;      Temps:          0       1       0       0       0
   517 ;;      Totals:         0      42       0       0       0
   518 ;;Total ram usage:       42 bytes
   519 ;; Hardware stack levels required when called: 4
   520 ;; This function calls:
   521 ;;		_clcd_print
   522 ;;		_getchar
   523 ;;		_init_config
   524 ;; This function is called by:
   525 ;;		Startup code after reset
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529     06F0                     _main:	
   530                           ;psect for function _main
   531                           
   532     06F0                     l961:	
   533                           ;incstack = 0
   534                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   535                           
   536                           
   537                           ;main.c: 30:                 line1_buffer[count] = ch;;main.c: 31:                 line1
      +                          _buffer[count + 1] = '\0';;main.c: 33:             };main.c: 35:             {
   538     06F0  1283               	bcf	3,5	;RP0=0, select bank0
   539     06F1  1303               	bcf	3,6	;RP1=0, select bank0
   540     06F2  01D0               	clrf	main@count
   541     06F3  01D1               	clrf	main@count+1
   542     06F4                     l963:
   543                           
   544                           ;main.c: 37:                 line2_buffer[(count % 16) + 1] = '\0';
   545     06F4  120A  118A  257D  120A  118A  	fcall	_init_config
   546     06F9                     l965:
   547                           
   548                           ;main.c: 40:             else if (count >= 32);main.c: 41:             {
   549     06F9  120A  118A  2569  120A  118A  	fcall	_getchar
   550     06FE  1283               	bcf	3,5	;RP0=0, select bank0
   551     06FF  1303               	bcf	3,6	;RP1=0, select bank0
   552     0700  00CF               	movwf	main@ch
   553     0701                     l967:
   554                           
   555                           ;main.c: 43:                 {
   556     0701  300A               	movlw	10
   557     0702  064F               	xorwf	main@ch,w
   558     0703  1903               	btfsc	3,2
   559     0704  2F06               	goto	u371
   560     0705  2F07               	goto	u370
   561     0706                     u371:
   562     0706  2F9C               	goto	l1017
   563     0707                     u370:
   564     0707                     l969:
   565                           
   566                           ;main.c: 44:                     line1_buffer[i] = line1_buffer[i + 1];;main.c: 45:     
      +                                      }
   567     0707  3000               	movlw	0
   568     0708  0251               	subwf	main@count+1,w
   569     0709  3010               	movlw	16
   570     070A  1903               	skipnz
   571     070B  0250               	subwf	main@count,w
   572     070C  1803               	skipnc
   573     070D  2F0F               	goto	u381
   574     070E  2F10               	goto	u380
   575     070F                     u381:
   576     070F  2F22               	goto	l975
   577     0710                     u380:
   578     0710                     l971:
   579                           
   580                           ;main.c: 46: ;main.c: 47:                 line1_buffer[15] = line2_buffer[0];
   581     0710  0850               	movf	main@count,w
   582     0711  3E29               	addlw	(low (main@line1_buffer| 0))& (0+255)
   583     0712  0084               	movwf	4
   584     0713  084F               	movf	main@ch,w
   585     0714  1383               	bcf	3,7	;select IRP bank0
   586     0715  0080               	movwf	0
   587                           
   588                           ;main.c: 48:                 line1_buffer[16] = '\0';
   589     0716  0850               	movf	main@count,w
   590     0717  3E01               	addlw	1
   591     0718  3E29               	addlw	(low (main@line1_buffer| 0))& (0+255)
   592     0719  0084               	movwf	4
   593     071A  0180               	clrf	0
   594     071B                     l973:
   595                           
   596                           ;main.c: 49: 
   597     071B  3001               	movlw	1
   598     071C  07D0               	addwf	main@count,f
   599     071D  1803               	skipnc
   600     071E  0AD1               	incf	main@count+1,f
   601     071F  3000               	movlw	0
   602     0720  07D1               	addwf	main@count+1,f
   603                           
   604                           ;main.c: 50:                 for (int i = 0; i < 15; i++)
   605     0721  2EF9               	goto	l965
   606     0722                     l975:
   607     0722  3000               	movlw	0
   608     0723  0251               	subwf	main@count+1,w
   609     0724  3010               	movlw	16
   610     0725  1903               	skipnz
   611     0726  0250               	subwf	main@count,w
   612     0727  1C03               	skipc
   613     0728  2F2A               	goto	u391
   614     0729  2F2B               	goto	u390
   615     072A                     u391:
   616     072A  2F42               	goto	l983
   617     072B                     u390:
   618     072B                     l977:
   619     072B  3000               	movlw	0
   620     072C  0251               	subwf	main@count+1,w
   621     072D  3020               	movlw	32
   622     072E  1903               	skipnz
   623     072F  0250               	subwf	main@count,w
   624     0730  1803               	skipnc
   625     0731  2F33               	goto	u401
   626     0732  2F34               	goto	u400
   627     0733                     u401:
   628     0733  2F42               	goto	l983
   629     0734                     u400:
   630     0734                     l979:
   631                           
   632                           ;main.c: 52:                     line2_buffer[i] = line2_buffer[i + 1];;main.c: 53:     
      +                                      }
   633     0734  0850               	movf	main@count,w
   634     0735  390F               	andlw	15
   635     0736  3E3A               	addlw	(low (main@line2_buffer| 0))& (0+255)
   636     0737  0084               	movwf	4
   637     0738  084F               	movf	main@ch,w
   638     0739  1383               	bcf	3,7	;select IRP bank0
   639     073A  0080               	movwf	0
   640                           
   641                           ;main.c: 54:                 line2_buffer[15] = ch;
   642     073B  0850               	movf	main@count,w
   643     073C  390F               	andlw	15
   644     073D  3E01               	addlw	1
   645     073E  3E3A               	addlw	(low (main@line2_buffer| 0))& (0+255)
   646     073F  0084               	movwf	4
   647     0740  0180               	clrf	0
   648     0741  2F1B               	goto	l973
   649     0742                     l983:
   650     0742  3000               	movlw	0
   651     0743  0251               	subwf	main@count+1,w
   652     0744  3020               	movlw	32
   653     0745  1903               	skipnz
   654     0746  0250               	subwf	main@count,w
   655     0747  1C03               	skipc
   656     0748  2F4A               	goto	u411
   657     0749  2F4B               	goto	u410
   658     074A                     u411:
   659     074A  2FF8               	goto	l59
   660     074B                     u410:
   661     074B                     l985:
   662                           
   663                           ;main.c: 58:         else;main.c: 59:         {
   664     074B  01CB               	clrf	main@i
   665     074C  01CC               	clrf	main@i+1
   666     074D                     l991:
   667                           
   668                           ;main.c: 60:             if (count <= 17);main.c: 61:             {
   669     074D  1283               	bcf	3,5	;RP0=0, select bank0
   670     074E  1303               	bcf	3,6	;RP1=0, select bank0
   671     074F  084B               	movf	main@i,w
   672     0750  3E01               	addlw	1
   673     0751  3E29               	addlw	(low (main@line1_buffer| 0))& (0+255)
   674     0752  0084               	movwf	4
   675     0753  1383               	bcf	3,7	;select IRP bank0
   676     0754  0800               	movf	0,w
   677     0755  00A8               	movwf	??_main
   678     0756  084B               	movf	main@i,w
   679     0757  3E29               	addlw	(low (main@line1_buffer| 0))& (0+255)
   680     0758  0084               	movwf	4
   681     0759  0828               	movf	??_main,w
   682     075A  0080               	movwf	0
   683     075B                     l993:
   684                           
   685                           ;main.c: 62:                 clcd_print("                ", (0x80 + 0));
   686     075B  3001               	movlw	1
   687     075C  07CB               	addwf	main@i,f
   688     075D  1803               	skipnc
   689     075E  0ACC               	incf	main@i+1,f
   690     075F  3000               	movlw	0
   691     0760  07CC               	addwf	main@i+1,f
   692     0761                     l995:
   693     0761  084C               	movf	main@i+1,w
   694     0762  3A80               	xorlw	128
   695     0763  00FF               	movwf	btemp+1
   696     0764  3080               	movlw	128
   697     0765  027F               	subwf	btemp+1,w
   698     0766  1D03               	skipz
   699     0767  2F6A               	goto	u425
   700     0768  300F               	movlw	15
   701     0769  024B               	subwf	main@i,w
   702     076A                     u425:
   703     076A  1C03               	skipc
   704     076B  2F6D               	goto	u421
   705     076C  2F6E               	goto	u420
   706     076D                     u421:
   707     076D  2F4D               	goto	l991
   708     076E                     u420:
   709     076E                     l997:
   710                           
   711                           ;main.c: 64:                 clcd_print(line1_buffer, (0x80 + 0));
   712     076E  1283               	bcf	3,5	;RP0=0, select bank0
   713     076F  1303               	bcf	3,6	;RP1=0, select bank0
   714     0770  083A               	movf	main@line2_buffer,w
   715     0771  00B8               	movwf	main@line1_buffer+15
   716     0772                     l999:
   717                           
   718                           ;main.c: 65:             }
   719     0772  01B9               	clrf	main@line1_buffer+16
   720     0773                     l1001:
   721                           
   722                           ;main.c: 67:             {
   723     0773  01CD               	clrf	main@i_71
   724     0774  01CE               	clrf	main@i_71+1
   725     0775                     l1007:
   726                           
   727                           ;main.c: 68:                 clcd_print("                ", (0x80 + 0));;main.c: 69:    
      +                                       clcd_print("                ", (0xC0 + 0));
   728     0775  1283               	bcf	3,5	;RP0=0, select bank0
   729     0776  1303               	bcf	3,6	;RP1=0, select bank0
   730     0777  084D               	movf	main@i_71,w
   731     0778  3E01               	addlw	1
   732     0779  3E3A               	addlw	(low (main@line2_buffer| 0))& (0+255)
   733     077A  0084               	movwf	4
   734     077B  1383               	bcf	3,7	;select IRP bank0
   735     077C  0800               	movf	0,w
   736     077D  00A8               	movwf	??_main
   737     077E  084D               	movf	main@i_71,w
   738     077F  3E3A               	addlw	(low (main@line2_buffer| 0))& (0+255)
   739     0780  0084               	movwf	4
   740     0781  0828               	movf	??_main,w
   741     0782  0080               	movwf	0
   742     0783                     l1009:
   743                           
   744                           ;main.c: 70:                 clcd_print(line1_buffer, (0x80 + 0));
   745     0783  3001               	movlw	1
   746     0784  07CD               	addwf	main@i_71,f
   747     0785  1803               	skipnc
   748     0786  0ACE               	incf	main@i_71+1,f
   749     0787  3000               	movlw	0
   750     0788  07CE               	addwf	main@i_71+1,f
   751     0789                     l1011:
   752     0789  084E               	movf	main@i_71+1,w
   753     078A  3A80               	xorlw	128
   754     078B  00FF               	movwf	btemp+1
   755     078C  3080               	movlw	128
   756     078D  027F               	subwf	btemp+1,w
   757     078E  1D03               	skipz
   758     078F  2F92               	goto	u435
   759     0790  300F               	movlw	15
   760     0791  024D               	subwf	main@i_71,w
   761     0792                     u435:
   762     0792  1C03               	skipc
   763     0793  2F95               	goto	u431
   764     0794  2F96               	goto	u430
   765     0795                     u431:
   766     0795  2F75               	goto	l1007
   767     0796                     u430:
   768     0796                     l1013:
   769                           
   770                           ;main.c: 71:                 clcd_print(line2_buffer, (0xC0 + 0));
   771     0796  1283               	bcf	3,5	;RP0=0, select bank0
   772     0797  1303               	bcf	3,6	;RP1=0, select bank0
   773     0798  084F               	movf	main@ch,w
   774     0799  00C9               	movwf	main@line2_buffer+15
   775     079A                     l1015:
   776                           
   777                           ;main.c: 72:             }
   778     079A  01CA               	clrf	main@line2_buffer+16
   779     079B  2EF9               	goto	l965
   780     079C                     l1017:
   781                           
   782                           ;main.c: 76:     };main.c: 77: 
   783     079C  3000               	movlw	0
   784     079D  0251               	subwf	main@count+1,w
   785     079E  3012               	movlw	18
   786     079F  1903               	skipnz
   787     07A0  0250               	subwf	main@count,w
   788     07A1  1803               	skipnc
   789     07A2  2FA4               	goto	u441
   790     07A3  2FA5               	goto	u440
   791     07A4                     u441:
   792     07A4  2FC7               	goto	l1021
   793     07A5                     u440:
   794     07A5                     l1019:
   795                           
   796                           ;main.c: 78:     return;;main.c: 79: }
   797     07A5  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   798     07A6  00F4               	movwf	clcd_print@str
   799     07A7  3080               	movlw	128
   800     07A8  00F5               	movwf	clcd_print@str+1
   801     07A9  3080               	movlw	128
   802     07AA  00F6               	movwf	clcd_print@addr
   803     07AB  120A  118A  2592  120A  118A  	fcall	_clcd_print
   804     07B0  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   805     07B1  00F4               	movwf	clcd_print@str
   806     07B2  3080               	movlw	128
   807     07B3  00F5               	movwf	clcd_print@str+1
   808     07B4  30C0               	movlw	192
   809     07B5  00F6               	movwf	clcd_print@addr
   810     07B6  120A  118A  2592  120A  118A  	fcall	_clcd_print
   811     07BB  3029               	movlw	(low (main@line1_buffer| 0))& (0+255)
   812     07BC  00F4               	movwf	clcd_print@str
   813     07BD  3000               	movlw	0
   814     07BE  00F5               	movwf	clcd_print@str+1
   815     07BF  3080               	movlw	128
   816     07C0  00F6               	movwf	clcd_print@addr
   817     07C1  120A  118A  2592  120A  118A  	fcall	_clcd_print
   818     07C6  2FF3               	goto	l1023
   819     07C7                     l1021:
   820     07C7  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   821     07C8  00F4               	movwf	clcd_print@str
   822     07C9  3080               	movlw	128
   823     07CA  00F5               	movwf	clcd_print@str+1
   824     07CB  3080               	movlw	128
   825     07CC  00F6               	movwf	clcd_print@addr
   826     07CD  120A  118A  2592  120A  118A  	fcall	_clcd_print
   827     07D2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   828     07D3  00F4               	movwf	clcd_print@str
   829     07D4  3080               	movlw	128
   830     07D5  00F5               	movwf	clcd_print@str+1
   831     07D6  30C0               	movlw	192
   832     07D7  00F6               	movwf	clcd_print@addr
   833     07D8  120A  118A  2592  120A  118A  	fcall	_clcd_print
   834     07DD  3029               	movlw	(low (main@line1_buffer| 0))& (0+255)
   835     07DE  00F4               	movwf	clcd_print@str
   836     07DF  3000               	movlw	0
   837     07E0  00F5               	movwf	clcd_print@str+1
   838     07E1  3080               	movlw	128
   839     07E2  00F6               	movwf	clcd_print@addr
   840     07E3  120A  118A  2592  120A  118A  	fcall	_clcd_print
   841     07E8  303A               	movlw	(low (main@line2_buffer| 0))& (0+255)
   842     07E9  00F4               	movwf	clcd_print@str
   843     07EA  3000               	movlw	0
   844     07EB  00F5               	movwf	clcd_print@str+1
   845     07EC  30C0               	movlw	192
   846     07ED  00F6               	movwf	clcd_print@addr
   847     07EE  120A  118A  2592  120A  118A  	fcall	_clcd_print
   848     07F3                     l1023:
   849     07F3  1283               	bcf	3,5	;RP0=0, select bank0
   850     07F4  1303               	bcf	3,6	;RP1=0, select bank0
   851     07F5  01D0               	clrf	main@count
   852     07F6  01D1               	clrf	main@count+1
   853     07F7  2EF9               	goto	l965
   854     07F8                     l59:
   855     07F8  2EF9               	goto	l965
   856     07F9  120A  118A  2800   	ljmp	start
   857     07FC                     __end_of_main:
   858                           
   859                           	psect	text1
   860     057D                     __ptext1:	
   861 ;; *************** function _init_config *****************
   862 ;; Defined at:
   863 ;;		line 21 in file "main.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0, pclath, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         0       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0
   880 ;;      Totals:         0       0       0       0       0
   881 ;;Total ram usage:        0 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; Hardware stack levels required when called: 3
   884 ;; This function calls:
   885 ;;		_init_clcd
   886 ;;		_init_uart
   887 ;; This function is called by:
   888 ;;		_main
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892     057D                     _init_config:	
   893                           ;psect for function _init_config
   894                           
   895     057D                     l951:	
   896                           ;incstack = 0
   897                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   898                           
   899                           
   900                           ;main.c: 23:     {
   901     057D  120A  118A  2572  120A  118A  	fcall	_init_clcd
   902                           
   903                           ;main.c: 24:         ch = getchar();
   904     0582  3000               	movlw	0
   905     0583  1283               	bcf	3,5	;RP0=0, select bank0
   906     0584  1303               	bcf	3,6	;RP1=0, select bank0
   907     0585  00A3               	movwf	init_uart@baud+3
   908     0586  3000               	movlw	0
   909     0587  00A2               	movwf	init_uart@baud+2
   910     0588  3025               	movlw	37
   911     0589  00A1               	movwf	init_uart@baud+1
   912     058A  3080               	movlw	128
   913     058B  00A0               	movwf	init_uart@baud
   914     058C  120A  118A  25C1  120A  118A  	fcall	_init_uart
   915     0591                     l43:
   916     0591  0008               	return
   917     0592                     __end_of_init_config:
   918                           
   919                           	psect	text2
   920     05C1                     __ptext2:	
   921 ;; *************** function _init_uart *****************
   922 ;; Defined at:
   923 ;;		line 4 in file "uart.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;  baud            4    0[BANK0 ] unsigned long 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0, pclath, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       4       0       0       0
   938 ;;      Locals:         0       0       0       0       0
   939 ;;      Temps:          0       4       0       0       0
   940 ;;      Totals:         0       8       0       0       0
   941 ;;Total ram usage:        8 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; Hardware stack levels required when called: 1
   944 ;; This function calls:
   945 ;;		___lldiv
   946 ;; This function is called by:
   947 ;;		_init_config
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951     05C1                     _init_uart:	
   952                           ;psect for function _init_uart
   953                           
   954     05C1                     l939:	
   955                           ;incstack = 0
   956                           ; Regs used in _init_uart: [wreg+status,2+status,0+pclath+cstack]
   957                           
   958                           
   959                           ;uart.c: 4: void init_uart(unsigned long baud);uart.c: 5: {;uart.c: 7:     SPEN = 1;
   960     05C1  1283               	bcf	3,5	;RP0=0, select bank0
   961     05C2  1303               	bcf	3,6	;RP1=0, select bank0
   962     05C3  1798               	bsf	24,7	;volatile
   963                           
   964                           ;uart.c: 10:     CREN = 1;
   965     05C4  1618               	bsf	24,4	;volatile
   966     05C5                     l941:
   967                           
   968                           ;uart.c: 13:     SPBRG = (20000000 / (16 * baud)) - 1;
   969     05C5  0820               	movf	init_uart@baud,w
   970     05C6  00A4               	movwf	??_init_uart
   971     05C7  0821               	movf	init_uart@baud+1,w
   972     05C8  00A5               	movwf	??_init_uart+1
   973     05C9  0822               	movf	init_uart@baud+2,w
   974     05CA  00A6               	movwf	??_init_uart+2
   975     05CB  0823               	movf	init_uart@baud+3,w
   976     05CC  00A7               	movwf	??_init_uart+3
   977     05CD  3004               	movlw	4
   978     05CE                     u345:
   979     05CE  1003               	clrc
   980     05CF  0DA4               	rlf	??_init_uart,f
   981     05D0  0DA5               	rlf	??_init_uart+1,f
   982     05D1  0DA6               	rlf	??_init_uart+2,f
   983     05D2  0DA7               	rlf	??_init_uart+3,f
   984     05D3                     u340:
   985     05D3  3EFF               	addlw	-1
   986     05D4  1D03               	skipz
   987     05D5  2DCE               	goto	u345
   988     05D6  0827               	movf	??_init_uart+3,w
   989     05D7  00F3               	movwf	___lldiv@divisor+3
   990     05D8  0826               	movf	??_init_uart+2,w
   991     05D9  00F2               	movwf	___lldiv@divisor+2
   992     05DA  0825               	movf	??_init_uart+1,w
   993     05DB  00F1               	movwf	___lldiv@divisor+1
   994     05DC  0824               	movf	??_init_uart,w
   995     05DD  00F0               	movwf	___lldiv@divisor
   996     05DE  3001               	movlw	1
   997     05DF  00F7               	movwf	___lldiv@dividend+3
   998     05E0  3031               	movlw	49
   999     05E1  00F6               	movwf	___lldiv@dividend+2
  1000     05E2  302D               	movlw	45
  1001     05E3  00F5               	movwf	___lldiv@dividend+1
  1002     05E4  3000               	movlw	0
  1003     05E5  00F4               	movwf	___lldiv@dividend
  1004     05E6  120A  118A  268A  120A  118A  	fcall	___lldiv
  1005     05EB  0870               	movf	?___lldiv,w
  1006     05EC  3EFF               	addlw	255
  1007     05ED  1683               	bsf	3,5	;RP0=1, select bank1
  1008     05EE  1303               	bcf	3,6	;RP1=0, select bank1
  1009     05EF  0099               	movwf	25	;volatile
  1010     05F0                     l81:
  1011     05F0  0008               	return
  1012     05F1                     __end_of_init_uart:
  1013                           
  1014                           	psect	text3
  1015     068A                     __ptext3:	
  1016 ;; *************** function ___lldiv *****************
  1017 ;; Defined at:
  1018 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  divisor         4    0[COMMON] unsigned long 
  1021 ;;  dividend        4    4[COMMON] unsigned long 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  quotient        4    9[COMMON] unsigned long 
  1024 ;;  counter         1   13[COMMON] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  4    0[COMMON] unsigned long 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1034 ;;      Params:         8       0       0       0       0
  1035 ;;      Locals:         5       0       0       0       0
  1036 ;;      Temps:          1       0       0       0       0
  1037 ;;      Totals:        14       0       0       0       0
  1038 ;;Total ram usage:       14 bytes
  1039 ;; Hardware stack levels used: 1
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		_init_uart
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047     068A                     ___lldiv:	
  1048                           ;psect for function ___lldiv
  1049                           
  1050     068A                     l907:	
  1051                           ;incstack = 0
  1052                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1053                           
  1054     068A  3000               	movlw	0
  1055     068B  00FC               	movwf	___lldiv@quotient+3
  1056     068C  3000               	movlw	0
  1057     068D  00FB               	movwf	___lldiv@quotient+2
  1058     068E  3000               	movlw	0
  1059     068F  00FA               	movwf	___lldiv@quotient+1
  1060     0690  3000               	movlw	0
  1061     0691  00F9               	movwf	___lldiv@quotient
  1062     0692  0873               	movf	___lldiv@divisor+3,w
  1063     0693  0472               	iorwf	___lldiv@divisor+2,w
  1064     0694  0471               	iorwf	___lldiv@divisor+1,w
  1065     0695  0470               	iorwf	___lldiv@divisor,w
  1066     0696  1903               	skipnz
  1067     0697  2E99               	goto	u271
  1068     0698  2E9A               	goto	u270
  1069     0699                     u271:
  1070     0699  2EE7               	goto	l927
  1071     069A                     u270:
  1072     069A                     l909:
  1073     069A  01FD               	clrf	___lldiv@counter
  1074     069B  0AFD               	incf	___lldiv@counter,f
  1075     069C  2EAA               	goto	l913
  1076     069D                     l911:
  1077     069D  3001               	movlw	1
  1078     069E  00F8               	movwf	??___lldiv
  1079     069F                     u285:
  1080     069F  1003               	clrc
  1081     06A0  0DF0               	rlf	___lldiv@divisor,f
  1082     06A1  0DF1               	rlf	___lldiv@divisor+1,f
  1083     06A2  0DF2               	rlf	___lldiv@divisor+2,f
  1084     06A3  0DF3               	rlf	___lldiv@divisor+3,f
  1085     06A4  0BF8               	decfsz	??___lldiv,f
  1086     06A5  2E9F               	goto	u285
  1087     06A6  3001               	movlw	1
  1088     06A7  00F8               	movwf	??___lldiv
  1089     06A8  0878               	movf	??___lldiv,w
  1090     06A9  07FD               	addwf	___lldiv@counter,f
  1091     06AA                     l913:
  1092     06AA  1FF3               	btfss	___lldiv@divisor+3,7
  1093     06AB  2EAD               	goto	u291
  1094     06AC  2EAE               	goto	u290
  1095     06AD                     u291:
  1096     06AD  2E9D               	goto	l911
  1097     06AE                     u290:
  1098     06AE                     l915:
  1099     06AE  3001               	movlw	1
  1100     06AF  00F8               	movwf	??___lldiv
  1101     06B0                     u305:
  1102     06B0  1003               	clrc
  1103     06B1  0DF9               	rlf	___lldiv@quotient,f
  1104     06B2  0DFA               	rlf	___lldiv@quotient+1,f
  1105     06B3  0DFB               	rlf	___lldiv@quotient+2,f
  1106     06B4  0DFC               	rlf	___lldiv@quotient+3,f
  1107     06B5  0BF8               	decfsz	??___lldiv,f
  1108     06B6  2EB0               	goto	u305
  1109     06B7                     l917:
  1110     06B7  0873               	movf	___lldiv@divisor+3,w
  1111     06B8  0277               	subwf	___lldiv@dividend+3,w
  1112     06B9  1D03               	skipz
  1113     06BA  2EC5               	goto	u315
  1114     06BB  0872               	movf	___lldiv@divisor+2,w
  1115     06BC  0276               	subwf	___lldiv@dividend+2,w
  1116     06BD  1D03               	skipz
  1117     06BE  2EC5               	goto	u315
  1118     06BF  0871               	movf	___lldiv@divisor+1,w
  1119     06C0  0275               	subwf	___lldiv@dividend+1,w
  1120     06C1  1D03               	skipz
  1121     06C2  2EC5               	goto	u315
  1122     06C3  0870               	movf	___lldiv@divisor,w
  1123     06C4  0274               	subwf	___lldiv@dividend,w
  1124     06C5                     u315:
  1125     06C5  1C03               	skipc
  1126     06C6  2EC8               	goto	u311
  1127     06C7  2EC9               	goto	u310
  1128     06C8                     u311:
  1129     06C8  2ED8               	goto	l923
  1130     06C9                     u310:
  1131     06C9                     l919:
  1132     06C9  0870               	movf	___lldiv@divisor,w
  1133     06CA  02F4               	subwf	___lldiv@dividend,f
  1134     06CB  0871               	movf	___lldiv@divisor+1,w
  1135     06CC  1C03               	skipc
  1136     06CD  0F71               	incfsz	___lldiv@divisor+1,w
  1137     06CE  02F5               	subwf	___lldiv@dividend+1,f
  1138     06CF  0872               	movf	___lldiv@divisor+2,w
  1139     06D0  1C03               	skipc
  1140     06D1  0F72               	incfsz	___lldiv@divisor+2,w
  1141     06D2  02F6               	subwf	___lldiv@dividend+2,f
  1142     06D3  0873               	movf	___lldiv@divisor+3,w
  1143     06D4  1C03               	skipc
  1144     06D5  0F73               	incfsz	___lldiv@divisor+3,w
  1145     06D6  02F7               	subwf	___lldiv@dividend+3,f
  1146     06D7                     l921:
  1147     06D7  1479               	bsf	___lldiv@quotient,0
  1148     06D8                     l923:
  1149     06D8  3001               	movlw	1
  1150     06D9                     u325:
  1151     06D9  1003               	clrc
  1152     06DA  0CF3               	rrf	___lldiv@divisor+3,f
  1153     06DB  0CF2               	rrf	___lldiv@divisor+2,f
  1154     06DC  0CF1               	rrf	___lldiv@divisor+1,f
  1155     06DD  0CF0               	rrf	___lldiv@divisor,f
  1156     06DE  3EFF               	addlw	-1
  1157     06DF  1D03               	skipz
  1158     06E0  2ED9               	goto	u325
  1159     06E1                     l925:
  1160     06E1  3001               	movlw	1
  1161     06E2  02FD               	subwf	___lldiv@counter,f
  1162     06E3  1D03               	btfss	3,2
  1163     06E4  2EE6               	goto	u331
  1164     06E5  2EE7               	goto	u330
  1165     06E6                     u331:
  1166     06E6  2EAE               	goto	l915
  1167     06E7                     u330:
  1168     06E7                     l927:
  1169     06E7  087C               	movf	___lldiv@quotient+3,w
  1170     06E8  00F3               	movwf	?___lldiv+3
  1171     06E9  087B               	movf	___lldiv@quotient+2,w
  1172     06EA  00F2               	movwf	?___lldiv+2
  1173     06EB  087A               	movf	___lldiv@quotient+1,w
  1174     06EC  00F1               	movwf	?___lldiv+1
  1175     06ED  0879               	movf	___lldiv@quotient,w
  1176     06EE  00F0               	movwf	?___lldiv
  1177     06EF                     l221:
  1178     06EF  0008               	return
  1179     06F0                     __end_of___lldiv:
  1180                           
  1181                           	psect	text4
  1182     0572                     __ptext4:	
  1183 ;; *************** function _init_clcd *****************
  1184 ;; Defined at:
  1185 ;;		line 44 in file "clcd.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, status,2, status,0, pclath, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1199 ;;      Params:         0       0       0       0       0
  1200 ;;      Locals:         0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0
  1202 ;;      Totals:         0       0       0       0       0
  1203 ;;Total ram usage:        0 bytes
  1204 ;; Hardware stack levels used: 1
  1205 ;; Hardware stack levels required when called: 2
  1206 ;; This function calls:
  1207 ;;		_init_display_controller
  1208 ;; This function is called by:
  1209 ;;		_init_config
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213     0572                     _init_clcd:	
  1214                           ;psect for function _init_clcd
  1215                           
  1216     0572                     l931:	
  1217                           ;incstack = 0
  1218                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  1219                           
  1220                           
  1221                           ;clcd.c: 47:     TRISD = 0x00;
  1222     0572  1683               	bsf	3,5	;RP0=1, select bank1
  1223     0573  1303               	bcf	3,6	;RP1=0, select bank1
  1224     0574  0188               	clrf	8	;volatile
  1225     0575                     l933:
  1226                           
  1227                           ;clcd.c: 50:     TRISE2 = 0;
  1228     0575  1109               	bcf	9,2	;volatile
  1229     0576                     l935:
  1230                           
  1231                           ;clcd.c: 51:     TRISE1 = 0;
  1232     0576  1089               	bcf	9,1	;volatile
  1233     0577                     l937:
  1234                           
  1235                           ;clcd.c: 53:     init_display_controller();
  1236     0577  120A  118A  2627  120A  118A  	fcall	_init_display_controller
  1237     057C                     l23:
  1238     057C  0008               	return
  1239     057D                     __end_of_init_clcd:
  1240                           
  1241                           	psect	text5
  1242     0627                     __ptext5:	
  1243 ;; *************** function _init_display_controller *****************
  1244 ;; Defined at:
  1245 ;;		line 21 in file "clcd.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;		None
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, status,2, status,0, pclath, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1259 ;;      Params:         0       0       0       0       0
  1260 ;;      Locals:         0       0       0       0       0
  1261 ;;      Temps:          2       0       0       0       0
  1262 ;;      Totals:         2       0       0       0       0
  1263 ;;Total ram usage:        2 bytes
  1264 ;; Hardware stack levels used: 1
  1265 ;; Hardware stack levels required when called: 1
  1266 ;; This function calls:
  1267 ;;		_clcd_write
  1268 ;; This function is called by:
  1269 ;;		_init_clcd
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273     0627                     _init_display_controller:	
  1274                           ;psect for function _init_display_controller
  1275                           
  1276     0627                     l883:	
  1277                           ;incstack = 0
  1278                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  1279                           
  1280                           
  1281                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1282     0627  30C3               	movlw	195
  1283     0628  00F5               	movwf	??_init_display_controller+1
  1284     0629  30CD               	movlw	205
  1285     062A  00F4               	movwf	??_init_display_controller
  1286     062B                     u457:
  1287     062B  0BF4               	decfsz	??_init_display_controller,f
  1288     062C  2E2B               	goto	u457
  1289     062D  0BF5               	decfsz	??_init_display_controller+1,f
  1290     062E  2E2B               	goto	u457
  1291     062F                     l885:
  1292                           
  1293                           ;clcd.c: 27:     clcd_write(0x33, 0);
  1294     062F  01F0               	clrf	clcd_write@mode
  1295     0630  3033               	movlw	51
  1296     0631  120A  118A  25F1  120A  118A  	fcall	_clcd_write
  1297     0636                     l887:
  1298                           
  1299                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1300     0636  301B               	movlw	27
  1301     0637  00F5               	movwf	??_init_display_controller+1
  1302     0638  309E               	movlw	158
  1303     0639  00F4               	movwf	??_init_display_controller
  1304     063A                     u467:
  1305     063A  0BF4               	decfsz	??_init_display_controller,f
  1306     063B  2E3A               	goto	u467
  1307     063C  0BF5               	decfsz	??_init_display_controller+1,f
  1308     063D  2E3A               	goto	u467
  1309     063E  0000               	nop
  1310                           
  1311                           ;clcd.c: 29:     clcd_write(0x33, 0);
  1312     063F  01F0               	clrf	clcd_write@mode
  1313     0640  3033               	movlw	51
  1314     0641  120A  118A  25F1  120A  118A  	fcall	_clcd_write
  1315     0646                     l889:
  1316                           
  1317                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1318     0646  30A6               	movlw	166
  1319     0647  00F4               	movwf	??_init_display_controller
  1320     0648                     u477:
  1321     0648  0BF4               	decfsz	??_init_display_controller,f
  1322     0649  2E48               	goto	u477
  1323     064A  0000               	nop
  1324     064B                     l891:
  1325                           
  1326                           ;clcd.c: 31:     clcd_write(0x33, 0);
  1327     064B  01F0               	clrf	clcd_write@mode
  1328     064C  3033               	movlw	51
  1329     064D  120A  118A  25F1  120A  118A  	fcall	_clcd_write
  1330     0652                     l893:
  1331                           
  1332                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1333     0652  2E53               	nop2	;2 cycle nop
  1334     0653  2E54               	nop2	;2 cycle nop
  1335     0654  0000               	nop
  1336     0655                     l895:
  1337                           
  1338                           ;clcd.c: 34:     clcd_write(0x02, 0);
  1339     0655  01F0               	clrf	clcd_write@mode
  1340     0656  3002               	movlw	2
  1341     0657  120A  118A  25F1  120A  118A  	fcall	_clcd_write
  1342     065C                     l897:
  1343                           
  1344                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1345     065C  30A6               	movlw	166
  1346     065D  00F4               	movwf	??_init_display_controller
  1347     065E                     u487:
  1348     065E  0BF4               	decfsz	??_init_display_controller,f
  1349     065F  2E5E               	goto	u487
  1350     0660  0000               	nop
  1351                           
  1352                           ;clcd.c: 36:     clcd_write(0x28, 0);
  1353     0661  01F0               	clrf	clcd_write@mode
  1354     0662  3028               	movlw	40
  1355     0663  120A  118A  25F1  120A  118A  	fcall	_clcd_write
  1356     0668                     l899:
  1357                           
  1358                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1359     0668  30A6               	movlw	166
  1360     0669  00F4               	movwf	??_init_display_controller
  1361     066A                     u497:
  1362     066A  0BF4               	decfsz	??_init_display_controller,f
  1363     066B  2E6A               	goto	u497
  1364     066C  0000               	nop
  1365     066D                     l901:
  1366                           
  1367                           ;clcd.c: 38:     clcd_write(0x01, 0);
  1368     066D  01F0               	clrf	clcd_write@mode
  1369     066E  3001               	movlw	1
  1370     066F  120A  118A  25F1  120A  118A  	fcall	_clcd_write
  1371                           
  1372                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1373     0674  3004               	movlw	4
  1374     0675  00F5               	movwf	??_init_display_controller+1
  1375     0676  303D               	movlw	61
  1376     0677  00F4               	movwf	??_init_display_controller
  1377     0678                     u507:
  1378     0678  0BF4               	decfsz	??_init_display_controller,f
  1379     0679  2E78               	goto	u507
  1380     067A  0BF5               	decfsz	??_init_display_controller+1,f
  1381     067B  2E78               	goto	u507
  1382     067C  2E7D               	nop2
  1383     067D                     l903:
  1384                           
  1385                           ;clcd.c: 40:     clcd_write(0x0C, 0);
  1386     067D  01F0               	clrf	clcd_write@mode
  1387     067E  300C               	movlw	12
  1388     067F  120A  118A  25F1  120A  118A  	fcall	_clcd_write
  1389     0684                     l905:
  1390                           
  1391                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1392     0684  30A6               	movlw	166
  1393     0685  00F4               	movwf	??_init_display_controller
  1394     0686                     u517:
  1395     0686  0BF4               	decfsz	??_init_display_controller,f
  1396     0687  2E86               	goto	u517
  1397     0688  0000               	nop
  1398     0689                     l20:
  1399     0689  0008               	return
  1400     068A                     __end_of_init_display_controller:
  1401                           
  1402                           	psect	text6
  1403     0569                     __ptext6:	
  1404 ;; *************** function _getchar *****************
  1405 ;; Defined at:
  1406 ;;		line 16 in file "uart.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;		None
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      unsigned char 
  1413 ;; Registers used:
  1414 ;;		wreg
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1420 ;;      Params:         0       0       0       0       0
  1421 ;;      Locals:         0       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0
  1423 ;;      Totals:         0       0       0       0       0
  1424 ;;Total ram usage:        0 bytes
  1425 ;; Hardware stack levels used: 1
  1426 ;; This function calls:
  1427 ;;		Nothing
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433     0569                     _getchar:	
  1434                           ;psect for function _getchar
  1435                           
  1436     0569                     l953:	
  1437                           ;incstack = 0
  1438                           ; Regs used in _getchar: [wreg]
  1439                           
  1440     0569                     l84:	
  1441                           ;uart.c: 22:     }
  1442                           
  1443                           
  1444                           ;uart.c: 19:     while (RCIF != 1)
  1445     0569  1283               	bcf	3,5	;RP0=0, select bank0
  1446     056A  1303               	bcf	3,6	;RP1=0, select bank0
  1447     056B  1E8C               	btfss	12,5	;volatile
  1448     056C  2D6E               	goto	u361
  1449     056D  2D6F               	goto	u360
  1450     056E                     u361:
  1451     056E  2D69               	goto	l84
  1452     056F                     u360:
  1453     056F                     l86:
  1454                           
  1455                           ;uart.c: 25:     RCIF = 0;
  1456     056F  128C               	bcf	12,5	;volatile
  1457     0570                     l955:
  1458                           
  1459                           ;uart.c: 28:     return RCREG;
  1460     0570  081A               	movf	26,w	;volatile
  1461     0571                     l87:
  1462     0571  0008               	return
  1463     0572                     __end_of_getchar:
  1464                           
  1465                           	psect	text7
  1466     0592                     __ptext7:	
  1467 ;; *************** function _clcd_print *****************
  1468 ;; Defined at:
  1469 ;;		line 62 in file "clcd.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  str             2    4[COMMON] PTR const unsigned char 
  1472 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  1473 ;;		 -> main@line2_buffer(17), main@line1_buffer(17), 
  1474 ;;  addr            1    6[COMMON] unsigned char 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         3       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0
  1489 ;;      Totals:         3       0       0       0       0
  1490 ;;Total ram usage:        3 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 1
  1493 ;; This function calls:
  1494 ;;		_clcd_write
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500     0592                     _clcd_print:	
  1501                           ;psect for function _clcd_print
  1502                           
  1503     0592                     l943:	
  1504                           ;incstack = 0
  1505                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1506                           
  1507                           
  1508                           ;clcd.c: 62: void clcd_print(const char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          64:     clcd_write(addr, 0);
  1509     0592  01F0               	clrf	clcd_write@mode
  1510     0593  0876               	movf	clcd_print@addr,w
  1511     0594  120A  118A  25F1  120A  118A  	fcall	_clcd_write
  1512                           
  1513                           ;clcd.c: 66:     while (*str != '\0')
  1514     0599  2DB0               	goto	l949
  1515     059A                     l945:
  1516                           
  1517                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
  1518     059A  01F0               	clrf	clcd_write@mode
  1519     059B  0AF0               	incf	clcd_write@mode,f
  1520     059C  0875               	movf	clcd_print@str+1,w
  1521     059D  00FF               	movwf	btemp+1
  1522     059E  0874               	movf	clcd_print@str,w
  1523     059F  0084               	movwf	4
  1524     05A0  120A  118A  2003  120A  118A  	fcall	stringtab
  1525     05A5  120A  118A  25F1  120A  118A  	fcall	_clcd_write
  1526     05AA                     l947:
  1527                           
  1528                           ;clcd.c: 69:         str++;
  1529     05AA  3001               	movlw	1
  1530     05AB  07F4               	addwf	clcd_print@str,f
  1531     05AC  1803               	skipnc
  1532     05AD  0AF5               	incf	clcd_print@str+1,f
  1533     05AE  3000               	movlw	0
  1534     05AF  07F5               	addwf	clcd_print@str+1,f
  1535     05B0                     l949:
  1536                           
  1537                           ;clcd.c: 66:     while (*str != '\0')
  1538     05B0  0875               	movf	clcd_print@str+1,w
  1539     05B1  1283               	bcf	3,5	;RP0=0, select bank0
  1540     05B2  1303               	bcf	3,6	;RP1=0, select bank0
  1541     05B3  00FF               	movwf	btemp+1
  1542     05B4  0874               	movf	clcd_print@str,w
  1543     05B5  0084               	movwf	4
  1544     05B6  120A  118A  2003  120A  118A  	fcall	stringtab
  1545     05BB  3A00               	xorlw	0
  1546     05BC  1D03               	skipz
  1547     05BD  2DBF               	goto	u351
  1548     05BE  2DC0               	goto	u350
  1549     05BF                     u351:
  1550     05BF  2D9A               	goto	l945
  1551     05C0                     u350:
  1552     05C0                     l32:
  1553     05C0  0008               	return
  1554     05C1                     __end_of_clcd_print:
  1555                           
  1556                           	psect	text8
  1557     05F1                     __ptext8:	
  1558 ;; *************** function _clcd_write *****************
  1559 ;; Defined at:
  1560 ;;		line 4 in file "clcd.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  byte            1    wreg     unsigned char 
  1563 ;;  mode            1    0[COMMON] unsigned char 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  byte            1    3[COMMON] unsigned char 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, status,2, status,0
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1575 ;;      Params:         1       0       0       0       0
  1576 ;;      Locals:         1       0       0       0       0
  1577 ;;      Temps:          2       0       0       0       0
  1578 ;;      Totals:         4       0       0       0       0
  1579 ;;Total ram usage:        4 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_init_display_controller
  1585 ;;		_clcd_print
  1586 ;;		_clcd_putch
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590     05F1                     _clcd_write:	
  1591                           ;psect for function _clcd_write
  1592                           
  1593                           
  1594                           ;incstack = 0
  1595                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  1596                           ;clcd_write@byte stored from wreg
  1597     05F1  00F3               	movwf	clcd_write@byte
  1598     05F2                     l863:
  1599                           
  1600                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = mode;
  1601     05F2  1870               	btfsc	clcd_write@mode,0
  1602     05F3  2DF5               	goto	u241
  1603     05F4  2DF9               	goto	u240
  1604     05F5                     u241:
  1605     05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1606     05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1607     05F7  1509               	bsf	9,2	;volatile
  1608     05F8  2DFC               	goto	u254
  1609     05F9                     u240:
  1610     05F9  1283               	bcf	3,5	;RP0=0, select bank0
  1611     05FA  1303               	bcf	3,6	;RP1=0, select bank0
  1612     05FB  1109               	bcf	9,2	;volatile
  1613     05FC                     u254:
  1614     05FC                     l865:
  1615                           
  1616                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  1617     05FC  0873               	movf	clcd_write@byte,w
  1618     05FD  39F0               	andlw	240
  1619     05FE  0088               	movwf	8	;volatile
  1620     05FF                     l867:
  1621                           
  1622                           ;clcd.c: 9:     RE1 = 1;
  1623     05FF  1489               	bsf	9,1	;volatile
  1624     0600                     l869:
  1625                           
  1626                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1627     0600  30A6               	movlw	166
  1628     0601  00F1               	movwf	??_clcd_write
  1629     0602                     u527:
  1630     0602  0BF1               	decfsz	??_clcd_write,f
  1631     0603  2E02               	goto	u527
  1632     0604  0000               	nop
  1633     0605                     l871:
  1634                           
  1635                           ;clcd.c: 11:     RE1 = 0;
  1636     0605  1283               	bcf	3,5	;RP0=0, select bank0
  1637     0606  1303               	bcf	3,6	;RP1=0, select bank0
  1638     0607  1089               	bcf	9,1	;volatile
  1639     0608                     l873:
  1640                           
  1641                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << 4;
  1642     0608  0873               	movf	clcd_write@byte,w
  1643     0609  390F               	andlw	15
  1644     060A  00F1               	movwf	??_clcd_write
  1645     060B  3003               	movlw	3
  1646     060C                     u265:
  1647     060C  1003               	clrc
  1648     060D  0DF1               	rlf	??_clcd_write,f
  1649     060E  3EFF               	addlw	-1
  1650     060F  1D03               	skipz
  1651     0610  2E0C               	goto	u265
  1652     0611  1003               	clrc
  1653     0612  0D71               	rlf	??_clcd_write,w
  1654     0613  0088               	movwf	8	;volatile
  1655     0614                     l875:
  1656                           
  1657                           ;clcd.c: 14:     RE1 = 1;
  1658     0614  1489               	bsf	9,1	;volatile
  1659     0615                     l877:
  1660                           
  1661                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1662     0615  30A6               	movlw	166
  1663     0616  00F1               	movwf	??_clcd_write
  1664     0617                     u537:
  1665     0617  0BF1               	decfsz	??_clcd_write,f
  1666     0618  2E17               	goto	u537
  1667     0619  0000               	nop
  1668     061A                     l879:
  1669                           
  1670                           ;clcd.c: 16:     RE1 = 0;
  1671     061A  1283               	bcf	3,5	;RP0=0, select bank0
  1672     061B  1303               	bcf	3,6	;RP1=0, select bank0
  1673     061C  1089               	bcf	9,1	;volatile
  1674     061D                     l881:
  1675                           
  1676                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1677     061D  301B               	movlw	27
  1678     061E  00F2               	movwf	??_clcd_write+1
  1679     061F  309E               	movlw	158
  1680     0620  00F1               	movwf	??_clcd_write
  1681     0621                     u547:
  1682     0621  0BF1               	decfsz	??_clcd_write,f
  1683     0622  2E21               	goto	u547
  1684     0623  0BF2               	decfsz	??_clcd_write+1,f
  1685     0624  2E21               	goto	u547
  1686     0625  0000               	nop
  1687     0626                     l17:
  1688     0626  0008               	return
  1689     0627                     __end_of_clcd_write:
  1690     007E                     btemp	set	126	;btemp
  1691     007E                     wtemp0	set	126
  1692                           
  1693                           	psect	config
  1694                           
  1695                           ;Config register CONFIG @ 0x2007
  1696                           ;	Oscillator Selection bits
  1697                           ;	FOSC = 0x3, unprogrammed default
  1698                           ;	Watchdog Timer Enable bit
  1699                           ;	WDTE = OFF, WDT disabled
  1700                           ;	Power-up Timer Enable bit
  1701                           ;	PWRTE = 0x1, unprogrammed default
  1702                           ;	Brown-out Reset Enable bit
  1703                           ;	BOREN = 0x1, unprogrammed default
  1704                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1705                           ;	LVP = 0x1, unprogrammed default
  1706                           ;	Data EEPROM Memory Code Protection bit
  1707                           ;	CPD = 0x1, unprogrammed default
  1708                           ;	Flash Program Memory Write Enable bits
  1709                           ;	WRT = 0x3, unprogrammed default
  1710                           ;	In-Circuit Debugger Mode bit
  1711                           ;	DEBUG = 0x1, unprogrammed default
  1712                           ;	Flash Program Memory Code Protection bit
  1713                           ;	CP = 0x1, unprogrammed default
  1714     2007                     	org	8199
  1715     2007  3FFB               	dw	16379

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 
		 -> main@line2_buffer(BANK0[17]), main@line1_buffer(BANK0[17]), 


Critical Paths under _main in COMMON

    _init_uart->___lldiv
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    _init_config->_init_uart

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0    4196
                                              8 BANK0     42    42      0
                         _clcd_print
                            _getchar
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    1314
                          _init_clcd
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _getchar                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     0      3    2033
                                              4 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     902
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _getchar
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_uart
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      32       5       62.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Sep 30 21:26:29 2022

                              pc 0002                   clcd_print@addr 0076                               l20 0689  
                             l23 057C                               l32 05C0                               l17 0626  
                             l43 0591                               l81 05F0                               l59 07F8  
                             l84 0569                               l86 056F                               l87 0571  
                             fsr 0004                              l221 06EF                              l901 066D  
                            l903 067D                              l911 069D                              l905 0684  
                            l921 06D7                              l913 06AA                              l931 0572  
                            l923 06D8                              l915 06AE                              l907 068A  
                            l933 0575                              l925 06E1                              l917 06B7  
                            l909 069A                              l941 05C5                              l871 0605  
                            l863 05F2                              l943 0592                              l935 0576  
                            l919 06C9                              l927 06E7                              l951 057D  
                            l881 061D                              l873 0608                              l865 05FC  
                            l945 059A                              l953 0569                              l937 0577  
                            l961 06F0                              l875 0614                              l867 05FF  
                            l947 05AA                              l955 0570                              l891 064B  
                            l883 0627                              l939 05C1                              l971 0710  
                            l963 06F4                              l877 0615                              l869 0600  
                            l949 05B0                              l893 0652                              l885 062F  
                            l973 071B                              l965 06F9                              l879 061A  
                            l895 0655                              l887 0636                              l991 074D  
                            l983 0742                              l975 0722                              l967 0701  
                            l897 065C                              l889 0646                              l993 075B  
                            l985 074B                              l977 072B                              l969 0707  
                            l899 0668                              l995 0761                              l979 0734  
                            l997 076E                              l999 0772                              _RE1 0049  
                            _RE2 004A                              u310 06C9                              u311 06C8  
                            u240 05F9                              u400 0734                              u241 05F5  
                            u305 06B0                              u401 0733                              u330 06E7  
                            u410 074B                              u331 06E6                              u315 06C5  
                            u411 074A                              u340 05D3                              u420 076E  
                            u325 06D9                              u421 076D                              u254 05FC  
                            u350 05C0                              u270 069A                              u430 0796  
                            u351 05BF                              u271 0699                              u431 0795  
                            u360 056F                              u440 07A5                              u265 060C  
                            u361 056E                              u345 05CE                              u441 07A4  
                            u425 076A                              u290 06AE                              u370 0707  
                            u507 0678                              u291 06AD                              u435 0792  
                            u371 0706                              u380 0710                              u517 0686  
                            u285 069F                              u381 070F                              u390 072B  
                            u527 0602                              u391 072A                              u537 0617  
                            u457 062B                              u547 0621                              u467 063A  
                            u477 0648                              u487 065E                              u497 066A  
                            fsr0 0004                              indf 0000                             l1001 0773  
                           l1011 0789                             l1021 07C7                             l1013 0796  
                           l1023 07F3                             l1015 079A                             l1007 0775  
                           l1009 0783                             l1017 079C                             l1019 07A5  
                           STR_1 0013                             STR_2 0013                             STR_3 0013  
                           STR_4 0013                             _CREN 00C4                             _RCIF 0065  
                           _SPEN 00C7                             _TXIF 0064                             _main 06F0  
                           btemp 007E                             start 0000                   clcd_write@byte 0073  
                 clcd_write@mode 0070                            ?_main 0070                  __end_of___lldiv 06F0  
                   ?_init_config 0070                            _RCREG 001A                            _SPBRG 0099  
                          _PORTD 0008                            _TRISD 0088                            _TXREG 0019  
                __end_of_getchar 0572                            main@i 004B                            pclath 000A  
                          status 0003                            wtemp0 007E                  __initialization 07FC  
                   __end_of_main 07FC                           ??_main 0028                           _TRISE1 0449  
                         _TRISE2 044A          _init_display_controller 0627                        ??___lldiv 0078  
                         main@ch 004F                        ??_getchar 0070          __end_of__initialization 07FC  
                 __pcstackCOMMON 0070        ??_init_display_controller 0074                       _clcd_print 0592  
                     _clcd_write 05F1                       __pmaintext 06F0                       __stringtab 0003  
               main@line1_buffer 0029                 main@line2_buffer 003A                          ___lldiv 068A  
                        __ptext1 057D                          __ptext2 05C1                          __ptext3 068A  
                        __ptext4 0572                          __ptext5 0627                          __ptext6 0569  
                        __ptext7 0592                          __ptext8 05F1                          _getchar 0569  
__end_of_init_display_controller 068A                __end_of_init_clcd 057D                __end_of_init_uart 05F1  
           end_of_initialization 07FC                      ?_clcd_print 0074                  ___lldiv@divisor 0070  
                    ?_clcd_write 0070                  ___lldiv@counter 007D                    clcd_print@str 0074  
            start_initialization 07FC                    ??_init_config 007E                        ___latbits 0002  
                  __pcstackBANK0 0020                         ?___lldiv 0070                        __pstrings 0003  
                       ?_getchar 0070                        _init_clcd 0572              __end_of_init_config 0592  
                      _init_uart 05C1         ?_init_display_controller 0070                     ??_clcd_print 0077  
                   ??_clcd_write 0071                      __stringbase 0012                        main@count 0050  
             __end_of_clcd_print 05C1               __end_of_clcd_write 0627                       ?_init_clcd 0070  
                     ?_init_uart 0020               __end_of__stringtab 0013                      _init_config 057D  
                       main@i_71 004D                      ??_init_clcd 0076                      ??_init_uart 0024  
                  init_uart@baud 0020                 ___lldiv@dividend 0074                        stringcode 000D  
               ___lldiv@quotient 0079                         stringdir 000D                         stringtab 0003  
