

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Oct 18 10:15:05 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0013                     	;# 
    84     0014                     	;# 
    85     0015                     	;# 
    86     0015                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001B                     	;# 
    94     001C                     	;# 
    95     001D                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     0086                     	;# 
   101     0087                     	;# 
   102     0088                     	;# 
   103     0089                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     010C                     	;# 
   118     010D                     	;# 
   119     010E                     	;# 
   120     010F                     	;# 
   121     018C                     	;# 
   122     018D                     	;# 
   123     0000                     	;# 
   124     0001                     	;# 
   125     0002                     	;# 
   126     0003                     	;# 
   127     0004                     	;# 
   128     0005                     	;# 
   129     0006                     	;# 
   130     0007                     	;# 
   131     0008                     	;# 
   132     0009                     	;# 
   133     000A                     	;# 
   134     000B                     	;# 
   135     000C                     	;# 
   136     000D                     	;# 
   137     000E                     	;# 
   138     000E                     	;# 
   139     000F                     	;# 
   140     0010                     	;# 
   141     0011                     	;# 
   142     0012                     	;# 
   143     0013                     	;# 
   144     0014                     	;# 
   145     0015                     	;# 
   146     0015                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001B                     	;# 
   154     001C                     	;# 
   155     001D                     	;# 
   156     001E                     	;# 
   157     001F                     	;# 
   158     0081                     	;# 
   159     0085                     	;# 
   160     0086                     	;# 
   161     0087                     	;# 
   162     0088                     	;# 
   163     0089                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     0091                     	;# 
   168     0092                     	;# 
   169     0093                     	;# 
   170     0094                     	;# 
   171     0098                     	;# 
   172     0099                     	;# 
   173     009C                     	;# 
   174     009D                     	;# 
   175     009E                     	;# 
   176     009F                     	;# 
   177     010C                     	;# 
   178     010D                     	;# 
   179     010E                     	;# 
   180     010F                     	;# 
   181     018C                     	;# 
   182     018D                     	;# 
   183     0000                     	;# 
   184     0001                     	;# 
   185     0002                     	;# 
   186     0003                     	;# 
   187     0004                     	;# 
   188     0005                     	;# 
   189     0006                     	;# 
   190     0007                     	;# 
   191     0008                     	;# 
   192     0009                     	;# 
   193     000A                     	;# 
   194     000B                     	;# 
   195     000C                     	;# 
   196     000D                     	;# 
   197     000E                     	;# 
   198     000E                     	;# 
   199     000F                     	;# 
   200     0010                     	;# 
   201     0011                     	;# 
   202     0012                     	;# 
   203     0013                     	;# 
   204     0014                     	;# 
   205     0015                     	;# 
   206     0015                     	;# 
   207     0016                     	;# 
   208     0017                     	;# 
   209     0018                     	;# 
   210     0019                     	;# 
   211     001A                     	;# 
   212     001B                     	;# 
   213     001B                     	;# 
   214     001C                     	;# 
   215     001D                     	;# 
   216     001E                     	;# 
   217     001F                     	;# 
   218     0081                     	;# 
   219     0085                     	;# 
   220     0086                     	;# 
   221     0087                     	;# 
   222     0088                     	;# 
   223     0089                     	;# 
   224     008C                     	;# 
   225     008D                     	;# 
   226     008E                     	;# 
   227     0091                     	;# 
   228     0092                     	;# 
   229     0093                     	;# 
   230     0094                     	;# 
   231     0098                     	;# 
   232     0099                     	;# 
   233     009C                     	;# 
   234     009D                     	;# 
   235     009E                     	;# 
   236     009F                     	;# 
   237     010C                     	;# 
   238     010D                     	;# 
   239     010E                     	;# 
   240     010F                     	;# 
   241     018C                     	;# 
   242     018D                     	;# 
   243     0000                     	;# 
   244     0001                     	;# 
   245     0002                     	;# 
   246     0003                     	;# 
   247     0004                     	;# 
   248     0005                     	;# 
   249     0006                     	;# 
   250     0007                     	;# 
   251     0008                     	;# 
   252     0009                     	;# 
   253     000A                     	;# 
   254     000B                     	;# 
   255     000C                     	;# 
   256     000D                     	;# 
   257     000E                     	;# 
   258     000E                     	;# 
   259     000F                     	;# 
   260     0010                     	;# 
   261     0011                     	;# 
   262     0012                     	;# 
   263     0013                     	;# 
   264     0014                     	;# 
   265     0015                     	;# 
   266     0015                     	;# 
   267     0016                     	;# 
   268     0017                     	;# 
   269     0018                     	;# 
   270     0019                     	;# 
   271     001A                     	;# 
   272     001B                     	;# 
   273     001B                     	;# 
   274     001C                     	;# 
   275     001D                     	;# 
   276     001E                     	;# 
   277     001F                     	;# 
   278     0081                     	;# 
   279     0085                     	;# 
   280     0086                     	;# 
   281     0087                     	;# 
   282     0088                     	;# 
   283     0089                     	;# 
   284     008C                     	;# 
   285     008D                     	;# 
   286     008E                     	;# 
   287     0091                     	;# 
   288     0092                     	;# 
   289     0093                     	;# 
   290     0094                     	;# 
   291     0098                     	;# 
   292     0099                     	;# 
   293     009C                     	;# 
   294     009D                     	;# 
   295     009E                     	;# 
   296     009F                     	;# 
   297     010C                     	;# 
   298     010D                     	;# 
   299     010E                     	;# 
   300     010F                     	;# 
   301     018C                     	;# 
   302     018D                     	;# 
   303                           
   304                           	psect	idataCOMMON
   305     0329                     __pidataCOMMON:
   306                           
   307                           ;initializer for read_matrix_keypad@once
   308     0329  3401               	retlw	1
   309                           
   310                           	psect	idataBANK0
   311     0371                     __pidataBANK0:
   312                           
   313                           ;initializer for main@F872
   314     0371  3420               	retlw	32
   315     0372  3420               	retlw	32
   316     0373  3420               	retlw	32
   317     0374  3420               	retlw	32
   318     0375  3420               	retlw	32
   319     0376  3420               	retlw	32
   320     0377  3420               	retlw	32
   321     0378  3420               	retlw	32
   322     0379  3420               	retlw	32
   323     037A  3420               	retlw	32
   324     037B  3420               	retlw	32
   325     037C  3420               	retlw	32
   326     037D  3420               	retlw	32
   327     037E  3420               	retlw	32
   328     037F  3420               	retlw	32
   329     0380  3420               	retlw	32
   330                           
   331                           ;initializer for _pos
   332     0381  3404               	retlw	4
   333                           
   334                           	psect	idataBANK1
   335     0350                     __pidataBANK1:
   336                           
   337                           ;initializer for main@F874
   338     0350  3420               	retlw	32
   339     0351  3420               	retlw	32
   340     0352  3420               	retlw	32
   341     0353  3420               	retlw	32
   342     0354  3420               	retlw	32
   343     0355  3420               	retlw	32
   344     0356  3420               	retlw	32
   345     0357  3420               	retlw	32
   346     0358  3420               	retlw	32
   347     0359  3420               	retlw	32
   348     035A  3420               	retlw	32
   349     035B  3420               	retlw	32
   350     035C  3420               	retlw	32
   351     035D  3420               	retlw	32
   352     035E  3420               	retlw	32
   353     035F  3420               	retlw	32
   354     0008                     _PORTD	set	8
   355     0032                     _RB2	set	50
   356     0031                     _RB1	set	49
   357     0030                     _RB0	set	48
   358     0040                     _RD0	set	64
   359     0041                     _RD1	set	65
   360     0042                     _RD2	set	66
   361     0043                     _RD3	set	67
   362     0049                     _RE1	set	73
   363     004A                     _RE2	set	74
   364     0086                     _TRISB	set	134
   365     0088                     _TRISD	set	136
   366     040F                     _nRBPU	set	1039
   367     0449                     _TRISE1	set	1097
   368     044A                     _TRISE2	set	1098
   369                           
   370                           	psect	strings
   371     0003                     __pstrings:
   372     0003                     stringtab:
   373     0003                     __stringtab:
   374                           
   375                           ;	String table - string pointers are 1 byte each
   376     0003  1BFF               	btfsc	btemp+1,7
   377     0004  280D               	ljmp	stringcode
   378     0005  1383               	bcf	3,7
   379     0006  187F               	btfsc	btemp+1,0
   380     0007  1783               	bsf	3,7
   381     0008  0800               	movf	0,w
   382     0009  0A84               	incf	4,f
   383     000A  1903               	skipnz
   384     000B  0AFF               	incf	btemp+1,f
   385     000C  0008               	return
   386     000D                     stringcode:
   387     000D                     stringdir:
   388     000D  3000               	movlw	high stringdir
   389     000E  008A               	movwf	10
   390     000F  0804               	movf	4,w
   391     0010  0A84               	incf	4,f
   392     0011  0782               	addwf	2,f
   393     0012                     __stringbase:
   394     0012  3400               	retlw	0
   395     0013                     __end_of__stringtab:
   396     0013                     STR_3:
   397     0013  3420               	retlw	32	;' '
   398     0014  3420               	retlw	32	;' '
   399     0015  3420               	retlw	32	;' '
   400     0016  3420               	retlw	32	;' '
   401     0017  3420               	retlw	32	;' '
   402     0018  3420               	retlw	32	;' '
   403     0019  3420               	retlw	32	;' '
   404     001A  3420               	retlw	32	;' '
   405     001B  3420               	retlw	32	;' '
   406     001C  3420               	retlw	32	;' '
   407     001D  3420               	retlw	32	;' '
   408     001E  3420               	retlw	32	;' '
   409     001F  3420               	retlw	32	;' '
   410     0020  3420               	retlw	32	;' '
   411     0021  3420               	retlw	32	;' '
   412     0022  3420               	retlw	32	;' '
   413     0023  3400               	retlw	0
   414     0024                     STR_1:
   415     0024  3445               	retlw	69	;'E'
   416     0025  344E               	retlw	78	;'N'
   417     0026  3454               	retlw	84	;'T'
   418     0027  3445               	retlw	69	;'E'
   419     0028  3452               	retlw	82	;'R'
   420     0029  3420               	retlw	32	;' '
   421     002A  344E               	retlw	78	;'N'
   422     002B  3445               	retlw	69	;'E'
   423     002C  3457               	retlw	87	;'W'
   424     002D  3420               	retlw	32	;' '
   425     002E  344E               	retlw	78	;'N'
   426     002F  3455               	retlw	85	;'U'
   427     0030  344D               	retlw	77	;'M'
   428     0031  3442               	retlw	66	;'B'
   429     0032  3445               	retlw	69	;'E'
   430     0033  3452               	retlw	82	;'R'
   431     0034  3400               	retlw	0
   432     0035                     STR_2:
   433     0035  344D               	retlw	77	;'M'
   434     0036  3453               	retlw	83	;'S'
   435     0037  3447               	retlw	71	;'G'
   436     0038  343A               	retlw	58	;':'
   437     0039  3400               	retlw	0
   438     0013                     
   439                           	psect	cinit
   440     07D8                     start_initialization:	
   441                           ; #config settings
   442                           
   443     07D8                     __initialization:
   444                           
   445                           ; Initialize objects allocated to BANK1
   446     07D8  1383               	bcf	3,7	;select IRP bank0
   447     07D9  30B0               	movlw	low (__pdataBANK1+16)
   448     07DA  00FD               	movwf	btemp+-1
   449     07DB  3003               	movlw	high __pidataBANK1
   450     07DC  00FE               	movwf	btemp
   451     07DD  3050               	movlw	low __pidataBANK1
   452     07DE  00FF               	movwf	btemp+1
   453     07DF  30A0               	movlw	low __pdataBANK1
   454     07E0  0084               	movwf	4
   455     07E1  120A  118A  2386  120A  118A  	fcall	init_ram0
   456                           
   457                           ; Initialize objects allocated to BANK0
   458     07E6  306B               	movlw	low (__pdataBANK0+17)
   459     07E7  00FD               	movwf	btemp+-1
   460     07E8  3003               	movlw	high __pidataBANK0
   461     07E9  00FE               	movwf	btemp
   462     07EA  3071               	movlw	low __pidataBANK0
   463     07EB  00FF               	movwf	btemp+1
   464     07EC  305A               	movlw	low __pdataBANK0
   465     07ED  0084               	movwf	4
   466     07EE  120A  118A  2386  120A  118A  	fcall	init_ram0
   467                           
   468                           ; Initialize objects allocated to COMMON
   469     07F3  120A  118A  2329  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   470     07F8  00FB               	movwf	__pdataCOMMON& (0+127)
   471                           
   472                           ; Clear objects allocated to BANK0
   473     07F9  01EB               	clrf	__pbssBANK0& (0+127)
   474     07FA  01EC               	clrf	(__pbssBANK0+1)& (0+127)
   475     07FB  01ED               	clrf	(__pbssBANK0+2)& (0+127)
   476     07FC                     end_of_initialization:	
   477                           ;End of C runtime variable initialization code
   478                           
   479     07FC                     __end_of__initialization:
   480     07FC  0183               	clrf	3
   481     07FD  120A  118A  2D2C   	ljmp	_main	;jump to C main() function
   482                           
   483                           	psect	dataCOMMON
   484     007B                     __pdataCOMMON:
   485     007B                     read_matrix_keypad@once:
   486     007B                     	ds	1
   487                           
   488                           	psect	bssBANK0
   489     006B                     __pbssBANK0:
   490     006B                     main@blink_delay:
   491     006B                     	ds	2
   492     006D                     main@toggle_cursor:
   493     006D                     	ds	1
   494                           
   495                           	psect	dataBANK0
   496     005A                     __pdataBANK0:
   497     005A                     main@F872:
   498     005A                     	ds	16
   499     006A                     _pos:
   500     006A                     	ds	1
   501                           
   502                           	psect	dataBANK1
   503     00A0                     __pdataBANK1:
   504     00A0                     main@F874:
   505     00A0                     	ds	16
   506                           
   507                           	psect	inittext
   508     0382                     init_fetch0:	
   509                           ;	Called with low address in FSR and high address in W
   510                           
   511     0382  087E               	movf	btemp,w
   512     0383  008A               	movwf	10
   513     0384  087F               	movf	btemp+1,w
   514     0385  0082               	movwf	2
   515     0386                     init_ram0:	
   516                           ;Called with:
   517                           ;	high address of idata address in btemp 
   518                           ;	low address of idata address in btemp+1 
   519                           ;	low address of data in FSR
   520                           ;	high address + 1 of data in btemp-1
   521                           
   522     0386  120A  118A  2382  120A  118A  	fcall	init_fetch0
   523     038B  0080               	movwf	0
   524     038C  0A84               	incf	4,f
   525     038D  0804               	movf	4,w
   526     038E  067D               	xorwf	btemp+-1,w
   527     038F  1903               	btfsc	3,2
   528     0390  3400               	retlw	0
   529     0391  0AFF               	incf	btemp+1,f
   530     0392  1903               	btfsc	3,2
   531     0393  0AFE               	incf	btemp,f
   532     0394  2B86               	goto	init_ram0
   533                           
   534                           	psect	cstackCOMMON
   535     0070                     __pcstackCOMMON:
   536     0070                     ?_init_matrix_keypad:
   537     0070                     ??_init_matrix_keypad:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ?_read_matrix_keypad:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ?_clcd_write:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ?_init_display_controller:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ?_init_clcd:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ?_init_config:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ?_main:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ?_scan_keypad:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ??_scan_keypad:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     clcd_write@mode:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     scan_keypad@i:	
   568                           ; 1 bytes @ 0x0
   569                           
   570                           
   571                           ; 2 bytes @ 0x0
   572     0070                     	ds	1
   573     0071                     ??_clcd_write:
   574                           
   575                           ; 1 bytes @ 0x1
   576     0071                     	ds	1
   577     0072                     ??_read_matrix_keypad:
   578     0072                     read_matrix_keypad@mode:	
   579                           ; 1 bytes @ 0x2
   580                           
   581                           
   582                           ; 1 bytes @ 0x2
   583     0072                     	ds	1
   584     0073                     clcd_write@byte:
   585     0073                     read_matrix_keypad@key:	
   586                           ; 1 bytes @ 0x3
   587                           
   588                           
   589                           ; 1 bytes @ 0x3
   590     0073                     	ds	1
   591     0074                     ??_init_display_controller:
   592     0074                     ?_clcd_putch:	
   593                           ; 1 bytes @ 0x4
   594                           
   595     0074                     ?_clcd_print:	
   596                           ; 1 bytes @ 0x4
   597                           
   598     0074                     clcd_putch@addr:	
   599                           ; 1 bytes @ 0x4
   600                           
   601     0074                     clcd_print@str:	
   602                           ; 1 bytes @ 0x4
   603                           
   604                           
   605                           ; 2 bytes @ 0x4
   606     0074                     	ds	1
   607     0075                     ??_clcd_putch:
   608     0075                     clcd_putch@data:	
   609                           ; 1 bytes @ 0x5
   610                           
   611                           
   612                           ; 1 bytes @ 0x5
   613     0075                     	ds	1
   614     0076                     ??_init_clcd:
   615     0076                     ??_init_config:	
   616                           ; 1 bytes @ 0x6
   617                           
   618     0076                     clcd_print@addr:	
   619                           ; 1 bytes @ 0x6
   620                           
   621                           
   622                           ; 1 bytes @ 0x6
   623     0076                     	ds	1
   624     0077                     ??_clcd_print:
   625     0077                     ??_main:	
   626                           ; 1 bytes @ 0x7
   627                           
   628                           
   629                           ; 1 bytes @ 0x7
   630     0077                     	ds	4
   631                           
   632                           	psect	cstackBANK0
   633     0020                     __pcstackBANK0:
   634     0020                     main@msg_buffer:
   635                           
   636                           ; 16 bytes @ 0x0
   637     0020                     	ds	16
   638     0030                     main@j:
   639                           
   640                           ; 2 bytes @ 0x10
   641     0030                     	ds	2
   642     0032                     main@j_93:
   643                           
   644                           ; 2 bytes @ 0x12
   645     0032                     	ds	2
   646     0034                     main@msg:
   647                           
   648                           ; 16 bytes @ 0x14
   649     0034                     	ds	16
   650     0044                     main@first_iter_flag:
   651                           
   652                           ; 2 bytes @ 0x24
   653     0044                     	ds	2
   654     0046                     main@edit_mode_flag:
   655                           
   656                           ; 2 bytes @ 0x26
   657     0046                     	ds	2
   658     0048                     main@pause_flag:
   659                           
   660                           ; 2 bytes @ 0x28
   661     0048                     	ds	2
   662     004A                     main@temp:
   663                           
   664                           ; 1 bytes @ 0x2A
   665     004A                     	ds	1
   666     004B                     main@prev_direction:
   667                           
   668                           ; 1 bytes @ 0x2B
   669     004B                     	ds	1
   670     004C                     main@i:
   671                           
   672                           ; 2 bytes @ 0x2C
   673     004C                     	ds	2
   674     004E                     main@i_90:
   675                           
   676                           ; 2 bytes @ 0x2E
   677     004E                     	ds	2
   678     0050                     main@i_92:
   679                           
   680                           ; 2 bytes @ 0x30
   681     0050                     	ds	2
   682     0052                     main@i_94:
   683                           
   684                           ; 2 bytes @ 0x32
   685     0052                     	ds	2
   686     0054                     main@index:
   687                           
   688                           ; 2 bytes @ 0x34
   689     0054                     	ds	2
   690     0056                     main@key:
   691                           
   692                           ; 1 bytes @ 0x36
   693     0056                     	ds	1
   694     0057                     main@key_copy:
   695                           
   696                           ; 1 bytes @ 0x37
   697     0057                     	ds	1
   698     0058                     main@num:
   699                           
   700                           ; 2 bytes @ 0x38
   701     0058                     	ds	2
   702                           
   703                           	psect	maintext
   704     052C                     __pmaintext:	
   705 ;;
   706 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   707 ;;
   708 ;; *************** function _main *****************
   709 ;; Defined at:
   710 ;;		line 29 in file "main.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;  i               2   50[BANK0 ] int 
   715 ;;  j               2   18[BANK0 ] unsigned int 
   716 ;;  i               2   48[BANK0 ] unsigned int 
   717 ;;  j               2   16[BANK0 ] unsigned int 
   718 ;;  i               2   46[BANK0 ] unsigned int 
   719 ;;  i               2   44[BANK0 ] int 
   720 ;;  msg            16   20[BANK0 ] unsigned char [16]
   721 ;;  msg_buffer     16    0[BANK0 ] unsigned char [16]
   722 ;;  num             2   56[BANK0 ] int 
   723 ;;  index           2   52[BANK0 ] unsigned short 
   724 ;;  pause_flag      2   40[BANK0 ] unsigned short 
   725 ;;  edit_mode_fl    2   38[BANK0 ] unsigned short 
   726 ;;  first_iter_f    2   36[BANK0 ] unsigned short 
   727 ;;  key_copy        1   55[BANK0 ] unsigned char 
   728 ;;  key             1   54[BANK0 ] unsigned char 
   729 ;;  prev_directi    1   43[BANK0 ] unsigned char 
   730 ;;  temp            1   42[BANK0 ] unsigned char 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : B00/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         0       0       0       0       0
   741 ;;      Locals:         0      58       0       0       0
   742 ;;      Temps:          4       0       0       0       0
   743 ;;      Totals:         4      58       0       0       0
   744 ;;Total ram usage:       62 bytes
   745 ;; Hardware stack levels required when called: 4
   746 ;; This function calls:
   747 ;;		_clcd_print
   748 ;;		_clcd_putch
   749 ;;		_init_config
   750 ;;		_read_matrix_keypad
   751 ;; This function is called by:
   752 ;;		Startup code after reset
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756     052C                     _main:	
   757                           ;psect for function _main
   758                           
   759     052C                     l1383:	
   760                           ;incstack = 0
   761                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   762                           
   763                           
   764                           ;main.c: 32:     init_config();;main.c: 33: ;main.c: 34: ;main.c: 35:     while (1)
   765     052C  1283               	bcf	3,5	;RP0=0, select bank0
   766     052D  1303               	bcf	3,6	;RP1=0, select bank0
   767     052E  01D8               	clrf	main@num
   768     052F  01D9               	clrf	main@num+1
   769                           
   770                           ;main.c: 36:     {
   771     0530  01D4               	clrf	main@index
   772     0531  01D5               	clrf	main@index+1
   773     0532                     l1385:
   774                           
   775                           ;main.c: 37:         key = read_matrix_keypad(1);
   776     0532  3034               	movlw	main@msg& (0+255)
   777     0533  0084               	movwf	4
   778     0534  305A               	movlw	low main@F872
   779     0535  00F7               	movwf	??_main
   780     0536  0804               	movf	4,w
   781     0537  00F8               	movwf	??_main+1
   782     0538  3010               	movlw	16
   783     0539  00F9               	movwf	??_main+2
   784     053A                     u810:
   785     053A  0877               	movf	??_main,w
   786     053B  0084               	movwf	4
   787     053C  1383               	bcf	3,7	;select IRP bank0
   788     053D  0800               	movf	0,w
   789     053E  00FA               	movwf	??_main+3
   790     053F  0AF7               	incf	??_main,f
   791     0540  0878               	movf	??_main+1,w
   792     0541  0084               	movwf	4
   793     0542  087A               	movf	??_main+3,w
   794     0543  0080               	movwf	0
   795     0544  0AF8               	incf	??_main+1,f
   796     0545  0BF9               	decfsz	??_main+2,f
   797     0546  2D3A               	goto	u810
   798     0547                     l1387:
   799                           
   800                           ;main.c: 38: 
   801     0547  3020               	movlw	main@msg_buffer& (0+255)
   802     0548  0084               	movwf	4
   803     0549  30A0               	movlw	low main@F874
   804     054A  00F7               	movwf	??_main
   805     054B  0804               	movf	4,w
   806     054C  00F8               	movwf	??_main+1
   807     054D  3010               	movlw	16
   808     054E  00F9               	movwf	??_main+2
   809     054F                     u820:
   810     054F  0877               	movf	??_main,w
   811     0550  0084               	movwf	4
   812     0551  1383               	bcf	3,7	;select IRP bank1
   813     0552  0800               	movf	0,w
   814     0553  00FA               	movwf	??_main+3
   815     0554  0AF7               	incf	??_main,f
   816     0555  0878               	movf	??_main+1,w
   817     0556  0084               	movwf	4
   818     0557  087A               	movf	??_main+3,w
   819     0558  0080               	movwf	0
   820     0559  0AF8               	incf	??_main+1,f
   821     055A  0BF9               	decfsz	??_main+2,f
   822     055B  2D4F               	goto	u820
   823     055C                     l1389:
   824                           
   825                           ;main.c: 42:         {
   826     055C  3001               	movlw	1
   827     055D  00C6               	movwf	main@edit_mode_flag
   828     055E  3000               	movlw	0
   829     055F  00C7               	movwf	main@edit_mode_flag+1
   830     0560                     l1391:
   831                           
   832                           ;main.c: 43:             key_copy = key;
   833     0560  01C8               	clrf	main@pause_flag
   834     0561  01C9               	clrf	main@pause_flag+1
   835                           
   836                           ;main.c: 44:         }
   837     0562  3001               	movlw	1
   838     0563  00C4               	movwf	main@first_iter_flag
   839     0564  3000               	movlw	0
   840     0565  00C5               	movwf	main@first_iter_flag+1
   841     0566                     l1393:
   842                           
   843                           ;main.c: 45: ;main.c: 46: ;main.c: 49:         if (blink_delay++ == 2)
   844     0566  120A  118A  2335  120A  118A  	fcall	_init_config
   845     056B                     l1395:
   846                           
   847                           ;main.c: 53:         };main.c: 54: 
   848     056B  3001               	movlw	1
   849     056C  120A  118A  2395  120A  118A  	fcall	_read_matrix_keypad
   850     0571  1283               	bcf	3,5	;RP0=0, select bank0
   851     0572  1303               	bcf	3,6	;RP1=0, select bank0
   852     0573  00D6               	movwf	main@key
   853     0574                     l1397:
   854                           
   855                           ;main.c: 58:         {
   856     0574  0A56               	incf	main@key,w
   857     0575  1903               	btfsc	3,2
   858     0576  2D78               	goto	u831
   859     0577  2D79               	goto	u830
   860     0578                     u831:
   861     0578  2D7B               	goto	l1401
   862     0579                     u830:
   863     0579                     l1399:
   864                           
   865                           ;main.c: 59:             clcd_print("ENTER NEW NUMBER", (0x80 + 0));;main.c: 60:        
      +                               clcd_print("MSG:", (0xC0 + 0));
   866     0579  0856               	movf	main@key,w
   867     057A  00D7               	movwf	main@key_copy
   868     057B                     l1401:
   869                           
   870                           ;main.c: 66:                     clcd_putch((unsigned char) 0xFF, (0xC0 + pos));
   871     057B  3001               	movlw	1
   872     057C  07EB               	addwf	main@blink_delay,f
   873     057D  1803               	skipnc
   874     057E  0AEC               	incf	main@blink_delay+1,f
   875     057F  3000               	movlw	0
   876     0580  07EC               	addwf	main@blink_delay+1,f
   877     0581  3003               	movlw	3
   878     0582  066B               	xorwf	main@blink_delay,w
   879     0583  046C               	iorwf	main@blink_delay+1,w
   880     0584  1D03               	btfss	3,2
   881     0585  2D87               	goto	u841
   882     0586  2D88               	goto	u840
   883     0587                     u841:
   884     0587  2D92               	goto	l1407
   885     0588                     u840:
   886     0588                     l1403:
   887                           
   888                           ;main.c: 67:                     break;;main.c: 68:                 case 1:
   889     0588  01EB               	clrf	main@blink_delay
   890     0589  01EC               	clrf	main@blink_delay+1
   891     058A                     l1405:
   892                           
   893                           ;main.c: 69:                     clcd_print(msg, (0xC0 + 4));
   894     058A  086D               	movf	main@toggle_cursor,w
   895     058B  1903               	btfsc	3,2
   896     058C  2D8E               	goto	u851
   897     058D  2D90               	goto	u850
   898     058E                     u851:
   899     058E  3001               	movlw	1
   900     058F  2D91               	goto	u860
   901     0590                     u850:
   902     0590  3000               	movlw	0
   903     0591                     u860:
   904     0591  00ED               	movwf	main@toggle_cursor
   905     0592                     l1407:
   906                           
   907                           ;main.c: 74: 
   908     0592  0346               	decf	main@edit_mode_flag,w
   909     0593  0447               	iorwf	main@edit_mode_flag+1,w
   910     0594  1D03               	btfss	3,2
   911     0595  2D97               	goto	u871
   912     0596  2D98               	goto	u870
   913     0597                     u871:
   914     0597  2EE9               	goto	l1499
   915     0598                     u870:
   916     0598                     l1409:
   917                           
   918                           ;main.c: 75:             if (first_iter_flag == 1);main.c: 76:             {
   919     0598  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   920     0599  00F4               	movwf	clcd_print@str
   921     059A  3080               	movlw	128
   922     059B  00F5               	movwf	clcd_print@str+1
   923     059C  3080               	movlw	128
   924     059D  00F6               	movwf	clcd_print@addr
   925     059E  120A  118A  23B8  120A  118A  	fcall	_clcd_print
   926                           
   927                           ;main.c: 77:                 msg[index] = (char) num + '0';
   928     05A3  3023               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   929     05A4  00F4               	movwf	clcd_print@str
   930     05A5  3080               	movlw	128
   931     05A6  00F5               	movwf	clcd_print@str+1
   932     05A7  30C0               	movlw	192
   933     05A8  00F6               	movwf	clcd_print@addr
   934     05A9  120A  118A  23B8  120A  118A  	fcall	_clcd_print
   935                           
   936                           ;main.c: 80: 
   937     05AE  2DC5               	goto	l1417
   938     05AF                     l1411:
   939                           
   940                           ;main.c: 83:             {
   941     05AF  086A               	movf	_pos,w
   942     05B0  3EC0               	addlw	192
   943     05B1  00F4               	movwf	clcd_putch@addr
   944     05B2  30FF               	movlw	255
   945     05B3  120A  118A  2360  120A  118A  	fcall	_clcd_putch
   946                           
   947                           ;main.c: 84:                 num++;
   948     05B8  2DD7               	goto	l1419
   949     05B9                     l1413:
   950                           
   951                           ;main.c: 86:                 if (num > 9)
   952     05B9  3034               	movlw	(low (main@msg| 0))& (0+255)
   953     05BA  00F4               	movwf	clcd_print@str
   954     05BB  3000               	movlw	0
   955     05BC  00F5               	movwf	clcd_print@str+1
   956     05BD  30C4               	movlw	196
   957     05BE  00F6               	movwf	clcd_print@addr
   958     05BF  120A  118A  23B8  120A  118A  	fcall	_clcd_print
   959                           
   960                           ;main.c: 87:                 {
   961     05C4  2DD7               	goto	l1419
   962     05C5                     l1417:
   963     05C5  1283               	bcf	3,5	;RP0=0, select bank0
   964     05C6  1303               	bcf	3,6	;RP1=0, select bank0
   965     05C7  086D               	movf	main@toggle_cursor,w
   966     05C8  00F7               	movwf	??_main
   967     05C9  01F8               	clrf	??_main+1
   968                           
   969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   970                           ; Switch size 1, requested type "simple"
   971                           ; Number of cases is 1, Range of values is 0 to 0
   972                           ; switch strategies available:
   973                           ; Name         Instructions Cycles
   974                           ; simple_byte            4     3 (average)
   975                           ; direct_byte           11     8 (fixed)
   976                           ; jumptable            260     6 (fixed)
   977                           ;	Chosen strategy is simple_byte
   978     05CA  0878               	movf	??_main+1,w
   979     05CB  3A00               	xorlw	0	; case 0
   980     05CC  1903               	skipnz
   981     05CD  2DCF               	goto	l1611
   982     05CE  2DD7               	goto	l1419
   983     05CF                     l1611:
   984                           
   985                           ; Switch size 1, requested type "simple"
   986                           ; Number of cases is 2, Range of values is 0 to 1
   987                           ; switch strategies available:
   988                           ; Name         Instructions Cycles
   989                           ; simple_byte            7     4 (average)
   990                           ; direct_byte           14     8 (fixed)
   991                           ; jumptable            260     6 (fixed)
   992                           ;	Chosen strategy is simple_byte
   993     05CF  0877               	movf	??_main,w
   994     05D0  3A00               	xorlw	0	; case 0
   995     05D1  1903               	skipnz
   996     05D2  2DAF               	goto	l1411
   997     05D3  3A01               	xorlw	1	; case 1
   998     05D4  1903               	skipnz
   999     05D5  2DB9               	goto	l1413
  1000     05D6  2DD7               	goto	l1419
  1001     05D7                     l1419:
  1002                           
  1003                           ;main.c: 92:                 clcd_putch((char) num + '0', (unsigned char) (0xC0 + pos));
  1004     05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1005     05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1006     05D9  0344               	decf	main@first_iter_flag,w
  1007     05DA  0445               	iorwf	main@first_iter_flag+1,w
  1008     05DB  1D03               	btfss	3,2
  1009     05DC  2DDE               	goto	u881
  1010     05DD  2DDF               	goto	u880
  1011     05DE                     u881:
  1012     05DE  2DE6               	goto	l1423
  1013     05DF                     u880:
  1014     05DF                     l1421:
  1015                           
  1016                           ;main.c: 93:             };main.c: 94: 
  1017     05DF  0854               	movf	main@index,w
  1018     05E0  3E34               	addlw	(low (main@msg| 0))& (0+255)
  1019     05E1  0084               	movwf	4
  1020     05E2  0858               	movf	main@num,w
  1021     05E3  3E30               	addlw	48
  1022     05E4  1383               	bcf	3,7	;select IRP bank0
  1023     05E5  0080               	movwf	0
  1024     05E6                     l1423:
  1025                           
  1026                           ;main.c: 99:                 if (num < 0)
  1027     05E6  0356               	decf	main@key,w
  1028     05E7  1D03               	btfss	3,2
  1029     05E8  2DEA               	goto	u891
  1030     05E9  2DEB               	goto	u890
  1031     05EA                     u891:
  1032     05EA  2E16               	goto	l1435
  1033     05EB                     u890:
  1034     05EB                     l1425:
  1035                           
  1036                           ;main.c: 100:                 {;main.c: 101:                     num = 9;
  1037     05EB  3001               	movlw	1
  1038     05EC  07D8               	addwf	main@num,f
  1039     05ED  1803               	skipnc
  1040     05EE  0AD9               	incf	main@num+1,f
  1041     05EF  3000               	movlw	0
  1042     05F0  07D9               	addwf	main@num+1,f
  1043     05F1                     l1427:
  1044                           
  1045                           ;main.c: 103: 
  1046     05F1  0859               	movf	main@num+1,w
  1047     05F2  3A80               	xorlw	128
  1048     05F3  00FF               	movwf	btemp+1
  1049     05F4  3080               	movlw	128
  1050     05F5  027F               	subwf	btemp+1,w
  1051     05F6  1D03               	skipz
  1052     05F7  2DFA               	goto	u905
  1053     05F8  300A               	movlw	10
  1054     05F9  0258               	subwf	main@num,w
  1055     05FA                     u905:
  1056     05FA  1C03               	skipc
  1057     05FB  2DFD               	goto	u901
  1058     05FC  2DFE               	goto	u900
  1059     05FD                     u901:
  1060     05FD  2E02               	goto	l1431
  1061     05FE                     u900:
  1062     05FE                     l1429:
  1063                           
  1064                           ;main.c: 104:                 msg[index] = (char) num + '0';;main.c: 105:               
      +                            clcd_putch((char) num + '0', (unsigned char) (0xC0 + pos));
  1065     05FE  1283               	bcf	3,5	;RP0=0, select bank0
  1066     05FF  1303               	bcf	3,6	;RP1=0, select bank0
  1067     0600  01D8               	clrf	main@num
  1068     0601  01D9               	clrf	main@num+1
  1069     0602                     l1431:
  1070                           
  1071                           ;main.c: 108:             else if (key == 3)
  1072     0602  1283               	bcf	3,5	;RP0=0, select bank0
  1073     0603  1303               	bcf	3,6	;RP1=0, select bank0
  1074     0604  0854               	movf	main@index,w
  1075     0605  3E34               	addlw	(low (main@msg| 0))& (0+255)
  1076     0606  0084               	movwf	4
  1077     0607  0858               	movf	main@num,w
  1078     0608  3E30               	addlw	48
  1079     0609  1383               	bcf	3,7	;select IRP bank0
  1080     060A  0080               	movwf	0
  1081     060B                     l1433:
  1082                           
  1083                           ;main.c: 109:             {
  1084     060B  086A               	movf	_pos,w
  1085     060C  3EC0               	addlw	192
  1086     060D  00F4               	movwf	clcd_putch@addr
  1087     060E  0858               	movf	main@num,w
  1088     060F  3E30               	addlw	48
  1089     0610  120A  118A  2360  120A  118A  	fcall	_clcd_putch
  1090                           
  1091                           ;main.c: 110: 
  1092     0615  2D6B               	goto	l1395
  1093     0616                     l1435:
  1094     0616  3002               	movlw	2
  1095     0617  0656               	xorwf	main@key,w
  1096     0618  1D03               	btfss	3,2
  1097     0619  2E1B               	goto	u911
  1098     061A  2E1C               	goto	u910
  1099     061B                     u911:
  1100     061B  2E3C               	goto	l1447
  1101     061C                     u910:
  1102     061C                     l1437:
  1103                           
  1104                           ;main.c: 113: ;main.c: 114:                 key_copy = 2;
  1105     061C  30FF               	movlw	255
  1106     061D  07D8               	addwf	main@num,f
  1107     061E  1803               	skipnc
  1108     061F  0AD9               	incf	main@num+1,f
  1109     0620  30FF               	movlw	255
  1110     0621  07D9               	addwf	main@num+1,f
  1111     0622                     l1439:
  1112                           
  1113                           ;main.c: 116:                 prev_direction = key_copy;
  1114     0622  1FD9               	btfss	main@num+1,7
  1115     0623  2E25               	goto	u921
  1116     0624  2E26               	goto	u920
  1117     0625                     u921:
  1118     0625  2E2A               	goto	l1443
  1119     0626                     u920:
  1120     0626                     l1441:
  1121                           
  1122                           ;main.c: 117: ;main.c: 118:                 for (int i = 0; i < 16; i++)
  1123     0626  3009               	movlw	9
  1124     0627  00D8               	movwf	main@num
  1125     0628  3000               	movlw	0
  1126     0629  00D9               	movwf	main@num+1
  1127     062A                     l1443:
  1128                           
  1129                           ;main.c: 121:                 }
  1130     062A  0854               	movf	main@index,w
  1131     062B  3E34               	addlw	(low (main@msg| 0))& (0+255)
  1132     062C  0084               	movwf	4
  1133     062D  0858               	movf	main@num,w
  1134     062E  3E30               	addlw	48
  1135     062F  1383               	bcf	3,7	;select IRP bank0
  1136     0630  0080               	movwf	0
  1137     0631                     l1445:
  1138                           
  1139                           ;main.c: 122: 
  1140     0631  086A               	movf	_pos,w
  1141     0632  3EC0               	addlw	192
  1142     0633  00F4               	movwf	clcd_putch@addr
  1143     0634  0858               	movf	main@num,w
  1144     0635  3E30               	addlw	48
  1145     0636  120A  118A  2360  120A  118A  	fcall	_clcd_putch
  1146                           
  1147                           ;main.c: 123:                 first_iter_flag = 0;
  1148     063B  2D6B               	goto	l1395
  1149     063C                     l1447:
  1150     063C  3003               	movlw	3
  1151     063D  0656               	xorwf	main@key,w
  1152     063E  1D03               	btfss	3,2
  1153     063F  2E41               	goto	u931
  1154     0640  2E42               	goto	u930
  1155     0641                     u931:
  1156     0641  2E89               	goto	l1469
  1157     0642                     u930:
  1158     0642                     l1449:
  1159                           
  1160                           ;main.c: 126: ;main.c: 128:             {
  1161     0642  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1162     0643  00F4               	movwf	clcd_print@str
  1163     0644  3080               	movlw	128
  1164     0645  00F5               	movwf	clcd_print@str+1
  1165     0646  3080               	movlw	128
  1166     0647  00F6               	movwf	clcd_print@addr
  1167     0648  120A  118A  23B8  120A  118A  	fcall	_clcd_print
  1168                           
  1169                           ;main.c: 129:                 if (pos < 15)
  1170     064D  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1171     064E  00F4               	movwf	clcd_print@str
  1172     064F  3080               	movlw	128
  1173     0650  00F5               	movwf	clcd_print@str+1
  1174     0651  30C0               	movlw	192
  1175     0652  00F6               	movwf	clcd_print@addr
  1176     0653  120A  118A  23B8  120A  118A  	fcall	_clcd_print
  1177     0658                     l1451:
  1178                           
  1179                           ;main.c: 131:                     num = 0;
  1180     0658  3002               	movlw	2
  1181     0659  1283               	bcf	3,5	;RP0=0, select bank0
  1182     065A  1303               	bcf	3,6	;RP1=0, select bank0
  1183     065B  00D7               	movwf	main@key_copy
  1184     065C                     l1453:
  1185                           
  1186                           ;main.c: 133:                     index++;
  1187     065C  3002               	movlw	2
  1188     065D  00CB               	movwf	main@prev_direction
  1189     065E                     l1455:
  1190                           
  1191                           ;main.c: 135:                     msg[index] = (char) num + '0';
  1192     065E  01CC               	clrf	main@i
  1193     065F  01CD               	clrf	main@i+1
  1194     0660                     l1457:
  1195     0660  084D               	movf	main@i+1,w
  1196     0661  3A80               	xorlw	128
  1197     0662  00FF               	movwf	btemp+1
  1198     0663  3080               	movlw	128
  1199     0664  027F               	subwf	btemp+1,w
  1200     0665  1D03               	skipz
  1201     0666  2E69               	goto	u945
  1202     0667  3010               	movlw	16
  1203     0668  024C               	subwf	main@i,w
  1204     0669                     u945:
  1205     0669  1C03               	skipc
  1206     066A  2E6C               	goto	u941
  1207     066B  2E6D               	goto	u940
  1208     066C                     u941:
  1209     066C  2E6E               	goto	l1461
  1210     066D                     u940:
  1211     066D  2E82               	goto	l1467
  1212     066E                     l1461:
  1213                           
  1214                           ;main.c: 136:                     clcd_putch((char) num + '0', (unsigned char) (0xC0 + p
      +                          os));;main.c: 137:                 }
  1215     066E  1283               	bcf	3,5	;RP0=0, select bank0
  1216     066F  1303               	bcf	3,6	;RP1=0, select bank0
  1217     0670  084C               	movf	main@i,w
  1218     0671  3E34               	addlw	(low (main@msg| 0))& (0+255)
  1219     0672  0084               	movwf	4
  1220     0673  1383               	bcf	3,7	;select IRP bank0
  1221     0674  0800               	movf	0,w
  1222     0675  00F7               	movwf	??_main
  1223     0676  084C               	movf	main@i,w
  1224     0677  3E20               	addlw	(low (main@msg_buffer| 0))& (0+255)
  1225     0678  0084               	movwf	4
  1226     0679  0877               	movf	??_main,w
  1227     067A  0080               	movwf	0
  1228     067B                     l1463:
  1229                           
  1230                           ;main.c: 138:             }
  1231     067B  3001               	movlw	1
  1232     067C  07CC               	addwf	main@i,f
  1233     067D  1803               	skipnc
  1234     067E  0ACD               	incf	main@i+1,f
  1235     067F  3000               	movlw	0
  1236     0680  07CD               	addwf	main@i+1,f
  1237     0681  2E60               	goto	l1457
  1238     0682                     l1467:
  1239                           
  1240                           ;main.c: 140:             else if (key == 6)
  1241     0682  1283               	bcf	3,5	;RP0=0, select bank0
  1242     0683  1303               	bcf	3,6	;RP1=0, select bank0
  1243     0684  01C4               	clrf	main@first_iter_flag
  1244     0685  01C5               	clrf	main@first_iter_flag+1
  1245                           
  1246                           ;main.c: 141:             {
  1247     0686  01C6               	clrf	main@edit_mode_flag
  1248     0687  01C7               	clrf	main@edit_mode_flag+1
  1249                           
  1250                           ;main.c: 142:                 if (pos > 4 && pos < 16)
  1251     0688  2D6B               	goto	l1395
  1252     0689                     l1469:
  1253     0689  3005               	movlw	5
  1254     068A  0656               	xorwf	main@key,w
  1255     068B  1D03               	btfss	3,2
  1256     068C  2E8E               	goto	u951
  1257     068D  2E8F               	goto	u950
  1258     068E                     u951:
  1259     068E  2EB1               	goto	l1483
  1260     068F                     u950:
  1261     068F                     l1471:
  1262                           
  1263                           ;main.c: 145:                     msg[index] = ' ';;main.c: 146: 
  1264     068F  300F               	movlw	15
  1265     0690  026A               	subwf	_pos,w
  1266     0691  1803               	skipnc
  1267     0692  2E94               	goto	u961
  1268     0693  2E95               	goto	u960
  1269     0694                     u961:
  1270     0694  2D6B               	goto	l1395
  1271     0695                     u960:
  1272     0695                     l1473:
  1273                           
  1274                           ;main.c: 147:                     num = msg[index - 1] - 48;;main.c: 148:               
      +                                pos--;
  1275     0695  01D8               	clrf	main@num
  1276     0696  01D9               	clrf	main@num+1
  1277     0697                     l1475:
  1278                           
  1279                           ;main.c: 149:                     index--;
  1280     0697  3001               	movlw	1
  1281     0698  00F7               	movwf	??_main
  1282     0699  0877               	movf	??_main,w
  1283     069A  07EA               	addwf	_pos,f
  1284     069B                     l1477:
  1285                           
  1286                           ;main.c: 150:                 }
  1287     069B  3001               	movlw	1
  1288     069C  07D4               	addwf	main@index,f
  1289     069D  1803               	skipnc
  1290     069E  0AD5               	incf	main@index+1,f
  1291     069F  3000               	movlw	0
  1292     06A0  07D5               	addwf	main@index+1,f
  1293     06A1                     l1479:
  1294                           
  1295                           ;main.c: 152:         }
  1296     06A1  0854               	movf	main@index,w
  1297     06A2  3E34               	addlw	(low (main@msg| 0))& (0+255)
  1298     06A3  0084               	movwf	4
  1299     06A4  3030               	movlw	48
  1300     06A5  1383               	bcf	3,7	;select IRP bank0
  1301     06A6  0080               	movwf	0
  1302     06A7                     l1481:
  1303                           
  1304                           ;main.c: 153: 
  1305     06A7  086A               	movf	_pos,w
  1306     06A8  3EC0               	addlw	192
  1307     06A9  00F4               	movwf	clcd_putch@addr
  1308     06AA  3030               	movlw	48
  1309     06AB  120A  118A  2360  120A  118A  	fcall	_clcd_putch
  1310     06B0  2D6B               	goto	l1395
  1311     06B1                     l1483:
  1312     06B1  3006               	movlw	6
  1313     06B2  0656               	xorwf	main@key,w
  1314     06B3  1D03               	btfss	3,2
  1315     06B4  2EB6               	goto	u971
  1316     06B5  2EB7               	goto	u970
  1317     06B6                     u971:
  1318     06B6  2EE8               	goto	l78
  1319     06B7                     u970:
  1320     06B7                     l1485:
  1321                           
  1322                           ;main.c: 158:                 prev_direction = key_copy;;main.c: 159: 
  1323     06B7  3005               	movlw	5
  1324     06B8  026A               	subwf	_pos,w
  1325     06B9  1C03               	skipc
  1326     06BA  2EBC               	goto	u981
  1327     06BB  2EBD               	goto	u980
  1328     06BC                     u981:
  1329     06BC  2EE8               	goto	l78
  1330     06BD                     u980:
  1331     06BD                     l1487:
  1332     06BD  3010               	movlw	16
  1333     06BE  026A               	subwf	_pos,w
  1334     06BF  1803               	skipnc
  1335     06C0  2EC2               	goto	u991
  1336     06C1  2EC3               	goto	u990
  1337     06C2                     u991:
  1338     06C2  2EE8               	goto	l78
  1339     06C3                     u990:
  1340     06C3                     l1489:
  1341                           
  1342                           ;main.c: 160: ;main.c: 161:                 temp = msg[0];
  1343     06C3  086A               	movf	_pos,w
  1344     06C4  3EC0               	addlw	192
  1345     06C5  00F4               	movwf	clcd_putch@addr
  1346     06C6  3020               	movlw	32
  1347     06C7  120A  118A  2360  120A  118A  	fcall	_clcd_putch
  1348     06CC                     l1491:
  1349                           
  1350                           ;main.c: 162: 
  1351     06CC  1283               	bcf	3,5	;RP0=0, select bank0
  1352     06CD  1303               	bcf	3,6	;RP1=0, select bank0
  1353     06CE  0854               	movf	main@index,w
  1354     06CF  3E34               	addlw	(low (main@msg| 0))& (0+255)
  1355     06D0  0084               	movwf	4
  1356     06D1  3020               	movlw	32
  1357     06D2  1383               	bcf	3,7	;select IRP bank0
  1358     06D3  0080               	movwf	0
  1359     06D4                     l1493:
  1360                           
  1361                           ;main.c: 164:                 {
  1362     06D4  0854               	movf	main@index,w
  1363     06D5  3EFF               	addlw	255
  1364     06D6  3E34               	addlw	(low (main@msg| 0))& (0+255)
  1365     06D7  0084               	movwf	4
  1366     06D8  0800               	movf	0,w
  1367     06D9  3ED0               	addlw	208
  1368     06DA  00D8               	movwf	main@num
  1369     06DB  30FF               	movlw	255
  1370     06DC  1803               	skipnc
  1371     06DD  3000               	movlw	0
  1372     06DE  00D9               	movwf	main@num+1
  1373     06DF                     l1495:
  1374                           
  1375                           ;main.c: 165:                     msg[i] = msg[i + 1];
  1376     06DF  3001               	movlw	1
  1377     06E0  02EA               	subwf	_pos,f
  1378     06E1                     l1497:
  1379                           
  1380                           ;main.c: 166:                 }
  1381     06E1  3001               	movlw	1
  1382     06E2  02D4               	subwf	main@index,f
  1383     06E3  3000               	movlw	0
  1384     06E4  1C03               	skipc
  1385     06E5  03D5               	decf	main@index+1,f
  1386     06E6  02D5               	subwf	main@index+1,f
  1387     06E7  2D6B               	goto	l1395
  1388     06E8                     l78:
  1389     06E8  2D6B               	goto	l1395
  1390     06E9                     l1499:
  1391                           
  1392                           ;main.c: 172:             };main.c: 173: 
  1393     06E9  0357               	decf	main@key_copy,w
  1394     06EA  1D03               	btfss	3,2
  1395     06EB  2EED               	goto	u1001
  1396     06EC  2EEE               	goto	u1000
  1397     06ED                     u1001:
  1398     06ED  2F33               	goto	l1523
  1399     06EE                     u1000:
  1400     06EE                     l1501:
  1401                           
  1402                           ;main.c: 174:             else if (key_copy == 2);main.c: 175:             {
  1403     06EE  0857               	movf	main@key_copy,w
  1404     06EF  00CB               	movwf	main@prev_direction
  1405                           
  1406                           ;main.c: 178: 
  1407     06F0  0834               	movf	main@msg,w
  1408     06F1  00CA               	movwf	main@temp
  1409     06F2                     l1503:
  1410                           
  1411                           ;main.c: 180: 
  1412     06F2  01CE               	clrf	main@i_90
  1413     06F3  01CF               	clrf	main@i_90+1
  1414     06F4                     l1505:
  1415     06F4  3000               	movlw	0
  1416     06F5  024F               	subwf	main@i_90+1,w
  1417     06F6  3010               	movlw	16
  1418     06F7  1903               	skipnz
  1419     06F8  024E               	subwf	main@i_90,w
  1420     06F9  1C03               	skipc
  1421     06FA  2EFC               	goto	u1011
  1422     06FB  2EFD               	goto	u1010
  1423     06FC                     u1011:
  1424     06FC  2EFE               	goto	l1509
  1425     06FD                     u1010:
  1426     06FD  2F11               	goto	l1515
  1427     06FE                     l1509:
  1428                           
  1429                           ;main.c: 181:                 for (unsigned int i = 15; i > 0; i--);main.c: 182:        
      +                                   {
  1430     06FE  084E               	movf	main@i_90,w
  1431     06FF  3E01               	addlw	1
  1432     0700  3E34               	addlw	(low (main@msg| 0))& (0+255)
  1433     0701  0084               	movwf	4
  1434     0702  1383               	bcf	3,7	;select IRP bank0
  1435     0703  0800               	movf	0,w
  1436     0704  00F7               	movwf	??_main
  1437     0705  084E               	movf	main@i_90,w
  1438     0706  3E34               	addlw	(low (main@msg| 0))& (0+255)
  1439     0707  0084               	movwf	4
  1440     0708  0877               	movf	??_main,w
  1441     0709  0080               	movwf	0
  1442     070A                     l1511:
  1443                           
  1444                           ;main.c: 183:                     msg[i] = msg[i - 1];
  1445     070A  3001               	movlw	1
  1446     070B  07CE               	addwf	main@i_90,f
  1447     070C  1803               	skipnc
  1448     070D  0ACF               	incf	main@i_90+1,f
  1449     070E  3000               	movlw	0
  1450     070F  07CF               	addwf	main@i_90+1,f
  1451     0710  2EF4               	goto	l1505
  1452     0711                     l1515:
  1453                           
  1454                           ;main.c: 185: 
  1455     0711  084A               	movf	main@temp,w
  1456     0712  00C3               	movwf	main@msg+15
  1457     0713                     l1517:
  1458                           
  1459                           ;main.c: 187: 
  1460     0713  3034               	movlw	(low (main@msg| 0))& (0+255)
  1461     0714  00F4               	movwf	clcd_print@str
  1462     0715  3000               	movlw	0
  1463     0716  00F5               	movwf	clcd_print@str+1
  1464     0717  30C0               	movlw	192
  1465     0718  00F6               	movwf	clcd_print@addr
  1466     0719  120A  118A  23B8  120A  118A  	fcall	_clcd_print
  1467     071E                     l1519:
  1468                           
  1469                           ;main.c: 188:                 clcd_print(msg, (0xC0 + 0));
  1470     071E  3050               	movlw	80
  1471     071F  1283               	bcf	3,5	;RP0=0, select bank0
  1472     0720  1303               	bcf	3,6	;RP1=0, select bank0
  1473     0721  00B0               	movwf	main@j
  1474     0722  30C3               	movlw	195
  1475     0723  00B1               	movwf	main@j+1
  1476     0724                     l1521:
  1477     0724  3001               	movlw	1
  1478     0725  02B0               	subwf	main@j,f
  1479     0726  3000               	movlw	0
  1480     0727  1C03               	skipc
  1481     0728  03B1               	decf	main@j+1,f
  1482     0729  02B1               	subwf	main@j+1,f
  1483     072A  0A30               	incf	main@j,w
  1484     072B  1D03               	skipz
  1485     072C  2F31               	goto	u1021
  1486     072D  0A31               	incf	main@j+1,w
  1487     072E  1D03               	btfss	3,2
  1488     072F  2F31               	goto	u1021
  1489     0730  2F32               	goto	u1020
  1490     0731                     u1021:
  1491     0731  2F24               	goto	l1521
  1492     0732                     u1020:
  1493     0732  2D6B               	goto	l1395
  1494     0733                     l1523:
  1495     0733  3002               	movlw	2
  1496     0734  0657               	xorwf	main@key_copy,w
  1497     0735  1D03               	btfss	3,2
  1498     0736  2F38               	goto	u1031
  1499     0737  2F39               	goto	u1030
  1500     0738                     u1031:
  1501     0738  2F7D               	goto	l1545
  1502     0739                     u1030:
  1503     0739                     l1525:
  1504                           
  1505                           ;main.c: 192:             else if (key_copy == 3);main.c: 193:             {
  1506     0739  0857               	movf	main@key_copy,w
  1507     073A  00CB               	movwf	main@prev_direction
  1508                           
  1509                           ;main.c: 196:                 if (pause_flag == 1)
  1510     073B  0843               	movf	main@msg+15,w
  1511     073C  00CA               	movwf	main@temp
  1512                           
  1513                           ;main.c: 198:                     key_copy = ' ';
  1514     073D  300F               	movlw	15
  1515     073E  00D0               	movwf	main@i_92
  1516     073F  3000               	movlw	0
  1517     0740  00D1               	movwf	main@i_92+1
  1518     0741                     l1527:
  1519     0741  0850               	movf	main@i_92,w
  1520     0742  0451               	iorwf	main@i_92+1,w
  1521     0743  1D03               	btfss	3,2
  1522     0744  2F46               	goto	u1041
  1523     0745  2F47               	goto	u1040
  1524     0746                     u1041:
  1525     0746  2F48               	goto	l1531
  1526     0747                     u1040:
  1527     0747  2F5B               	goto	l1537
  1528     0748                     l1531:
  1529                           
  1530                           ;main.c: 199:                 };main.c: 200:                 else
  1531     0748  0850               	movf	main@i_92,w
  1532     0749  3EFF               	addlw	255
  1533     074A  3E34               	addlw	(low (main@msg| 0))& (0+255)
  1534     074B  0084               	movwf	4
  1535     074C  1383               	bcf	3,7	;select IRP bank0
  1536     074D  0800               	movf	0,w
  1537     074E  00F7               	movwf	??_main
  1538     074F  0850               	movf	main@i_92,w
  1539     0750  3E34               	addlw	(low (main@msg| 0))& (0+255)
  1540     0751  0084               	movwf	4
  1541     0752  0877               	movf	??_main,w
  1542     0753  0080               	movwf	0
  1543     0754                     l1533:
  1544                           
  1545                           ;main.c: 201:                 {
  1546     0754  3001               	movlw	1
  1547     0755  02D0               	subwf	main@i_92,f
  1548     0756  3000               	movlw	0
  1549     0757  1C03               	skipc
  1550     0758  03D1               	decf	main@i_92+1,f
  1551     0759  02D1               	subwf	main@i_92+1,f
  1552     075A  2F41               	goto	l1527
  1553     075B                     l1537:
  1554                           
  1555                           ;main.c: 203:                 }
  1556     075B  084A               	movf	main@temp,w
  1557     075C  00B4               	movwf	main@msg
  1558     075D                     l1539:
  1559                           
  1560                           ;main.c: 205: 
  1561     075D  3034               	movlw	(low (main@msg| 0))& (0+255)
  1562     075E  00F4               	movwf	clcd_print@str
  1563     075F  3000               	movlw	0
  1564     0760  00F5               	movwf	clcd_print@str+1
  1565     0761  30C0               	movlw	192
  1566     0762  00F6               	movwf	clcd_print@addr
  1567     0763  120A  118A  23B8  120A  118A  	fcall	_clcd_print
  1568     0768                     l1541:
  1569                           
  1570                           ;main.c: 206:             else if (key_copy == 4)
  1571     0768  3050               	movlw	80
  1572     0769  1283               	bcf	3,5	;RP0=0, select bank0
  1573     076A  1303               	bcf	3,6	;RP1=0, select bank0
  1574     076B  00B2               	movwf	main@j_93
  1575     076C  30C3               	movlw	195
  1576     076D  00B3               	movwf	main@j_93+1
  1577     076E                     l1543:
  1578     076E  3001               	movlw	1
  1579     076F  02B2               	subwf	main@j_93,f
  1580     0770  3000               	movlw	0
  1581     0771  1C03               	skipc
  1582     0772  03B3               	decf	main@j_93+1,f
  1583     0773  02B3               	subwf	main@j_93+1,f
  1584     0774  0A32               	incf	main@j_93,w
  1585     0775  1D03               	skipz
  1586     0776  2F7B               	goto	u1051
  1587     0777  0A33               	incf	main@j_93+1,w
  1588     0778  1D03               	btfss	3,2
  1589     0779  2F7B               	goto	u1051
  1590     077A  2F7C               	goto	u1050
  1591     077B                     u1051:
  1592     077B  2F6E               	goto	l1543
  1593     077C                     u1050:
  1594     077C  2D6B               	goto	l1395
  1595     077D                     l1545:
  1596     077D  3003               	movlw	3
  1597     077E  0657               	xorwf	main@key_copy,w
  1598     077F  1D03               	btfss	3,2
  1599     0780  2F82               	goto	u1061
  1600     0781  2F83               	goto	u1060
  1601     0782                     u1061:
  1602     0782  2F9D               	goto	l1553
  1603     0783                     u1060:
  1604     0783                     l1547:
  1605                           
  1606                           ;main.c: 210:                     msg[i] = msg_buffer[i];;main.c: 211:                 }
  1607     0783  0848               	movf	main@pause_flag,w
  1608     0784  0449               	iorwf	main@pause_flag+1,w
  1609     0785  1903               	btfsc	3,2
  1610     0786  2F88               	goto	u1071
  1611     0787  2F8A               	goto	u1070
  1612     0788                     u1071:
  1613     0788  3001               	movlw	1
  1614     0789  2F8B               	goto	u1080
  1615     078A                     u1070:
  1616     078A  3000               	movlw	0
  1617     078B                     u1080:
  1618     078B  00F7               	movwf	??_main
  1619     078C  01F8               	clrf	??_main+1
  1620     078D  0877               	movf	??_main,w
  1621     078E  00C8               	movwf	main@pause_flag
  1622     078F  0878               	movf	??_main+1,w
  1623     0790  00C9               	movwf	main@pause_flag+1
  1624                           
  1625                           ;main.c: 213:                 edit_mode_flag = 1;
  1626     0791  0348               	decf	main@pause_flag,w
  1627     0792  0449               	iorwf	main@pause_flag+1,w
  1628     0793  1D03               	btfss	3,2
  1629     0794  2F96               	goto	u1091
  1630     0795  2F97               	goto	u1090
  1631     0796                     u1091:
  1632     0796  2F9A               	goto	l1551
  1633     0797                     u1090:
  1634     0797                     l1549:
  1635                           
  1636                           ;main.c: 214:             };main.c: 215:             else if (key_copy == ' ')
  1637     0797  3020               	movlw	32
  1638     0798  00D7               	movwf	main@key_copy
  1639                           
  1640                           ;main.c: 216:             {
  1641     0799  2D6B               	goto	l1395
  1642     079A                     l1551:
  1643                           
  1644                           ;main.c: 218:             };main.c: 219: 
  1645     079A  084B               	movf	main@prev_direction,w
  1646     079B  00D7               	movwf	main@key_copy
  1647     079C  2D6B               	goto	l1395
  1648     079D                     l1553:
  1649     079D  3004               	movlw	4
  1650     079E  0657               	xorwf	main@key_copy,w
  1651     079F  1D03               	btfss	3,2
  1652     07A0  2FA2               	goto	u1101
  1653     07A1  2FA3               	goto	u1100
  1654     07A2                     u1101:
  1655     07A2  2FCE               	goto	l1569
  1656     07A3                     u1100:
  1657     07A3                     l1555:
  1658                           
  1659                           ;main.c: 224:         };main.c: 225:     }
  1660     07A3  01D2               	clrf	main@i_94
  1661     07A4  01D3               	clrf	main@i_94+1
  1662     07A5                     l1557:
  1663     07A5  0853               	movf	main@i_94+1,w
  1664     07A6  3A80               	xorlw	128
  1665     07A7  00FF               	movwf	btemp+1
  1666     07A8  3080               	movlw	128
  1667     07A9  027F               	subwf	btemp+1,w
  1668     07AA  1D03               	skipz
  1669     07AB  2FAE               	goto	u1115
  1670     07AC  3010               	movlw	16
  1671     07AD  0252               	subwf	main@i_94,w
  1672     07AE                     u1115:
  1673     07AE  1C03               	skipc
  1674     07AF  2FB1               	goto	u1111
  1675     07B0  2FB2               	goto	u1110
  1676     07B1                     u1111:
  1677     07B1  2FB3               	goto	l1561
  1678     07B2                     u1110:
  1679     07B2  2FC7               	goto	l1567
  1680     07B3                     l1561:
  1681                           
  1682                           ;main.c: 226: ;main.c: 227:     return;
  1683     07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1684     07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1685     07B5  0852               	movf	main@i_94,w
  1686     07B6  3E20               	addlw	(low (main@msg_buffer| 0))& (0+255)
  1687     07B7  0084               	movwf	4
  1688     07B8  1383               	bcf	3,7	;select IRP bank0
  1689     07B9  0800               	movf	0,w
  1690     07BA  00F7               	movwf	??_main
  1691     07BB  0852               	movf	main@i_94,w
  1692     07BC  3E34               	addlw	(low (main@msg| 0))& (0+255)
  1693     07BD  0084               	movwf	4
  1694     07BE  0877               	movf	??_main,w
  1695     07BF  0080               	movwf	0
  1696     07C0                     l1563:
  1697                           
  1698                           ;main.c: 228: }
  1699     07C0  3001               	movlw	1
  1700     07C1  07D2               	addwf	main@i_94,f
  1701     07C2  1803               	skipnc
  1702     07C3  0AD3               	incf	main@i_94+1,f
  1703     07C4  3000               	movlw	0
  1704     07C5  07D3               	addwf	main@i_94+1,f
  1705     07C6  2FA5               	goto	l1557
  1706     07C7                     l1567:
  1707     07C7  3001               	movlw	1
  1708     07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1709     07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1710     07CA  00C6               	movwf	main@edit_mode_flag
  1711     07CB  3000               	movlw	0
  1712     07CC  00C7               	movwf	main@edit_mode_flag+1
  1713     07CD  2D6B               	goto	l1395
  1714     07CE                     l1569:
  1715     07CE  3020               	movlw	32
  1716     07CF  0657               	xorwf	main@key_copy,w
  1717     07D0  1D03               	btfss	3,2
  1718     07D1  2FD3               	goto	u1121
  1719     07D2  2FD4               	goto	u1120
  1720     07D3                     u1121:
  1721     07D3  2F9A               	goto	l1551
  1722     07D4                     u1120:
  1723     07D4  2D6B               	goto	l1395
  1724     07D5  120A  118A  2800   	ljmp	start
  1725     07D8                     __end_of_main:
  1726                           
  1727                           	psect	text1
  1728     0395                     __ptext1:	
  1729 ;; *************** function _read_matrix_keypad *****************
  1730 ;; Defined at:
  1731 ;;		line 111 in file "matrix_keypad.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  mode            1    wreg     unsigned char 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  mode            1    2[COMMON] unsigned char 
  1736 ;;  key             1    3[COMMON] unsigned char 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      unsigned char 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         0       0       0       0       0
  1747 ;;      Locals:         2       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0
  1749 ;;      Totals:         2       0       0       0       0
  1750 ;;Total ram usage:        2 bytes
  1751 ;; Hardware stack levels used: 1
  1752 ;; Hardware stack levels required when called: 1
  1753 ;; This function calls:
  1754 ;;		_scan_keypad
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760     0395                     _read_matrix_keypad:	
  1761                           ;psect for function _read_matrix_keypad
  1762                           
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+pclath+cstack]
  1766                           ;read_matrix_keypad@mode stored from wreg
  1767     0395  00F2               	movwf	read_matrix_keypad@mode
  1768     0396                     l1353:
  1769                           
  1770                           ;matrix_keypad.c: 111: unsigned char read_matrix_keypad(unsigned char mode);matrix_keypa
      +                          d.c: 112: {;matrix_keypad.c: 113:     static unsigned char once = 1;;matrix_keypad.c: 11
      +                          4:     unsigned char key;;matrix_keypad.c: 116:     key = scan_keypad();
  1771     0396  120A  118A  2480  120A  118A  	fcall	_scan_keypad
  1772     039B  00F3               	movwf	read_matrix_keypad@key
  1773     039C                     l1355:
  1774                           
  1775                           ;matrix_keypad.c: 118:     if (mode == 0)
  1776     039C  0872               	movf	read_matrix_keypad@mode,w
  1777     039D  1D03               	btfss	3,2
  1778     039E  2BA0               	goto	u771
  1779     039F  2BA1               	goto	u770
  1780     03A0                     u771:
  1781     03A0  2BA3               	goto	l1363
  1782     03A1                     u770:
  1783     03A1                     l1357:
  1784                           
  1785                           ;matrix_keypad.c: 119:     {;matrix_keypad.c: 120:         return key;
  1786     03A1  0873               	movf	read_matrix_keypad@key,w
  1787     03A2  2BB7               	goto	l175
  1788     03A3                     l1363:
  1789                           
  1790                           ;matrix_keypad.c: 123:     {;matrix_keypad.c: 124:         if ((key != 0xFF) && once)
  1791     03A3  0A73               	incf	read_matrix_keypad@key,w
  1792     03A4  1903               	btfsc	3,2
  1793     03A5  2BA7               	goto	u781
  1794     03A6  2BA8               	goto	u780
  1795     03A7                     u781:
  1796     03A7  2BAF               	goto	l1375
  1797     03A8                     u780:
  1798     03A8                     l1365:
  1799     03A8  087B               	movf	read_matrix_keypad@once,w
  1800     03A9  1903               	btfsc	3,2
  1801     03AA  2BAC               	goto	u791
  1802     03AB  2BAD               	goto	u790
  1803     03AC                     u791:
  1804     03AC  2BAF               	goto	l1375
  1805     03AD                     u790:
  1806     03AD                     l1367:
  1807                           
  1808                           ;matrix_keypad.c: 125:         {;matrix_keypad.c: 126:             once = 0;
  1809     03AD  01FB               	clrf	read_matrix_keypad@once
  1810     03AE  2BA1               	goto	l1357
  1811     03AF                     l1375:
  1812     03AF  0A73               	incf	read_matrix_keypad@key,w
  1813     03B0  1D03               	btfss	3,2
  1814     03B1  2BB3               	goto	u801
  1815     03B2  2BB4               	goto	u800
  1816     03B3                     u801:
  1817     03B3  2BB6               	goto	l1379
  1818     03B4                     u800:
  1819     03B4                     l1377:
  1820                           
  1821                           ;matrix_keypad.c: 131:         {;matrix_keypad.c: 132:             once = 1;
  1822     03B4  01FB               	clrf	read_matrix_keypad@once
  1823     03B5  0AFB               	incf	read_matrix_keypad@once,f
  1824     03B6                     l1379:
  1825                           
  1826                           ;matrix_keypad.c: 136:     return 0xFF;
  1827     03B6  30FF               	movlw	255
  1828     03B7                     l175:
  1829     03B7  0008               	return
  1830     03B8                     __end_of_read_matrix_keypad:
  1831                           
  1832                           	psect	text2
  1833     0480                     __ptext2:	
  1834 ;; *************** function _scan_keypad *****************
  1835 ;; Defined at:
  1836 ;;		line 24 in file "matrix_keypad.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  i               2    0[COMMON] int 
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      unsigned char 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1850 ;;      Params:         0       0       0       0       0
  1851 ;;      Locals:         2       0       0       0       0
  1852 ;;      Temps:          0       0       0       0       0
  1853 ;;      Totals:         2       0       0       0       0
  1854 ;;Total ram usage:        2 bytes
  1855 ;; Hardware stack levels used: 1
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_read_matrix_keypad
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863     0480                     _scan_keypad:	
  1864                           ;psect for function _scan_keypad
  1865                           
  1866     0480                     l1255:	
  1867                           ;incstack = 0
  1868                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
  1869                           
  1870                           
  1871                           ;matrix_keypad.c: 26:     int i;;matrix_keypad.c: 28:     RD3 = 0;
  1872     0480  1283               	bcf	3,5	;RP0=0, select bank0
  1873     0481  1303               	bcf	3,6	;RP1=0, select bank0
  1874     0482  1188               	bcf	8,3	;volatile
  1875                           
  1876                           ;matrix_keypad.c: 29:     RD2 = 1;
  1877     0483  1508               	bsf	8,2	;volatile
  1878                           
  1879                           ;matrix_keypad.c: 30:     RD1 = 1;
  1880     0484  1488               	bsf	8,1	;volatile
  1881                           
  1882                           ;matrix_keypad.c: 31:     RD0 = 1;
  1883     0485  1408               	bsf	8,0	;volatile
  1884     0486                     l1257:
  1885                           
  1886                           ;matrix_keypad.c: 33:     for (i = 100; i--; );
  1887     0486  3064               	movlw	100
  1888     0487  00F0               	movwf	scan_keypad@i
  1889     0488  3000               	movlw	0
  1890     0489  00F1               	movwf	scan_keypad@i+1
  1891     048A                     l1259:
  1892     048A  30FF               	movlw	255
  1893     048B  07F0               	addwf	scan_keypad@i,f
  1894     048C  1803               	skipnc
  1895     048D  0AF1               	incf	scan_keypad@i+1,f
  1896     048E  30FF               	movlw	255
  1897     048F  07F1               	addwf	scan_keypad@i+1,f
  1898     0490  0A70               	incf	scan_keypad@i,w
  1899     0491  1D03               	skipz
  1900     0492  2C97               	goto	u601
  1901     0493  0A71               	incf	scan_keypad@i+1,w
  1902     0494  1D03               	btfss	3,2
  1903     0495  2C97               	goto	u601
  1904     0496  2C98               	goto	u600
  1905     0497                     u601:
  1906     0497  2C8A               	goto	l1259
  1907     0498                     u600:
  1908     0498                     l139:
  1909                           
  1910                           ;matrix_keypad.c: 35:     if (RB0 == 0)
  1911     0498  1283               	bcf	3,5	;RP0=0, select bank0
  1912     0499  1303               	bcf	3,6	;RP1=0, select bank0
  1913     049A  1806               	btfsc	6,0	;volatile
  1914     049B  2C9D               	goto	u611
  1915     049C  2C9E               	goto	u610
  1916     049D                     u611:
  1917     049D  2CA0               	goto	l140
  1918     049E                     u610:
  1919     049E                     l1261:
  1920                           
  1921                           ;matrix_keypad.c: 36:     {;matrix_keypad.c: 37:         return 1;
  1922     049E  3001               	movlw	1
  1923     049F  2D2B               	goto	l141
  1924     04A0                     l140:	
  1925                           ;matrix_keypad.c: 39:     else if (RB1 == 0)
  1926                           
  1927     04A0  1886               	btfsc	6,1	;volatile
  1928     04A1  2CA3               	goto	u621
  1929     04A2  2CA4               	goto	u620
  1930     04A3                     u621:
  1931     04A3  2CA6               	goto	l143
  1932     04A4                     u620:
  1933     04A4                     l1267:
  1934                           
  1935                           ;matrix_keypad.c: 40:     {;matrix_keypad.c: 41:         return 2;
  1936     04A4  3002               	movlw	2
  1937     04A5  2D2B               	goto	l141
  1938     04A6                     l143:	
  1939                           ;matrix_keypad.c: 43:     else if (RB2 == 0)
  1940                           
  1941     04A6  1906               	btfsc	6,2	;volatile
  1942     04A7  2CA9               	goto	u631
  1943     04A8  2CAA               	goto	u630
  1944     04A9                     u631:
  1945     04A9  2CAC               	goto	l142
  1946     04AA                     u630:
  1947     04AA                     l1273:
  1948                           
  1949                           ;matrix_keypad.c: 44:     {;matrix_keypad.c: 45:         return 3;
  1950     04AA  3003               	movlw	3
  1951     04AB  2D2B               	goto	l141
  1952     04AC                     l142:
  1953                           
  1954                           ;matrix_keypad.c: 48:     RD3 = 1;
  1955     04AC  1588               	bsf	8,3	;volatile
  1956                           
  1957                           ;matrix_keypad.c: 49:     RD2 = 0;
  1958     04AD  1108               	bcf	8,2	;volatile
  1959                           
  1960                           ;matrix_keypad.c: 50:     RD1 = 1;
  1961     04AE  1488               	bsf	8,1	;volatile
  1962                           
  1963                           ;matrix_keypad.c: 51:     RD0 = 1;
  1964     04AF  1408               	bsf	8,0	;volatile
  1965     04B0                     l1277:
  1966                           
  1967                           ;matrix_keypad.c: 53:     for (i = 100; i--; );
  1968     04B0  3064               	movlw	100
  1969     04B1  00F0               	movwf	scan_keypad@i
  1970     04B2  3000               	movlw	0
  1971     04B3  00F1               	movwf	scan_keypad@i+1
  1972     04B4                     l1279:
  1973     04B4  30FF               	movlw	255
  1974     04B5  07F0               	addwf	scan_keypad@i,f
  1975     04B6  1803               	skipnc
  1976     04B7  0AF1               	incf	scan_keypad@i+1,f
  1977     04B8  30FF               	movlw	255
  1978     04B9  07F1               	addwf	scan_keypad@i+1,f
  1979     04BA  0A70               	incf	scan_keypad@i,w
  1980     04BB  1D03               	skipz
  1981     04BC  2CC1               	goto	u641
  1982     04BD  0A71               	incf	scan_keypad@i+1,w
  1983     04BE  1D03               	btfss	3,2
  1984     04BF  2CC1               	goto	u641
  1985     04C0  2CC2               	goto	u640
  1986     04C1                     u641:
  1987     04C1  2CB4               	goto	l1279
  1988     04C2                     u640:
  1989     04C2                     l148:
  1990                           
  1991                           ;matrix_keypad.c: 55:     if (RB0 == 0)
  1992     04C2  1283               	bcf	3,5	;RP0=0, select bank0
  1993     04C3  1303               	bcf	3,6	;RP1=0, select bank0
  1994     04C4  1806               	btfsc	6,0	;volatile
  1995     04C5  2CC7               	goto	u651
  1996     04C6  2CC8               	goto	u650
  1997     04C7                     u651:
  1998     04C7  2CCA               	goto	l149
  1999     04C8                     u650:
  2000     04C8                     l1281:
  2001                           
  2002                           ;matrix_keypad.c: 56:     {;matrix_keypad.c: 57:         return 4;
  2003     04C8  3004               	movlw	4
  2004     04C9  2D2B               	goto	l141
  2005     04CA                     l149:	
  2006                           ;matrix_keypad.c: 59:     else if (RB1 == 0)
  2007                           
  2008     04CA  1886               	btfsc	6,1	;volatile
  2009     04CB  2CCD               	goto	u661
  2010     04CC  2CCE               	goto	u660
  2011     04CD                     u661:
  2012     04CD  2CD0               	goto	l151
  2013     04CE                     u660:
  2014     04CE                     l1287:
  2015                           
  2016                           ;matrix_keypad.c: 60:     {;matrix_keypad.c: 61:         return 5;
  2017     04CE  3005               	movlw	5
  2018     04CF  2D2B               	goto	l141
  2019     04D0                     l151:	
  2020                           ;matrix_keypad.c: 63:     else if (RB2 == 0)
  2021                           
  2022     04D0  1906               	btfsc	6,2	;volatile
  2023     04D1  2CD3               	goto	u671
  2024     04D2  2CD4               	goto	u670
  2025     04D3                     u671:
  2026     04D3  2CD6               	goto	l150
  2027     04D4                     u670:
  2028     04D4                     l1293:
  2029                           
  2030                           ;matrix_keypad.c: 64:     {;matrix_keypad.c: 65:         return 6;
  2031     04D4  3006               	movlw	6
  2032     04D5  2D2B               	goto	l141
  2033     04D6                     l150:
  2034                           
  2035                           ;matrix_keypad.c: 68:     RD3 = 1;
  2036     04D6  1588               	bsf	8,3	;volatile
  2037                           
  2038                           ;matrix_keypad.c: 69:     RD2 = 1;
  2039     04D7  1508               	bsf	8,2	;volatile
  2040                           
  2041                           ;matrix_keypad.c: 70:     RD1 = 0;
  2042     04D8  1088               	bcf	8,1	;volatile
  2043                           
  2044                           ;matrix_keypad.c: 71:     RD0 = 1;
  2045     04D9  1408               	bsf	8,0	;volatile
  2046     04DA                     l1297:
  2047                           
  2048                           ;matrix_keypad.c: 73:     for (i = 100; i--; );
  2049     04DA  3064               	movlw	100
  2050     04DB  00F0               	movwf	scan_keypad@i
  2051     04DC  3000               	movlw	0
  2052     04DD  00F1               	movwf	scan_keypad@i+1
  2053     04DE                     l1299:
  2054     04DE  30FF               	movlw	255
  2055     04DF  07F0               	addwf	scan_keypad@i,f
  2056     04E0  1803               	skipnc
  2057     04E1  0AF1               	incf	scan_keypad@i+1,f
  2058     04E2  30FF               	movlw	255
  2059     04E3  07F1               	addwf	scan_keypad@i+1,f
  2060     04E4  0A70               	incf	scan_keypad@i,w
  2061     04E5  1D03               	skipz
  2062     04E6  2CEB               	goto	u681
  2063     04E7  0A71               	incf	scan_keypad@i+1,w
  2064     04E8  1D03               	btfss	3,2
  2065     04E9  2CEB               	goto	u681
  2066     04EA  2CEC               	goto	u680
  2067     04EB                     u681:
  2068     04EB  2CDE               	goto	l1299
  2069     04EC                     u680:
  2070     04EC                     l156:
  2071                           
  2072                           ;matrix_keypad.c: 75:     if (RB0 == 0)
  2073     04EC  1283               	bcf	3,5	;RP0=0, select bank0
  2074     04ED  1303               	bcf	3,6	;RP1=0, select bank0
  2075     04EE  1806               	btfsc	6,0	;volatile
  2076     04EF  2CF1               	goto	u691
  2077     04F0  2CF2               	goto	u690
  2078     04F1                     u691:
  2079     04F1  2CF4               	goto	l157
  2080     04F2                     u690:
  2081     04F2                     l1301:
  2082                           
  2083                           ;matrix_keypad.c: 76:     {;matrix_keypad.c: 77:         return 7;
  2084     04F2  3007               	movlw	7
  2085     04F3  2D2B               	goto	l141
  2086     04F4                     l157:	
  2087                           ;matrix_keypad.c: 79:     else if (RB1 == 0)
  2088                           
  2089     04F4  1886               	btfsc	6,1	;volatile
  2090     04F5  2CF7               	goto	u701
  2091     04F6  2CF8               	goto	u700
  2092     04F7                     u701:
  2093     04F7  2CFA               	goto	l159
  2094     04F8                     u700:
  2095     04F8                     l1307:
  2096                           
  2097                           ;matrix_keypad.c: 80:     {;matrix_keypad.c: 81:         return 8;
  2098     04F8  3008               	movlw	8
  2099     04F9  2D2B               	goto	l141
  2100     04FA                     l159:	
  2101                           ;matrix_keypad.c: 83:     else if (RB2 == 0)
  2102                           
  2103     04FA  1906               	btfsc	6,2	;volatile
  2104     04FB  2CFD               	goto	u711
  2105     04FC  2CFE               	goto	u710
  2106     04FD                     u711:
  2107     04FD  2D00               	goto	l158
  2108     04FE                     u710:
  2109     04FE                     l1313:
  2110                           
  2111                           ;matrix_keypad.c: 84:     {;matrix_keypad.c: 85:         return 9;
  2112     04FE  3009               	movlw	9
  2113     04FF  2D2B               	goto	l141
  2114     0500                     l158:
  2115                           
  2116                           ;matrix_keypad.c: 88:     RD3 = 1;
  2117     0500  1588               	bsf	8,3	;volatile
  2118                           
  2119                           ;matrix_keypad.c: 89:     RD2 = 1;
  2120     0501  1508               	bsf	8,2	;volatile
  2121                           
  2122                           ;matrix_keypad.c: 90:     RD1 = 1;
  2123     0502  1488               	bsf	8,1	;volatile
  2124                           
  2125                           ;matrix_keypad.c: 91:     RD0 = 0;
  2126     0503  1008               	bcf	8,0	;volatile
  2127     0504                     l1317:
  2128                           
  2129                           ;matrix_keypad.c: 93:     for (i = 100; i--; );
  2130     0504  3064               	movlw	100
  2131     0505  00F0               	movwf	scan_keypad@i
  2132     0506  3000               	movlw	0
  2133     0507  00F1               	movwf	scan_keypad@i+1
  2134     0508                     l1319:
  2135     0508  30FF               	movlw	255
  2136     0509  07F0               	addwf	scan_keypad@i,f
  2137     050A  1803               	skipnc
  2138     050B  0AF1               	incf	scan_keypad@i+1,f
  2139     050C  30FF               	movlw	255
  2140     050D  07F1               	addwf	scan_keypad@i+1,f
  2141     050E  0A70               	incf	scan_keypad@i,w
  2142     050F  1D03               	skipz
  2143     0510  2D15               	goto	u721
  2144     0511  0A71               	incf	scan_keypad@i+1,w
  2145     0512  1D03               	btfss	3,2
  2146     0513  2D15               	goto	u721
  2147     0514  2D16               	goto	u720
  2148     0515                     u721:
  2149     0515  2D08               	goto	l1319
  2150     0516                     u720:
  2151     0516                     l164:
  2152                           
  2153                           ;matrix_keypad.c: 95:     if (RB0 == 0)
  2154     0516  1283               	bcf	3,5	;RP0=0, select bank0
  2155     0517  1303               	bcf	3,6	;RP1=0, select bank0
  2156     0518  1806               	btfsc	6,0	;volatile
  2157     0519  2D1B               	goto	u731
  2158     051A  2D1C               	goto	u730
  2159     051B                     u731:
  2160     051B  2D1E               	goto	l165
  2161     051C                     u730:
  2162     051C                     l1321:
  2163                           
  2164                           ;matrix_keypad.c: 96:     {;matrix_keypad.c: 97:         return '*';
  2165     051C  302A               	movlw	42
  2166     051D  2D2B               	goto	l141
  2167     051E                     l165:	
  2168                           ;matrix_keypad.c: 99:     else if (RB1 == 0)
  2169                           
  2170     051E  1886               	btfsc	6,1	;volatile
  2171     051F  2D21               	goto	u741
  2172     0520  2D22               	goto	u740
  2173     0521                     u741:
  2174     0521  2D24               	goto	l167
  2175     0522                     u740:
  2176     0522                     l1327:
  2177                           
  2178                           ;matrix_keypad.c: 100:     {;matrix_keypad.c: 101:         return 0;
  2179     0522  3000               	movlw	0
  2180     0523  2D2B               	goto	l141
  2181     0524                     l167:	
  2182                           ;matrix_keypad.c: 103:     else if (RB2 == 0)
  2183                           
  2184     0524  1906               	btfsc	6,2	;volatile
  2185     0525  2D27               	goto	u751
  2186     0526  2D28               	goto	u750
  2187     0527                     u751:
  2188     0527  2D2A               	goto	l1337
  2189     0528                     u750:
  2190     0528                     l1333:
  2191                           
  2192                           ;matrix_keypad.c: 104:     {;matrix_keypad.c: 105:         return '#';
  2193     0528  3023               	movlw	35
  2194     0529  2D2B               	goto	l141
  2195     052A                     l1337:
  2196                           
  2197                           ;matrix_keypad.c: 108:     return 0xFF;
  2198     052A  30FF               	movlw	255
  2199     052B                     l141:
  2200     052B  0008               	return
  2201     052C                     __end_of_scan_keypad:
  2202                           
  2203                           	psect	text3
  2204     0335                     __ptext3:	
  2205 ;; *************** function _init_config *****************
  2206 ;; Defined at:
  2207 ;;		line 23 in file "main.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0, pclath, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         0       0       0       0       0
  2222 ;;      Locals:         0       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0
  2224 ;;      Totals:         0       0       0       0       0
  2225 ;;Total ram usage:        0 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; Hardware stack levels required when called: 3
  2228 ;; This function calls:
  2229 ;;		_init_clcd
  2230 ;;		_init_matrix_keypad
  2231 ;; This function is called by:
  2232 ;;		_main
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236     0335                     _init_config:	
  2237                           ;psect for function _init_config
  2238                           
  2239     0335                     l1351:	
  2240                           ;incstack = 0
  2241                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  2242                           
  2243                           
  2244                           ;main.c: 25:     unsigned short edit_mode_flag = 1;
  2245     0335  120A  118A  232A  120A  118A  	fcall	_init_clcd
  2246                           
  2247                           ;main.c: 26:     unsigned short pause_flag = 0;
  2248     033A  120A  118A  2340  120A  118A  	fcall	_init_matrix_keypad
  2249     033F                     l47:
  2250     033F  0008               	return
  2251     0340                     __end_of_init_config:
  2252                           
  2253                           	psect	text4
  2254     0340                     __ptext4:	
  2255 ;; *************** function _init_matrix_keypad *****************
  2256 ;; Defined at:
  2257 ;;		line 4 in file "matrix_keypad.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2271 ;;      Params:         0       0       0       0       0
  2272 ;;      Locals:         0       0       0       0       0
  2273 ;;      Temps:          0       0       0       0       0
  2274 ;;      Totals:         0       0       0       0       0
  2275 ;;Total ram usage:        0 bytes
  2276 ;; Hardware stack levels used: 1
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_init_config
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284     0340                     _init_matrix_keypad:	
  2285                           ;psect for function _init_matrix_keypad
  2286                           
  2287     0340                     l1243:	
  2288                           ;incstack = 0
  2289                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  2290                           
  2291                           
  2292                           ;matrix_keypad.c: 8:     TRISB = TRISB | 0x07;
  2293     0340  1683               	bsf	3,5	;RP0=1, select bank1
  2294     0341  1303               	bcf	3,6	;RP1=0, select bank1
  2295     0342  0806               	movf	6,w	;volatile
  2296     0343  3807               	iorlw	7
  2297     0344  0086               	movwf	6	;volatile
  2298                           
  2299                           ;matrix_keypad.c: 12:     TRISD = TRISD & 0xF0;
  2300     0345  0808               	movf	8,w	;volatile
  2301     0346  39F0               	andlw	240
  2302     0347  0088               	movwf	8	;volatile
  2303     0348                     l1245:
  2304                           
  2305                           ;matrix_keypad.c: 15:     nRBPU = 0;
  2306     0348  1381               	bcf	1,7	;volatile
  2307     0349                     l1247:
  2308                           
  2309                           ;matrix_keypad.c: 18:     RD3 = 1;
  2310     0349  1283               	bcf	3,5	;RP0=0, select bank0
  2311     034A  1303               	bcf	3,6	;RP1=0, select bank0
  2312     034B  1588               	bsf	8,3	;volatile
  2313     034C                     l1249:
  2314                           
  2315                           ;matrix_keypad.c: 19:     RD2 = 1;
  2316     034C  1508               	bsf	8,2	;volatile
  2317     034D                     l1251:
  2318                           
  2319                           ;matrix_keypad.c: 20:     RD1 = 1;
  2320     034D  1488               	bsf	8,1	;volatile
  2321     034E                     l1253:
  2322                           
  2323                           ;matrix_keypad.c: 21:     RD0 = 1;
  2324     034E  1408               	bsf	8,0	;volatile
  2325     034F                     l134:
  2326     034F  0008               	return
  2327     0350                     __end_of_init_matrix_keypad:
  2328                           
  2329                           	psect	text5
  2330     032A                     __ptext5:	
  2331 ;; *************** function _init_clcd *****************
  2332 ;; Defined at:
  2333 ;;		line 44 in file "clcd.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0, pclath, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2347 ;;      Params:         0       0       0       0       0
  2348 ;;      Locals:         0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0
  2350 ;;      Totals:         0       0       0       0       0
  2351 ;;Total ram usage:        0 bytes
  2352 ;; Hardware stack levels used: 1
  2353 ;; Hardware stack levels required when called: 2
  2354 ;; This function calls:
  2355 ;;		_init_display_controller
  2356 ;; This function is called by:
  2357 ;;		_init_config
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361     032A                     _init_clcd:	
  2362                           ;psect for function _init_clcd
  2363                           
  2364     032A                     l1235:	
  2365                           ;incstack = 0
  2366                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  2367                           
  2368                           
  2369                           ;clcd.c: 47:     TRISD = 0x00;
  2370     032A  1683               	bsf	3,5	;RP0=1, select bank1
  2371     032B  1303               	bcf	3,6	;RP1=0, select bank1
  2372     032C  0188               	clrf	8	;volatile
  2373     032D                     l1237:
  2374                           
  2375                           ;clcd.c: 50:     TRISE2 = 0;
  2376     032D  1109               	bcf	9,2	;volatile
  2377     032E                     l1239:
  2378                           
  2379                           ;clcd.c: 51:     TRISE1 = 0;
  2380     032E  1089               	bcf	9,1	;volatile
  2381     032F                     l1241:
  2382                           
  2383                           ;clcd.c: 53:     init_display_controller();
  2384     032F  120A  118A  241D  120A  118A  	fcall	_init_display_controller
  2385     0334                     l23:
  2386     0334  0008               	return
  2387     0335                     __end_of_init_clcd:
  2388                           
  2389                           	psect	text6
  2390     041D                     __ptext6:	
  2391 ;; *************** function _init_display_controller *****************
  2392 ;; Defined at:
  2393 ;;		line 21 in file "clcd.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;		None
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;		None
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, status,2, status,0, pclath, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2407 ;;      Params:         0       0       0       0       0
  2408 ;;      Locals:         0       0       0       0       0
  2409 ;;      Temps:          2       0       0       0       0
  2410 ;;      Totals:         2       0       0       0       0
  2411 ;;Total ram usage:        2 bytes
  2412 ;; Hardware stack levels used: 1
  2413 ;; Hardware stack levels required when called: 1
  2414 ;; This function calls:
  2415 ;;		_clcd_write
  2416 ;; This function is called by:
  2417 ;;		_init_clcd
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421     041D                     _init_display_controller:	
  2422                           ;psect for function _init_display_controller
  2423                           
  2424     041D                     l1211:	
  2425                           ;incstack = 0
  2426                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  2427                           
  2428                           
  2429                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  2430     041D  30C3               	movlw	195
  2431     041E  00F5               	movwf	??_init_display_controller+1
  2432     041F  30CD               	movlw	205
  2433     0420  00F4               	movwf	??_init_display_controller
  2434     0421                     u1137:
  2435     0421  0BF4               	decfsz	??_init_display_controller,f
  2436     0422  2C21               	goto	u1137
  2437     0423  0BF5               	decfsz	??_init_display_controller+1,f
  2438     0424  2C21               	goto	u1137
  2439     0425                     l1213:
  2440                           
  2441                           ;clcd.c: 27:     clcd_write(0x33, 0);
  2442     0425  01F0               	clrf	clcd_write@mode
  2443     0426  3033               	movlw	51
  2444     0427  120A  118A  23E7  120A  118A  	fcall	_clcd_write
  2445     042C                     l1215:
  2446                           
  2447                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2448     042C  301B               	movlw	27
  2449     042D  00F5               	movwf	??_init_display_controller+1
  2450     042E  309E               	movlw	158
  2451     042F  00F4               	movwf	??_init_display_controller
  2452     0430                     u1147:
  2453     0430  0BF4               	decfsz	??_init_display_controller,f
  2454     0431  2C30               	goto	u1147
  2455     0432  0BF5               	decfsz	??_init_display_controller+1,f
  2456     0433  2C30               	goto	u1147
  2457     0434  0000               	nop
  2458                           
  2459                           ;clcd.c: 29:     clcd_write(0x33, 0);
  2460     0435  01F0               	clrf	clcd_write@mode
  2461     0436  3033               	movlw	51
  2462     0437  120A  118A  23E7  120A  118A  	fcall	_clcd_write
  2463     043C                     l1217:
  2464                           
  2465                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2466     043C  30A6               	movlw	166
  2467     043D  00F4               	movwf	??_init_display_controller
  2468     043E                     u1157:
  2469     043E  0BF4               	decfsz	??_init_display_controller,f
  2470     043F  2C3E               	goto	u1157
  2471     0440  0000               	nop
  2472     0441                     l1219:
  2473                           
  2474                           ;clcd.c: 31:     clcd_write(0x33, 0);
  2475     0441  01F0               	clrf	clcd_write@mode
  2476     0442  3033               	movlw	51
  2477     0443  120A  118A  23E7  120A  118A  	fcall	_clcd_write
  2478     0448                     l1221:
  2479                           
  2480                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  2481     0448  2C49               	nop2	;2 cycle nop
  2482     0449  2C4A               	nop2	;2 cycle nop
  2483     044A  0000               	nop
  2484     044B                     l1223:
  2485                           
  2486                           ;clcd.c: 34:     clcd_write(0x02, 0);
  2487     044B  01F0               	clrf	clcd_write@mode
  2488     044C  3002               	movlw	2
  2489     044D  120A  118A  23E7  120A  118A  	fcall	_clcd_write
  2490     0452                     l1225:
  2491                           
  2492                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2493     0452  30A6               	movlw	166
  2494     0453  00F4               	movwf	??_init_display_controller
  2495     0454                     u1167:
  2496     0454  0BF4               	decfsz	??_init_display_controller,f
  2497     0455  2C54               	goto	u1167
  2498     0456  0000               	nop
  2499                           
  2500                           ;clcd.c: 36:     clcd_write(0x28, 0);
  2501     0457  01F0               	clrf	clcd_write@mode
  2502     0458  3028               	movlw	40
  2503     0459  120A  118A  23E7  120A  118A  	fcall	_clcd_write
  2504     045E                     l1227:
  2505                           
  2506                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2507     045E  30A6               	movlw	166
  2508     045F  00F4               	movwf	??_init_display_controller
  2509     0460                     u1177:
  2510     0460  0BF4               	decfsz	??_init_display_controller,f
  2511     0461  2C60               	goto	u1177
  2512     0462  0000               	nop
  2513     0463                     l1229:
  2514                           
  2515                           ;clcd.c: 38:     clcd_write(0x01, 0);
  2516     0463  01F0               	clrf	clcd_write@mode
  2517     0464  3001               	movlw	1
  2518     0465  120A  118A  23E7  120A  118A  	fcall	_clcd_write
  2519                           
  2520                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  2521     046A  3004               	movlw	4
  2522     046B  00F5               	movwf	??_init_display_controller+1
  2523     046C  303D               	movlw	61
  2524     046D  00F4               	movwf	??_init_display_controller
  2525     046E                     u1187:
  2526     046E  0BF4               	decfsz	??_init_display_controller,f
  2527     046F  2C6E               	goto	u1187
  2528     0470  0BF5               	decfsz	??_init_display_controller+1,f
  2529     0471  2C6E               	goto	u1187
  2530     0472  2C73               	nop2
  2531     0473                     l1231:
  2532                           
  2533                           ;clcd.c: 40:     clcd_write(0x0C, 0);
  2534     0473  01F0               	clrf	clcd_write@mode
  2535     0474  300C               	movlw	12
  2536     0475  120A  118A  23E7  120A  118A  	fcall	_clcd_write
  2537     047A                     l1233:
  2538                           
  2539                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2540     047A  30A6               	movlw	166
  2541     047B  00F4               	movwf	??_init_display_controller
  2542     047C                     u1197:
  2543     047C  0BF4               	decfsz	??_init_display_controller,f
  2544     047D  2C7C               	goto	u1197
  2545     047E  0000               	nop
  2546     047F                     l20:
  2547     047F  0008               	return
  2548     0480                     __end_of_init_display_controller:
  2549                           
  2550                           	psect	text7
  2551     0360                     __ptext7:	
  2552 ;; *************** function _clcd_putch *****************
  2553 ;; Defined at:
  2554 ;;		line 56 in file "clcd.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  data            1    wreg     const unsigned char 
  2557 ;;  addr            1    4[COMMON] unsigned char 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  data            1    5[COMMON] const unsigned char 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		wreg, status,2, status,0, pclath, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2569 ;;      Params:         1       0       0       0       0
  2570 ;;      Locals:         1       0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0
  2572 ;;      Totals:         2       0       0       0       0
  2573 ;;Total ram usage:        2 bytes
  2574 ;; Hardware stack levels used: 1
  2575 ;; Hardware stack levels required when called: 1
  2576 ;; This function calls:
  2577 ;;		_clcd_write
  2578 ;; This function is called by:
  2579 ;;		_main
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583     0360                     _clcd_putch:	
  2584                           ;psect for function _clcd_putch
  2585                           
  2586                           
  2587                           ;incstack = 0
  2588                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  2589                           ;clcd_putch@data stored from wreg
  2590     0360  00F5               	movwf	clcd_putch@data
  2591     0361                     l1341:
  2592                           
  2593                           ;clcd.c: 56: void clcd_putch(const char data, unsigned char addr);clcd.c: 57: {;clcd.c: 
      +                          58:     clcd_write(addr, 0);
  2594     0361  01F0               	clrf	clcd_write@mode
  2595     0362  0874               	movf	clcd_putch@addr,w
  2596     0363  120A  118A  23E7  120A  118A  	fcall	_clcd_write
  2597                           
  2598                           ;clcd.c: 59:     clcd_write(data, 1);
  2599     0368  01F0               	clrf	clcd_write@mode
  2600     0369  0AF0               	incf	clcd_write@mode,f
  2601     036A  0875               	movf	clcd_putch@data,w
  2602     036B  120A  118A  23E7  120A  118A  	fcall	_clcd_write
  2603     0370                     l26:
  2604     0370  0008               	return
  2605     0371                     __end_of_clcd_putch:
  2606                           
  2607                           	psect	text8
  2608     03B8                     __ptext8:	
  2609 ;; *************** function _clcd_print *****************
  2610 ;; Defined at:
  2611 ;;		line 62 in file "clcd.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  str             2    4[COMMON] PTR const unsigned char 
  2614 ;;		 -> STR_4(17), STR_3(17), STR_2(5), STR_1(17), 
  2615 ;;		 -> main@msg(16), 
  2616 ;;  addr            1    6[COMMON] unsigned char 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2628 ;;      Params:         3       0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0
  2631 ;;      Totals:         3       0       0       0       0
  2632 ;;Total ram usage:        3 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 1
  2635 ;; This function calls:
  2636 ;;		_clcd_write
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642     03B8                     _clcd_print:	
  2643                           ;psect for function _clcd_print
  2644                           
  2645     03B8                     l1343:	
  2646                           ;incstack = 0
  2647                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2648                           
  2649                           
  2650                           ;clcd.c: 62: void clcd_print(const char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          64:     clcd_write(addr, 0);
  2651     03B8  01F0               	clrf	clcd_write@mode
  2652     03B9  0876               	movf	clcd_print@addr,w
  2653     03BA  120A  118A  23E7  120A  118A  	fcall	_clcd_write
  2654                           
  2655                           ;clcd.c: 66:     while (*str != '\0')
  2656     03BF  2BD6               	goto	l1349
  2657     03C0                     l1345:
  2658                           
  2659                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
  2660     03C0  01F0               	clrf	clcd_write@mode
  2661     03C1  0AF0               	incf	clcd_write@mode,f
  2662     03C2  0875               	movf	clcd_print@str+1,w
  2663     03C3  00FF               	movwf	btemp+1
  2664     03C4  0874               	movf	clcd_print@str,w
  2665     03C5  0084               	movwf	4
  2666     03C6  120A  118A  2003  120A  118A  	fcall	stringtab
  2667     03CB  120A  118A  23E7  120A  118A  	fcall	_clcd_write
  2668     03D0                     l1347:
  2669                           
  2670                           ;clcd.c: 69:         str++;
  2671     03D0  3001               	movlw	1
  2672     03D1  07F4               	addwf	clcd_print@str,f
  2673     03D2  1803               	skipnc
  2674     03D3  0AF5               	incf	clcd_print@str+1,f
  2675     03D4  3000               	movlw	0
  2676     03D5  07F5               	addwf	clcd_print@str+1,f
  2677     03D6                     l1349:
  2678                           
  2679                           ;clcd.c: 66:     while (*str != '\0')
  2680     03D6  0875               	movf	clcd_print@str+1,w
  2681     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2682     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2683     03D9  00FF               	movwf	btemp+1
  2684     03DA  0874               	movf	clcd_print@str,w
  2685     03DB  0084               	movwf	4
  2686     03DC  120A  118A  2003  120A  118A  	fcall	stringtab
  2687     03E1  3A00               	xorlw	0
  2688     03E2  1D03               	skipz
  2689     03E3  2BE5               	goto	u761
  2690     03E4  2BE6               	goto	u760
  2691     03E5                     u761:
  2692     03E5  2BC0               	goto	l1345
  2693     03E6                     u760:
  2694     03E6                     l32:
  2695     03E6  0008               	return
  2696     03E7                     __end_of_clcd_print:
  2697                           
  2698                           	psect	text9
  2699     03E7                     __ptext9:	
  2700 ;; *************** function _clcd_write *****************
  2701 ;; Defined at:
  2702 ;;		line 4 in file "clcd.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  byte            1    wreg     unsigned char 
  2705 ;;  mode            1    0[COMMON] unsigned char 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  byte            1    3[COMMON] unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2717 ;;      Params:         1       0       0       0       0
  2718 ;;      Locals:         1       0       0       0       0
  2719 ;;      Temps:          2       0       0       0       0
  2720 ;;      Totals:         4       0       0       0       0
  2721 ;;Total ram usage:        4 bytes
  2722 ;; Hardware stack levels used: 1
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_init_display_controller
  2727 ;;		_clcd_putch
  2728 ;;		_clcd_print
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732     03E7                     _clcd_write:	
  2733                           ;psect for function _clcd_write
  2734                           
  2735                           
  2736                           ;incstack = 0
  2737                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  2738                           ;clcd_write@byte stored from wreg
  2739     03E7  00F3               	movwf	clcd_write@byte
  2740     03E8                     l1191:
  2741                           
  2742                           ;clcd.c: 4:            void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5
      +                          : {;clcd.c: 6:     RE2 = (__bit) mode;
  2743     03E8  1870               	btfsc	clcd_write@mode,0
  2744     03E9  2BEB               	goto	u571
  2745     03EA  2BEF               	goto	u570
  2746     03EB                     u571:
  2747     03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2748     03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2749     03ED  1509               	bsf	9,2	;volatile
  2750     03EE  2BF2               	goto	u584
  2751     03EF                     u570:
  2752     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2753     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2754     03F1  1109               	bcf	9,2	;volatile
  2755     03F2                     u584:
  2756     03F2                     l1193:
  2757                           
  2758                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  2759     03F2  0873               	movf	clcd_write@byte,w
  2760     03F3  39F0               	andlw	240
  2761     03F4  0088               	movwf	8	;volatile
  2762     03F5                     l1195:
  2763                           
  2764                           ;clcd.c: 9:     RE1 = 1;
  2765     03F5  1489               	bsf	9,1	;volatile
  2766     03F6                     l1197:
  2767                           
  2768                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2769     03F6  30A6               	movlw	166
  2770     03F7  00F1               	movwf	??_clcd_write
  2771     03F8                     u1207:
  2772     03F8  0BF1               	decfsz	??_clcd_write,f
  2773     03F9  2BF8               	goto	u1207
  2774     03FA  0000               	nop
  2775     03FB                     l1199:
  2776                           
  2777                           ;clcd.c: 11:     RE1 = 0;
  2778     03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2779     03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2780     03FD  1089               	bcf	9,1	;volatile
  2781     03FE                     l1201:
  2782                           
  2783                           ;clcd.c: 13:     PORTD = (unsigned char) ((byte & 0x0F) << 4);
  2784     03FE  0873               	movf	clcd_write@byte,w
  2785     03FF  390F               	andlw	15
  2786     0400  00F1               	movwf	??_clcd_write
  2787     0401  3003               	movlw	3
  2788     0402                     u595:
  2789     0402  1003               	clrc
  2790     0403  0DF1               	rlf	??_clcd_write,f
  2791     0404  3EFF               	addlw	-1
  2792     0405  1D03               	skipz
  2793     0406  2C02               	goto	u595
  2794     0407  1003               	clrc
  2795     0408  0D71               	rlf	??_clcd_write,w
  2796     0409  0088               	movwf	8	;volatile
  2797     040A                     l1203:
  2798                           
  2799                           ;clcd.c: 14:     RE1 = 1;
  2800     040A  1489               	bsf	9,1	;volatile
  2801     040B                     l1205:
  2802                           
  2803                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2804     040B  30A6               	movlw	166
  2805     040C  00F1               	movwf	??_clcd_write
  2806     040D                     u1217:
  2807     040D  0BF1               	decfsz	??_clcd_write,f
  2808     040E  2C0D               	goto	u1217
  2809     040F  0000               	nop
  2810     0410                     l1207:
  2811                           
  2812                           ;clcd.c: 16:     RE1 = 0;
  2813     0410  1283               	bcf	3,5	;RP0=0, select bank0
  2814     0411  1303               	bcf	3,6	;RP1=0, select bank0
  2815     0412  1089               	bcf	9,1	;volatile
  2816     0413                     l1209:
  2817                           
  2818                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2819     0413  301B               	movlw	27
  2820     0414  00F2               	movwf	??_clcd_write+1
  2821     0415  309E               	movlw	158
  2822     0416  00F1               	movwf	??_clcd_write
  2823     0417                     u1227:
  2824     0417  0BF1               	decfsz	??_clcd_write,f
  2825     0418  2C17               	goto	u1227
  2826     0419  0BF2               	decfsz	??_clcd_write+1,f
  2827     041A  2C17               	goto	u1227
  2828     041B  0000               	nop
  2829     041C                     l17:
  2830     041C  0008               	return
  2831     041D                     __end_of_clcd_write:
  2832     007E                     btemp	set	126	;btemp
  2833     007E                     wtemp0	set	126
  2834                           
  2835                           	psect	config
  2836                           
  2837                           ;Config register CONFIG @ 0x2007
  2838                           ;	Oscillator Selection bits
  2839                           ;	FOSC = 0x3, unprogrammed default
  2840                           ;	Watchdog Timer Enable bit
  2841                           ;	WDTE = OFF, WDT disabled
  2842                           ;	Power-up Timer Enable bit
  2843                           ;	PWRTE = 0x1, unprogrammed default
  2844                           ;	Brown-out Reset Enable bit
  2845                           ;	BOREN = 0x1, unprogrammed default
  2846                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2847                           ;	LVP = 0x1, unprogrammed default
  2848                           ;	Data EEPROM Memory Code Protection bit
  2849                           ;	CPD = 0x1, unprogrammed default
  2850                           ;	Flash Program Memory Write Enable bits
  2851                           ;	WRT = 0x3, unprogrammed default
  2852                           ;	In-Circuit Debugger Mode bit
  2853                           ;	DEBUG = 0x1, unprogrammed default
  2854                           ;	Flash Program Memory Code Protection bit
  2855                           ;	CP = 0x1, unprogrammed default
  2856     2007                     	org	8199
  2857     2007  3FFB               	dw	16379

Data Sizes:
    Strings     39
    Constant    0
    Data        34
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     58      78
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[5]), STR_1(CODE[17]), 
		 -> main@msg(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_clcd_print
    _read_matrix_keypad->_scan_keypad
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_putch->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                62    62      0    6205
                                              7 COMMON     4     4      0
                                              0 BANK0     58    58      0
                         _clcd_print
                         _clcd_putch
                        _init_config
                 _read_matrix_keypad
 ---------------------------------------------------------------------------------
 (1) _read_matrix_keypad                                   2     2      0     203
                                              2 COMMON     2     2      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          2     2      0      92
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     902
                          _init_clcd
                 _init_matrix_keypad
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1    1326
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     0      3    2033
                                              4 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     902
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clcd_putch
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_matrix_keypad
   _read_matrix_keypad
     _scan_keypad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3A      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6A      12        0.0%
ABS                  0      0      6A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Oct 18 10:15:05 2022

                              pc 0002                   clcd_print@addr 0076                               l20 047F  
                             l23 0334                               l32 03E6                               l17 041C  
                             l26 0370                               l47 033F                               l78 06E8  
                             fsr 0004               _init_matrix_keypad 0340                              l140 04A0  
                            l141 052B                              l134 034F                              l150 04D6  
                            l142 04AC                              l151 04D0                              l143 04A6  
                            l139 0498                              l164 0516                              l156 04EC  
                            l148 04C2                              l165 051E                              l157 04F4  
                            l149 04CA                              l158 0500                              l167 0524  
                            l159 04FA                              l175 03B7                              _RB0 0030  
                            _RB1 0031                              _RB2 0032                              _RD0 0040  
                            _RD1 0041                              _RD2 0042                              _RE1 0049  
                            _RD3 0043                              _RE2 004A                              u600 0498  
                            u601 0497                              u610 049E                              u611 049D  
                            u700 04F8                              u620 04A4                              u701 04F7  
                            u621 04A3                              u710 04FE                              u630 04AA  
                            u711 04FD                              u631 04A9                              u720 0516  
                            u640 04C2                              u800 03B4                              u721 0515  
                            u641 04C1                              u801 03B3                              u570 03EF  
                            u730 051C                              u650 04C8                              u810 053A  
                            u571 03EB                              u731 051B                              u651 04C7  
                            u740 0522                              u660 04CE                              u900 05FE  
                            u820 054F                              u741 0521                              u661 04CD  
                            u901 05FD                              u750 0528                              u670 04D4  
                            u910 061C                              u830 0579                              u751 0527  
                            u671 04D3                              u911 061B                              u831 0578  
                            u584 03F2                              u760 03E6                              u680 04EC  
                            u920 0626                              u840 0588                              u761 03E5  
                            u681 04EB                              u921 0625                              u905 05FA  
                            u841 0587                              u690 04F2                              u770 03A1  
                            u930 0642                              u850 0590                              u595 0402  
                            u691 04F1                              u771 03A0                              u931 0641  
                            u851 058E                              u780 03A8                              u940 066D  
                            u860 0591                              u781 03A7                              u941 066C  
                            u790 03AD                              u950 068F                              u870 0598  
                            u791 03AC                              u951 068E                              u871 0597  
                            u960 0695                              u880 05DF                              u961 0694  
                            u945 0669                              u881 05DE                              u970 06B7  
                            u890 05EB                              u971 06B6                              u891 05EA  
                            u980 06BD                              u981 06BC                              u990 06C3  
                            u991 06C2                   clcd_putch@addr 0074                              _pos 006A  
                            fsr0 0004                   clcd_putch@data 0075                              indf 0000  
            ?_init_matrix_keypad 0070                             l1201 03FE                             l1203 040A  
                           l1211 041D                             l1205 040B                             l1221 0448  
                           l1213 0425                             l1301 04F2                             l1207 0410  
                           l1231 0473                             l1223 044B                             l1215 042C  
                           l1209 0413                             l1233 047A                             l1225 0452  
                           l1217 043C                             l1241 032F                             l1321 051C  
                           l1313 04FE                             l1401 057B                             l1227 045E  
                           l1219 0441                             l1235 032A                             l1251 034D  
                           l1243 0340                             l1307 04F8                             l1411 05AF  
                           l1403 0588                             l1341 0361                             l1229 0463  
                           l1237 032D                             l1253 034E                             l1245 0348  
                           l1333 0528                             l1317 0504                             l1261 049E  
                           l1501 06EE                             l1421 05DF                             l1413 05B9  
                           l1405 058A                             l1191 03E8                             l1343 03B8  
                           l1239 032E                             l1247 0349                             l1351 0335  
                           l1327 0522                             l1319 0508                             l1255 0480  
                           l1511 070A                             l1503 06F2                             l1431 0602  
                           l1423 05E6                             l1407 0592                             l1193 03F2  
                           l1345 03C0                             l1249 034C                             l1337 052A  
                           l1281 04C8                             l1273 04AA                             l1257 0486  
                           l1353 0396                             l1521 0724                             l1505 06F4  
                           l1441 0626                             l1433 060B                             l1425 05EB  
                           l1417 05C5                             l1409 0598                             l1195 03F5  
                           l1347 03D0                             l1267 04A4                             l1259 048A  
                           l1363 03A3                             l1355 039C                             l1531 0748  
                           l1515 0711                             l1523 0733                             l1451 0658  
                           l1443 062A                             l1427 05F1                             l1435 0616  
                           l1611 05CF                             l1419 05D7                             l1197 03F6  
                           l1349 03D6                             l1293 04D4                             l1277 04B0  
                           l1365 03A8                             l1357 03A1                             l1541 0768  
                           l1533 0754                             l1525 0739                             l1517 0713  
                           l1509 06FE                             l1461 066E                             l1453 065C  
                           l1445 0631                             l1437 061C                             l1429 05FE  
                           l1199 03FB                             l1287 04CE                             l1279 04B4  
                           l1367 03AD                             l1375 03AF                             l1551 079A  
                           l1543 076E                             l1527 0741                             l1519 071E  
                           l1471 068F                             l1463 067B                             l1455 065E  
                           l1439 0622                             l1447 063C                             l1391 0560  
                           l1383 052C                             l1297 04DA                             l1377 03B4  
                           l1561 07B3                             l1553 079D                             l1537 075B  
                           l1545 077D                             l1481 06A7                             l1473 0695  
                           l1457 0660                             l1449 0642                             l1393 0566  
                           l1385 0532                             l1299 04DE                             l1379 03B6  
                           l1563 07C0                             l1555 07A3                             l1547 0783  
                           l1539 075D                             l1491 06CC                             l1475 0697  
                           l1483 06B1                             l1467 0682                             l1395 056B  
                           l1387 0547                             l1557 07A5                             l1549 0797  
                           l1493 06D4                             l1485 06B7                             l1477 069B  
                           l1469 0689                             l1397 0574                             l1389 055C  
                           l1567 07C7                             l1495 06DF                             l1487 06BD  
                           l1479 06A1                             l1399 0579                             l1569 07CE  
                           l1497 06E1                             l1489 06C3                             l1499 06E9  
                           STR_1 0024                             STR_2 0035                             STR_3 0013  
                           STR_4 0013                             u1000 06EE                             u1001 06ED  
                           u1010 06FD                             u1011 06FC                             u1100 07A3  
                           u1020 0732                             u1101 07A2                             u1021 0731  
                           u1110 07B2                             u1030 0739                             u1111 07B1  
                           u1031 0738                             u1120 07D4                             u1040 0747  
                           u1121 07D3                             u1041 0746                             u1050 077C  
                           u1115 07AE                             u1051 077B                             u1060 0783  
                           u1061 0782                             u1070 078A                             u1207 03F8  
                           u1071 0788                             u1080 078B                             u1217 040D  
                           u1137 0421                             u1090 0797                             u1227 0417  
                           u1147 0430                             u1091 0796                             u1157 043E  
                           u1167 0454                             u1177 0460                             u1187 046E  
                           u1197 047C                             _main 052C                             btemp 007E  
                           start 0000             ??_init_matrix_keypad 0070                   clcd_write@byte 0073  
                 clcd_write@mode 0070                            ?_main 0070                     ?_init_config 0070  
                          _PORTD 0008                            _TRISB 0086                            _TRISD 0088  
                   main@key_copy 0057                            _nRBPU 040F               _read_matrix_keypad 0395  
                          main@i 004C                            main@j 0030                            pclath 000A  
            ?_read_matrix_keypad 0070                            status 0003                            wtemp0 007E  
                   ?_scan_keypad 0070                  __initialization 07D8                     __end_of_main 07D8  
           ??_read_matrix_keypad 0072                           ??_main 0077               main@prev_direction 004B  
                         _TRISE1 0449                           _TRISE2 044A          _init_display_controller 041D  
                   __pdataCOMMON 007B          __end_of__initialization 07FC                   __pcstackCOMMON 0070  
                   __pidataBANK0 0371                     __pidataBANK1 0350                       __pbssBANK0 006B  
      ??_init_display_controller 0074                       _clcd_print 03B8                       _clcd_putch 0360  
                     _clcd_write 03E7                       __pmaintext 052C                       __stringtab 0003  
                 main@pause_flag 0048                   main@msg_buffer 0020                          __ptext1 0395  
                        __ptext2 0480                          __ptext3 0335                          __ptext4 0340  
                        __ptext5 032A                          __ptext6 041D                          __ptext7 0360  
                        __ptext8 03B8                          __ptext9 03E7  __end_of_init_display_controller 0480  
              __end_of_init_clcd 0335                          main@key 0056                          main@msg 0034  
                        main@num 0058             end_of_initialization 07FC                      ?_clcd_print 0074  
                    ?_clcd_putch 0074                      ?_clcd_write 0070                    clcd_print@str 0074  
            main@first_iter_flag 0044                    __pidataCOMMON 0329              start_initialization 07D8  
                   scan_keypad@i 0070           read_matrix_keypad@mode 0072           read_matrix_keypad@once 007B  
                     init_fetch0 0382                      __pdataBANK0 005A                      __pdataBANK1 00A0  
                main@blink_delay 006B                    ??_init_config 0076                        ___latbits 0002  
                  __pcstackBANK0 0020                    ??_scan_keypad 0070                        __pstrings 0003  
                      _init_clcd 032A              __end_of_init_config 0340                main@toggle_cursor 006D  
       ?_init_display_controller 0070                     ??_clcd_print 0077                     ??_clcd_putch 0075  
     __end_of_init_matrix_keypad 0350                     ??_clcd_write 0071              __end_of_scan_keypad 052C  
                    __stringbase 0012                        main@index 0054               __end_of_clcd_print 03E7  
             __end_of_clcd_putch 0371               __end_of_clcd_write 041D                       ?_init_clcd 0070  
          read_matrix_keypad@key 0073       __end_of_read_matrix_keypad 03B8               __end_of__stringtab 0013  
                    _init_config 0335                      _scan_keypad 0480                         main@F872 005A  
                       main@F874 00A0               main@edit_mode_flag 0046                         main@i_90 004E  
                       main@i_92 0050                         main@i_94 0052                         main@j_93 0032  
                       main@temp 004A                         init_ram0 0386                      ??_init_clcd 0076  
                      stringcode 000D                         stringdir 000D                         stringtab 0003  
